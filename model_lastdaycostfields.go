/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the Lastdaycostfields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Lastdaycostfields{}

// Lastdaycostfields struct for Lastdaycostfields
type Lastdaycostfields struct {
	ClustersCost  *float32 `json:"clusters_cost,omitempty"`
	InstancesCost *float32 `json:"instances_cost,omitempty"`
	TotalCost     *float32 `json:"total_cost,omitempty"`
	VolumesCost   *float32 `json:"volumes_cost,omitempty"`
}

// NewLastdaycostfields instantiates a new Lastdaycostfields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastdaycostfields() *Lastdaycostfields {
	this := Lastdaycostfields{}
	return &this
}

// NewLastdaycostfieldsWithDefaults instantiates a new Lastdaycostfields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastdaycostfieldsWithDefaults() *Lastdaycostfields {
	this := Lastdaycostfields{}
	return &this
}

// GetClustersCost returns the ClustersCost field value if set, zero value otherwise.
func (o *Lastdaycostfields) GetClustersCost() float32 {
	if o == nil || IsNil(o.ClustersCost) {
		var ret float32
		return ret
	}
	return *o.ClustersCost
}

// GetClustersCostOk returns a tuple with the ClustersCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastdaycostfields) GetClustersCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ClustersCost) {
		return nil, false
	}
	return o.ClustersCost, true
}

// HasClustersCost returns a boolean if a field has been set.
func (o *Lastdaycostfields) HasClustersCost() bool {
	if o != nil && !IsNil(o.ClustersCost) {
		return true
	}

	return false
}

// SetClustersCost gets a reference to the given float32 and assigns it to the ClustersCost field.
func (o *Lastdaycostfields) SetClustersCost(v float32) {
	o.ClustersCost = &v
}

// GetInstancesCost returns the InstancesCost field value if set, zero value otherwise.
func (o *Lastdaycostfields) GetInstancesCost() float32 {
	if o == nil || IsNil(o.InstancesCost) {
		var ret float32
		return ret
	}
	return *o.InstancesCost
}

// GetInstancesCostOk returns a tuple with the InstancesCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastdaycostfields) GetInstancesCostOk() (*float32, bool) {
	if o == nil || IsNil(o.InstancesCost) {
		return nil, false
	}
	return o.InstancesCost, true
}

// HasInstancesCost returns a boolean if a field has been set.
func (o *Lastdaycostfields) HasInstancesCost() bool {
	if o != nil && !IsNil(o.InstancesCost) {
		return true
	}

	return false
}

// SetInstancesCost gets a reference to the given float32 and assigns it to the InstancesCost field.
func (o *Lastdaycostfields) SetInstancesCost(v float32) {
	o.InstancesCost = &v
}

// GetTotalCost returns the TotalCost field value if set, zero value otherwise.
func (o *Lastdaycostfields) GetTotalCost() float32 {
	if o == nil || IsNil(o.TotalCost) {
		var ret float32
		return ret
	}
	return *o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastdaycostfields) GetTotalCostOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCost) {
		return nil, false
	}
	return o.TotalCost, true
}

// HasTotalCost returns a boolean if a field has been set.
func (o *Lastdaycostfields) HasTotalCost() bool {
	if o != nil && !IsNil(o.TotalCost) {
		return true
	}

	return false
}

// SetTotalCost gets a reference to the given float32 and assigns it to the TotalCost field.
func (o *Lastdaycostfields) SetTotalCost(v float32) {
	o.TotalCost = &v
}

// GetVolumesCost returns the VolumesCost field value if set, zero value otherwise.
func (o *Lastdaycostfields) GetVolumesCost() float32 {
	if o == nil || IsNil(o.VolumesCost) {
		var ret float32
		return ret
	}
	return *o.VolumesCost
}

// GetVolumesCostOk returns a tuple with the VolumesCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lastdaycostfields) GetVolumesCostOk() (*float32, bool) {
	if o == nil || IsNil(o.VolumesCost) {
		return nil, false
	}
	return o.VolumesCost, true
}

// HasVolumesCost returns a boolean if a field has been set.
func (o *Lastdaycostfields) HasVolumesCost() bool {
	if o != nil && !IsNil(o.VolumesCost) {
		return true
	}

	return false
}

// SetVolumesCost gets a reference to the given float32 and assigns it to the VolumesCost field.
func (o *Lastdaycostfields) SetVolumesCost(v float32) {
	o.VolumesCost = &v
}

func (o Lastdaycostfields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Lastdaycostfields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClustersCost) {
		toSerialize["clusters_cost"] = o.ClustersCost
	}
	if !IsNil(o.InstancesCost) {
		toSerialize["instances_cost"] = o.InstancesCost
	}
	if !IsNil(o.TotalCost) {
		toSerialize["total_cost"] = o.TotalCost
	}
	if !IsNil(o.VolumesCost) {
		toSerialize["volumes_cost"] = o.VolumesCost
	}
	return toSerialize, nil
}

type NullableLastdaycostfields struct {
	value *Lastdaycostfields
	isSet bool
}

func (v NullableLastdaycostfields) Get() *Lastdaycostfields {
	return v.value
}

func (v *NullableLastdaycostfields) Set(val *Lastdaycostfields) {
	v.value = val
	v.isSet = true
}

func (v NullableLastdaycostfields) IsSet() bool {
	return v.isSet
}

func (v *NullableLastdaycostfields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastdaycostfields(val *Lastdaycostfields) *NullableLastdaycostfields {
	return &NullableLastdaycostfields{value: val, isSet: true}
}

func (v NullableLastdaycostfields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastdaycostfields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
