/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the OverviewInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OverviewInfo{}

// OverviewInfo struct for OverviewInfo
type OverviewInfo struct {
	Container *ContainerOverviewFields `json:"container,omitempty"`
	Instance  *InstanceOverviewFields  `json:"instance,omitempty"`
	Volume    *VolumeOverviewFields    `json:"volume,omitempty"`
}

// NewOverviewInfo instantiates a new OverviewInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOverviewInfo() *OverviewInfo {
	this := OverviewInfo{}
	return &this
}

// NewOverviewInfoWithDefaults instantiates a new OverviewInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOverviewInfoWithDefaults() *OverviewInfo {
	this := OverviewInfo{}
	return &this
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *OverviewInfo) GetContainer() ContainerOverviewFields {
	if o == nil || IsNil(o.Container) {
		var ret ContainerOverviewFields
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverviewInfo) GetContainerOk() (*ContainerOverviewFields, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *OverviewInfo) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given ContainerOverviewFields and assigns it to the Container field.
func (o *OverviewInfo) SetContainer(v ContainerOverviewFields) {
	o.Container = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *OverviewInfo) GetInstance() InstanceOverviewFields {
	if o == nil || IsNil(o.Instance) {
		var ret InstanceOverviewFields
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverviewInfo) GetInstanceOk() (*InstanceOverviewFields, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *OverviewInfo) HasInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given InstanceOverviewFields and assigns it to the Instance field.
func (o *OverviewInfo) SetInstance(v InstanceOverviewFields) {
	o.Instance = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *OverviewInfo) GetVolume() VolumeOverviewFields {
	if o == nil || IsNil(o.Volume) {
		var ret VolumeOverviewFields
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverviewInfo) GetVolumeOk() (*VolumeOverviewFields, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *OverviewInfo) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given VolumeOverviewFields and assigns it to the Volume field.
func (o *OverviewInfo) SetVolume(v VolumeOverviewFields) {
	o.Volume = &v
}

func (o OverviewInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OverviewInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Container) {
		toSerialize["container"] = o.Container
	}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullableOverviewInfo struct {
	value *OverviewInfo
	isSet bool
}

func (v NullableOverviewInfo) Get() *OverviewInfo {
	return v.value
}

func (v *NullableOverviewInfo) Set(val *OverviewInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOverviewInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOverviewInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOverviewInfo(val *OverviewInfo) *NullableOverviewInfo {
	return &NullableOverviewInfo{value: val, isSet: true}
}

func (v NullableOverviewInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOverviewInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
