/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateUpdatePolicyPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUpdatePolicyPayload{}

// CreateUpdatePolicyPayload struct for CreateUpdatePolicyPayload
type CreateUpdatePolicyPayload struct {
	Description string  `json:"description"`
	IsPublic    bool    `json:"is_public"`
	Name        string  `json:"name"`
	Permissions []int32 `json:"permissions"`
}

type _CreateUpdatePolicyPayload CreateUpdatePolicyPayload

// NewCreateUpdatePolicyPayload instantiates a new CreateUpdatePolicyPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUpdatePolicyPayload(description string, isPublic bool, name string, permissions []int32) *CreateUpdatePolicyPayload {
	this := CreateUpdatePolicyPayload{}
	this.Description = description
	this.IsPublic = isPublic
	this.Name = name
	this.Permissions = permissions
	return &this
}

// NewCreateUpdatePolicyPayloadWithDefaults instantiates a new CreateUpdatePolicyPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUpdatePolicyPayloadWithDefaults() *CreateUpdatePolicyPayload {
	this := CreateUpdatePolicyPayload{}
	return &this
}

// GetDescription returns the Description field value
func (o *CreateUpdatePolicyPayload) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePolicyPayload) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateUpdatePolicyPayload) SetDescription(v string) {
	o.Description = v
}

// GetIsPublic returns the IsPublic field value
func (o *CreateUpdatePolicyPayload) GetIsPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePolicyPayload) GetIsPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPublic, true
}

// SetIsPublic sets field value
func (o *CreateUpdatePolicyPayload) SetIsPublic(v bool) {
	o.IsPublic = v
}

// GetName returns the Name field value
func (o *CreateUpdatePolicyPayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePolicyPayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateUpdatePolicyPayload) SetName(v string) {
	o.Name = v
}

// GetPermissions returns the Permissions field value
func (o *CreateUpdatePolicyPayload) GetPermissions() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePolicyPayload) GetPermissionsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *CreateUpdatePolicyPayload) SetPermissions(v []int32) {
	o.Permissions = v
}

func (o CreateUpdatePolicyPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUpdatePolicyPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["is_public"] = o.IsPublic
	toSerialize["name"] = o.Name
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

func (o *CreateUpdatePolicyPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"is_public",
		"name",
		"permissions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUpdatePolicyPayload := _CreateUpdatePolicyPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUpdatePolicyPayload)

	if err != nil {
		return err
	}

	*o = CreateUpdatePolicyPayload(varCreateUpdatePolicyPayload)

	return err
}

type NullableCreateUpdatePolicyPayload struct {
	value *CreateUpdatePolicyPayload
	isSet bool
}

func (v NullableCreateUpdatePolicyPayload) Get() *CreateUpdatePolicyPayload {
	return v.value
}

func (v *NullableCreateUpdatePolicyPayload) Set(val *CreateUpdatePolicyPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUpdatePolicyPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUpdatePolicyPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUpdatePolicyPayload(val *CreateUpdatePolicyPayload) *NullableCreateUpdatePolicyPayload {
	return &NullableCreateUpdatePolicyPayload{value: val, isSet: true}
}

func (v NullableCreateUpdatePolicyPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUpdatePolicyPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
