/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the MetricsFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsFields{}

// MetricsFields struct for MetricsFields
type MetricsFields struct {
	Cpu          *MetricItemFields `json:"cpu,omitempty"`
	DiskRead     *MetricItemFields `json:"disk.read,omitempty"`
	DiskWrite    *MetricItemFields `json:"disk.write,omitempty"`
	MemoryUsages *MetricItemFields `json:"memory.usages,omitempty"`
	NetworkIn    *MetricItemFields `json:"network.in,omitempty"`
	NetworkOut   *MetricItemFields `json:"network.out,omitempty"`
}

// NewMetricsFields instantiates a new MetricsFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsFields() *MetricsFields {
	this := MetricsFields{}
	return &this
}

// NewMetricsFieldsWithDefaults instantiates a new MetricsFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsFieldsWithDefaults() *MetricsFields {
	this := MetricsFields{}
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *MetricsFields) GetCpu() MetricItemFields {
	if o == nil || IsNil(o.Cpu) {
		var ret MetricItemFields
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsFields) GetCpuOk() (*MetricItemFields, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *MetricsFields) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given MetricItemFields and assigns it to the Cpu field.
func (o *MetricsFields) SetCpu(v MetricItemFields) {
	o.Cpu = &v
}

// GetDiskRead returns the DiskRead field value if set, zero value otherwise.
func (o *MetricsFields) GetDiskRead() MetricItemFields {
	if o == nil || IsNil(o.DiskRead) {
		var ret MetricItemFields
		return ret
	}
	return *o.DiskRead
}

// GetDiskReadOk returns a tuple with the DiskRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsFields) GetDiskReadOk() (*MetricItemFields, bool) {
	if o == nil || IsNil(o.DiskRead) {
		return nil, false
	}
	return o.DiskRead, true
}

// HasDiskRead returns a boolean if a field has been set.
func (o *MetricsFields) HasDiskRead() bool {
	if o != nil && !IsNil(o.DiskRead) {
		return true
	}

	return false
}

// SetDiskRead gets a reference to the given MetricItemFields and assigns it to the DiskRead field.
func (o *MetricsFields) SetDiskRead(v MetricItemFields) {
	o.DiskRead = &v
}

// GetDiskWrite returns the DiskWrite field value if set, zero value otherwise.
func (o *MetricsFields) GetDiskWrite() MetricItemFields {
	if o == nil || IsNil(o.DiskWrite) {
		var ret MetricItemFields
		return ret
	}
	return *o.DiskWrite
}

// GetDiskWriteOk returns a tuple with the DiskWrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsFields) GetDiskWriteOk() (*MetricItemFields, bool) {
	if o == nil || IsNil(o.DiskWrite) {
		return nil, false
	}
	return o.DiskWrite, true
}

// HasDiskWrite returns a boolean if a field has been set.
func (o *MetricsFields) HasDiskWrite() bool {
	if o != nil && !IsNil(o.DiskWrite) {
		return true
	}

	return false
}

// SetDiskWrite gets a reference to the given MetricItemFields and assigns it to the DiskWrite field.
func (o *MetricsFields) SetDiskWrite(v MetricItemFields) {
	o.DiskWrite = &v
}

// GetMemoryUsages returns the MemoryUsages field value if set, zero value otherwise.
func (o *MetricsFields) GetMemoryUsages() MetricItemFields {
	if o == nil || IsNil(o.MemoryUsages) {
		var ret MetricItemFields
		return ret
	}
	return *o.MemoryUsages
}

// GetMemoryUsagesOk returns a tuple with the MemoryUsages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsFields) GetMemoryUsagesOk() (*MetricItemFields, bool) {
	if o == nil || IsNil(o.MemoryUsages) {
		return nil, false
	}
	return o.MemoryUsages, true
}

// HasMemoryUsages returns a boolean if a field has been set.
func (o *MetricsFields) HasMemoryUsages() bool {
	if o != nil && !IsNil(o.MemoryUsages) {
		return true
	}

	return false
}

// SetMemoryUsages gets a reference to the given MetricItemFields and assigns it to the MemoryUsages field.
func (o *MetricsFields) SetMemoryUsages(v MetricItemFields) {
	o.MemoryUsages = &v
}

// GetNetworkIn returns the NetworkIn field value if set, zero value otherwise.
func (o *MetricsFields) GetNetworkIn() MetricItemFields {
	if o == nil || IsNil(o.NetworkIn) {
		var ret MetricItemFields
		return ret
	}
	return *o.NetworkIn
}

// GetNetworkInOk returns a tuple with the NetworkIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsFields) GetNetworkInOk() (*MetricItemFields, bool) {
	if o == nil || IsNil(o.NetworkIn) {
		return nil, false
	}
	return o.NetworkIn, true
}

// HasNetworkIn returns a boolean if a field has been set.
func (o *MetricsFields) HasNetworkIn() bool {
	if o != nil && !IsNil(o.NetworkIn) {
		return true
	}

	return false
}

// SetNetworkIn gets a reference to the given MetricItemFields and assigns it to the NetworkIn field.
func (o *MetricsFields) SetNetworkIn(v MetricItemFields) {
	o.NetworkIn = &v
}

// GetNetworkOut returns the NetworkOut field value if set, zero value otherwise.
func (o *MetricsFields) GetNetworkOut() MetricItemFields {
	if o == nil || IsNil(o.NetworkOut) {
		var ret MetricItemFields
		return ret
	}
	return *o.NetworkOut
}

// GetNetworkOutOk returns a tuple with the NetworkOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsFields) GetNetworkOutOk() (*MetricItemFields, bool) {
	if o == nil || IsNil(o.NetworkOut) {
		return nil, false
	}
	return o.NetworkOut, true
}

// HasNetworkOut returns a boolean if a field has been set.
func (o *MetricsFields) HasNetworkOut() bool {
	if o != nil && !IsNil(o.NetworkOut) {
		return true
	}

	return false
}

// SetNetworkOut gets a reference to the given MetricItemFields and assigns it to the NetworkOut field.
func (o *MetricsFields) SetNetworkOut(v MetricItemFields) {
	o.NetworkOut = &v
}

func (o MetricsFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.DiskRead) {
		toSerialize["disk.read"] = o.DiskRead
	}
	if !IsNil(o.DiskWrite) {
		toSerialize["disk.write"] = o.DiskWrite
	}
	if !IsNil(o.MemoryUsages) {
		toSerialize["memory.usages"] = o.MemoryUsages
	}
	if !IsNil(o.NetworkIn) {
		toSerialize["network.in"] = o.NetworkIn
	}
	if !IsNil(o.NetworkOut) {
		toSerialize["network.out"] = o.NetworkOut
	}
	return toSerialize, nil
}

type NullableMetricsFields struct {
	value *MetricsFields
	isSet bool
}

func (v NullableMetricsFields) Get() *MetricsFields {
	return v.value
}

func (v *NullableMetricsFields) Set(val *MetricsFields) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsFields) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsFields(val *MetricsFields) *NullableMetricsFields {
	return &NullableMetricsFields{value: val, isSet: true}
}

func (v NullableMetricsFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
