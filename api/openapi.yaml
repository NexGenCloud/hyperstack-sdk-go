openapi: 3.0.1
info:
  description: "Leverage the Infrahub API and Hyperstack platform to easily create,\
    \ manage, and scale powerful GPU virtual machines and their associated resources.\
    \ \n\nAccess this SDK to automate the deployment of your workloads and streamline\
    \ your infrastructure management.\n\nTo contribute, please raise an issue with\
    \ a bug report, feature request, feedback, or general inquiry."
  title: Infrahub-API
  version: "1.0"
servers:
- url: https://infrahub-api.nexgencloud.com/v1
tags:
- description: Authentication APIs using authentik
  name: auth
- description: Organizations API
  name: organization
- description: API Key
  name: api key
- description: Invite APIs
  name: invite
- description: Permission APIs
  name: permission
- description: User Permission APIs
  name: user permission
- description: Policy APIs
  name: policy
- description: RBAC Role APIs
  name: rbac role
- description: Assigning Member Role APIs
  name: assigning member role
- description: Beta Access APIs
  name: beta access
- description: Partner config fetch endpoint
  name: partner-config
- description: Dashboard APIs
  name: dashboard
- description: Stock APIs
  name: stock
- description: Environment APIs
  name: environment
- description: Virtual Machine Event APIs
  name: virtual machine events
- description: Virtual Machine APIs
  name: virtual machine
- description: Flavor APIs
  name: flavor
- description: Image APIs
  name: image
- description: Keypair APIs
  name: keypair
- description: VNC Console Link APIs
  name: vnc url
- description: Volume APIs
  name: volume
- description: Volume Attachment APIs
  name: volume attachment
- description: GPU APIs
  name: gpu
- description: Callback APIs
  name: callbacks
- description: Floating IP APIs
  name: floating ip
- description: Region APIs
  name: region
- description: Templates APIs
  name: template
- description: Deployment APIs
  name: deployment
- description: Security Rule APIs
  name: security-rules
- description: Profile APIs
  name: profile
- description: Cluster APIs
  name: clusters
- description: Cluster Event APIs
  name: cluster events
- description: Compliance APIs
  name: compliance
- description: Firewalls APIs
  name: firewalls
- description: Firewall Attachments APIs
  name: firewall-attachment
- description: User Detail Choice APIs
  name: user detail choice
- description: Snapshot APIs
  name: Snapshots
- description: Snapshot Events APIs
  name: snapshot events
- description: Pricebook APIs
  name: Pricebook
- description: Calculate APIs
  name: Calculate
- description: Customer Contract APIs
  name: Customer Contract
- name: alive
- name: billing
- name: credit
- name: payment
- name: user
paths:
  /api-key:
    get:
      description: "Retrieves your API keys, granting access to the Infrahub APIs.\
        \ For further details on API keys, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/api-key/retrieve-api-key)."
      operationId: Retrieve_API_Key
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApiKeysResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve API Keys
      tags:
      - api key
  /api-key/generate:
    post:
      description: "Generates your API key, providing access to the Infrahub APIs.\
        \ For further details on API keys, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/api-key/generate-api-key)."
      operationId: Generate_API_Key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUpdateApiKeyPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateUpdateApiKeyResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      summary: Generate API Key
      tags:
      - api key
      x-codegen-request-body-name: payload
  /api-key/{api_key_id}:
    delete:
      description: Delete a specified API key by including the ID of the API key in
        the path.
      operationId: Delete_API_Key
      parameters:
      - explode: false
        in: path
        name: api_key_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete API Key
      tags:
      - api key
    put:
      description: Updates the name and optionally the description of a specified
        API key. Include the ID of the API key in the path and the new name and optional
        description in the body of the request.
      operationId: Update_API_Key
      parameters:
      - explode: false
        in: path
        name: api_key_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUpdateApiKeyPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateUpdateApiKeyResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update API Key
      tags:
      - api key
      x-codegen-request-body-name: payload
  /auth/beta-access/requests:
    get:
      description: Check the status of all beta access requests.
      operationId: Get_beta_access_status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BetaAccessStatusResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Check the status of all beta access requests
      tags:
      - beta access
    post:
      description: Creates a new beta access request for the current user
      operationId: Create_a_beta_access_request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BetaAccessRequestPayload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BetaAccessRequestResponseModel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create a new beta access request
      tags:
      - beta access
      x-codegen-request-body-name: payload
  /auth/beta-access/requests/{program}:
    get:
      description: Check the status of a particular beta access requests.
      operationId: Get_beta_access_status_2
      parameters:
      - explode: false
        in: path
        name: program
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BetaAccessStatusResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Check the status of beta access requests
      tags:
      - beta access
  /auth/invites:
    get:
      description: "Retrieve a list of email invitations from your organization. For\
        \ additional information on listing invited users, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/organization/invites/list-invites)."
      operationId: List_Invites
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvitesResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Invites
      tags:
      - invite
    post:
      description: "Invites a user to join your organization. For additional information\
        \ on inviting users to the organization, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/organization/invites/invite-member)."
      operationId: Invite_User_to_Organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserPayload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteUserResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Invite User to Organization
      tags:
      - invite
      x-codegen-request-body-name: payload
  /auth/invites/{id}:
    delete:
      description: "Deletes an invitation for a user to join your organization. For\
        \ additional information on deleting an invitation, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/organization/invites/delete-invite)."
      operationId: Delete_Invite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
          description: Invite accepted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Accept Invite
      tags:
      - invite
  /auth/invites/{id}/accept:
    get:
      description: Accept an invitation for a user to join your organization.
      operationId: Accept_Invite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
          description: Invite deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Accept Invite
      tags:
      - invite
  /auth/me:
    get:
      description: "Retrieves detailed information about the currently authenticated\
        \ user. For additional information, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/auth)."
      operationId: Retrieve_Authenticated_User_Details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoResponseModel'
          description: User Information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Authenticated User Details
      tags:
      - auth
  /auth/me/mfa:
    get:
      description: Retrieve the Multi-Factor Authentication (MFA) status for the currentlyauthenticated
        user. Includes whether MFA is enabled.
      operationId: Get_User_MFA_Status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAStatusResponse'
          description: MFA Status
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: User not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get MFA status for authenticated user
      tags:
      - auth
  /auth/me/mfa/disable:
    get:
      description: Disable Multi-Factor Authentication (MFA) for the currently authenticated
        user. This endpoint is used to turn off MFA.
      operationId: Disable_MFA
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
          description: MFA Disabled
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: User not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      tags:
      - auth
  /auth/me/organizations:
    get:
      description: Retrieve the organizations associated with a user by their user
        ID. This endpoint is useful for understanding the user's organizational affiliations.
      operationId: Get_User_Organizations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrganizationsResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get User Organizations
      tags:
      - auth
  /auth/organizations:
    get:
      description: "Retrieves detailed information about your organization, including\
        \ current credit, threshold, number of instances, and number of volumes. For\
        \ additional information on organizations, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/organization/retrieve-org-details)."
      operationId: Retrieve_Organization_Information
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Organization Information
      tags:
      - organization
  /auth/organizations/remove-member:
    post:
      description: "Removes a member from your organization. For additional information,\
        \ [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/organization/remove-member)."
      operationId: Remove_Organization_Member
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveMemberPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveMemberFromOrganizationResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Remove Organization Member
      tags:
      - organization
      x-codegen-request-body-name: payload
  /auth/organizations/update:
    put:
      description: "Updates the name of the organization. For additional information,\
        \ [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/organization/update-org-name)."
      operationId: Update_Organization_Information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrganizationResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update Organization Information
      tags:
      - organization
      x-codegen-request-body-name: payload
  /auth/partner-config:
    get:
      description: Fetch the customised customer configuration for Hyperstack.
      operationId: Get_partner_config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfig'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      summary: Get partner config
      tags:
      - partner-config
  /auth/partner-config/docs:
    get:
      description: Fetch the partner config for a given domain.
      operationId: Get_partner_config_by_domain
      parameters:
      - description: The domain to look up the partner config for.
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfig'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      tags:
      - partner-config
  /auth/permissions:
    get:
      description: "Retrieves a list of permissions that users can be granted to access\
        \ a particular resource action. For additional information on permissions,\
        \ [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/permission/permissions)."
      operationId: List_Permissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionsResponseModel'
          description: Getting permissions success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Permissions
      tags:
      - permission
  /auth/policies:
    get:
      description: "Retrieves a list of policies available for addition to RBAC roles.\
        \ For additional information on policies, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/policies)."
      operationId: List_Policies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPoliciesResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Policies
      tags:
      - policy
  /auth/roles:
    get:
      description: "Retrieves a list of RBAC roles that can be assigned to the users\
        \ within an organization. For additional information on RBAC roles, [click\
        \ here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/rbac/list-rbac-roles)."
      operationId: List_RBAC_Roles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRbacRolesResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List RBAC Roles
      tags:
      - rbac role
    post:
      description: "Creates an RBAC role that can be assigned to users, granting them\
        \ access to specific resource actions. Provide the configuration of the RBAC\
        \ role, including its name, description, and list of permissions and policy\
        \ IDs in the request body. For additional information on creating RBAC roles,\
        \ [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/rbac/create-rbac-role)."
      operationId: Create_RBAC_Role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateRbacRolePayload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleDetailResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create RBAC Role
      tags:
      - rbac role
      x-codegen-request-body-name: payload
  /auth/roles/{id}:
    delete:
      description: "Deletes an RBAC role by providing its ID in the path. For additional\
        \ information, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/rbac/delete-rbac-role)."
      operationId: Delete_RBAC_Role
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete RBAC Role
      tags:
      - rbac role
    get:
      description: "Retrieves the details of a specified RBAC role by providing the\
        \ RBAC role ID in the path. For additional information, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/rbac/retrieve-rbac-details)."
      operationId: Retrieve_RBAC_Role_Details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleDetailResponseModelFixed'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve RBAC Role Details
      tags:
      - rbac role
    put:
      description: "Updates an RBAC role by providing the role ID in the path and\
        \ the modified role configuration in the request body, including its name,\
        \ description, and list of permissions and policy IDs. For additional information,\
        \ [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/rbac/update-rbac-role)."
      operationId: Update_RBAC_Role
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateRbacRolePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleDetailResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update RBAC Role
      tags:
      - rbac role
      x-codegen-request-body-name: payload
  /auth/token/change-org/{org_id}:
    get:
      description: Change the organization associated with the current token. This
        is useful for users who have access to multiple organizations.
      operationId: Change_Organization_for_Token
      parameters:
      - explode: false
        in: path
        name: org_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthGetTokenResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      tags:
      - auth
  /auth/users/me/permissions:
    get:
      description: "Retrieves a list of permissions granted to your account. For additional\
        \ information on your permissions, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/permission/list-my-permissions)."
      operationId: List_My_User_Permissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserPermissionsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List My User Permissions
      tags:
      - user permission
  /auth/users/{id}/permissions:
    get:
      description: "Retrieves a list of permissions granted to a specific user within\
        \ your organization. Provide the ID of the user in the path. For additional\
        \ information on user permissions, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/permission/list-user-permissions)."
      operationId: List_User_Permissions
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserPermissionsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List User Permissions
      tags:
      - user permission
  /auth/users/{user_id}/assign-roles:
    put:
      description: "Assigns a specific RBAC role to a user within your organization,\
        \ granting them access to the resource actions permitted by the role. Provide\
        \ the user ID in the path and the role ID in the request body. For additional\
        \ information, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/rbac/manage-member-roles/assign-rbac-role)."
      operationId: Assign_RBAC_Role_to_User
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRbacRolePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleDetailResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Assign RBAC Role
      tags:
      - assigning member role
      x-codegen-request-body-name: payload
  /auth/users/{user_id}/roles:
    delete:
      description: "Removes an RBAC role from a user within your organization, revoking\
        \ the resource permissions they had access to. Provide the user ID in the\
        \ path. For additional information, [click here](https://docs.hyperstack.cloud/docs/api-reference/auth-resources/rbac/manage-member-roles/revoke-rbac-role)."
      operationId: Remove_RBAC_Role_From_User
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Remove RBAC Role From User
      tags:
      - assigning member role
  /billing/alive:
    get:
      description: "Retrieve the billing status of your account to ensure that it\
        \ is active. An active billing status ensures uninterrupted service. For additional\
        \ information [**click here**](None/docs/api-reference/billing-resources/alive/)."
      operationId: get_alive
      responses:
        "200":
          content: {}
          description: Success
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: Alive"
      tags:
      - alive
  /billing/alive/doc:
    get:
      operationId: get_doc
      responses:
        "200":
          content: {}
          description: Success
      security:
      - accessToken: []
      - apiKey: []
      tags:
      - alive
  /billing/billing/history:
    get:
      description: "User will recieve billing history for the specified billing cycle.\
        \ This data will include 'incurred_bill', 'non_discounted_bill', 'vm_cost',\
        \ 'volume_cost'"
      operationId: get_user_billing_history_2
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Set this value to "true" for getting graph value
        explode: true
        in: query
        name: graph
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationLevelBillingHistoryResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History for a specific Billing Cycle
      tags:
      - billing
  /billing/billing/history/bucket:
    get:
      description: "User will recieve billing history of buckets for thespecified\
        \ billing cycle. This data will include 'resource_name', 'infrahub_id', 'status',\
        \ 'incurred_bill', 'usage_time', 'price_per_hour'"
      operationId: get_user_billing_history_bucket_2
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by resource "Name" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelBucketBillingHistoryResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of Volume for a specific Billing Cycle
      tags:
      - billing
  /billing/billing/history/bucket/{bucket_id}:
    get:
      description: "Retrieve billing history of a specific Bucket for the specified\
        \ billing cycle. This data will include 'resource_name', 'infrahub_id', 'price_per_hour',\
        \ 'incurred_bill', 'usage_time', 'non_discounted_price_per_hour', 'non_discounted_bill'."
      operationId: get_user_billing_history_bucket_details
      parameters:
      - explode: false
        in: path
        name: bucket_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Datetime should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Datetime should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelBucketBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of a Specific Snapshot for a specific Billing
        Cycle
      tags:
      - billing
  /billing/billing/history/bucket/{bucket_id}/graph:
    get:
      description: User will recieve hourly cost datapoints for a Bucket for a specified
        billing cycle. This data will include 'incurred_bill' graph datapoints.
      operationId: get_user_billing_bucket_details_graph
      parameters:
      - explode: false
        in: path
        name: bucket_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelGraphBillingDetailsBucket'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve hourly cost datapoints of a Specific Bucket for a specific
        billing cycle
      tags:
      - billing
  /billing/billing/history/cluster:
    get:
      description: "User will receive billing history of clusters for the specified\
        \ billing cycle. This data will include 'resource_name', 'infrahub_id', 'status',\
        \ 'incurred_bill', 'usage_time', 'price_per_hour'"
      operationId: get_user_billing_history_cluster
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by resource "Name" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelClusterBillingHistoryResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of Clusters for a specific Billing Cycle
      tags:
      - billing
  /billing/billing/history/cluster/{cluster_id}:
    get:
      description: "User will receive billing history of a specific Cluster for the\
        \ specified billing cycle. This data will include 'resource_name', 'infrahub_id',\
        \ 'price_per_hour', 'non_discounted_price_per_hour', 'incurred_bill', 'non_discounted_bill',\
        \ 'usage_time', 'usage_time_ACTIVE', 'usage_time_SHUTOFF', 'usage_time_HIBERNATED'."
      operationId: get_user_billing_history_cluster_details
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelClusterBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of a Specific Cluster for a specific Billing
        Cycle
      tags:
      - billing
  /billing/billing/history/cluster/{cluster_id}/graph:
    get:
      description: User will receive hourly cost datapoints for a Cluster for a specified
        billing cycle. This data will include 'incurred_bill' graph datapoints.
      operationId: get_user_billing_cluster_details_graph
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelClusterGraphBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve hourly cost datapoints of a specific Cluster for a specific
        billing cycle
      tags:
      - billing
  /billing/billing/history/contract:
    get:
      description: "User will recieve billing history of contracts for the specified\
        \ billing cycle. This data will include 'description', gpu_type','infrahub_id',\
        \ 'status', 'incurred_bill', 'price_per_hour'"
      operationId: get_user_billing_history_contract
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by Contract "Description" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of Contract for a specific Billing Cycle
      tags:
      - billing
  /billing/billing/history/data_synthesis:
    get:
      description: User will recieve billing history of data_synthesis for the specified
        billing cycle.
      operationId: get_user_billing_history_data_synthesis
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by resource "Name" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBasedBillingHistoryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of data synthesis for a specific Billing Cycle
      tags:
      - billing
  /billing/billing/history/data_synthesis/{resource_id}:
    get:
      description: "Retrieve billing history for a specific Data Synthesis resource.\
        \ Includes: 'resource_name', 'infrahub_id', 'base_model', 'base_model_display_name',\
        \ 'lora_adapter', 'incurred_bill', 'non_discounted_bill', 'usage_time', 'input_tokens',\
        \ 'output_tokens', 'input_tokens_incurred_bill', 'input_tokens_non_discounted_bill',\
        \ 'output_tokens_incurred_bill', 'output_tokens_non_discounted_bill'"
      operationId: get_user_billing_history_data_synthesis_details
      parameters:
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: integer
        style: simple
      - description: YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSynthesisBillingHistoryDetailsResponseSchema'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      tags:
      - billing
  /billing/billing/history/data_synthesis/{resource_id}/graph:
    get:
      description: |-
        User will receive hourly cost datapoints for a data synthesis job for a specified billing cycle. This data will include 'incurred_bill' graph datapoints.
        billing cycle
      operationId: get_user_billing_data_synthesis_details_graph
      parameters:
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSynthesisBillingHistoryDetailsResponseSchema'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve hourly cost datapoints of a Specific Data Synthesis for a
        specific
      tags:
      - billing
  /billing/billing/history/fine_tuning:
    get:
      description: User will recieve billing history of fine_tuning for the specified
        billing cycle.
      operationId: get_user_billing_history_fine_tuning
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by resource "Name" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadBillingHistoryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of model evaluation for a specific Billing
        Cycle
      tags:
      - billing
  /billing/billing/history/fine_tuning/{resource_id}:
    get:
      description: "Retrieve billing history of a specific Fine tunning for the specified\
        \ billing cycle. This data will include 'resource_name', 'infrahub_id', 'price_per_hour',\
        \ 'incurred_bill', 'usage_time', 'non_discounted_price_per_hour', 'non_discounted_bill'."
      operationId: get_user_billing_history_fine_tuning_details
      parameters:
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Datetime should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Datetime should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVolumeBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of a Specific Fine Tuning for a specific Billing
        Cycle
      tags:
      - billing
  /billing/billing/history/fine_tuning/{resource_id}/graph:
    get:
      description: User will recieve hourly cost datapoints for a Fine Tunings for
        a specified billing cycle. This data will include 'incurred_bill' graph datapoints.
      operationId: get_user_billing_fine_tuning_details_graph
      parameters:
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVolumeGraphBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve hourly cost datapoints of a Specific Fine Tuning for a specific
        billing cycle
      tags:
      - billing
  /billing/billing/history/model_evaluation:
    get:
      description: User will recieve billing history of model_evaluation for the specified
        billing cycle.
      operationId: get_user_billing_history_model_evaluation
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by resource "Name" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBasedBillingHistoryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of model evaluation for a specific Billing
        Cycle
      tags:
      - billing
  /billing/billing/history/model_evaluation/{resource_id}:
    get:
      description: "Retrieve billing history for a specific Model Evaluation resource.\
        \ Includes: 'resource_name', 'infrahub_id', 'base_model', 'base_model_display_name',\
        \ 'lora_adapter', 'incurred_bill', 'non_discounted_bill', 'usage_time', 'input_tokens',\
        \ 'output_tokens', 'input_tokens_incurred_bill', 'input_tokens_non_discounted_bill',\
        \ 'output_tokens_incurred_bill', 'output_tokens_non_discounted_bill'"
      operationId: get_user_billing_history_model_evaluation_details
      parameters:
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: integer
        style: simple
      - description: YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelEvaluationBillingHistoryDetailsResponseSchema'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      tags:
      - billing
  /billing/billing/history/model_evaluation/{resource_id}/graph:
    get:
      description: |-
        User will receive hourly cost datapoints for a model evaluation for a specified billing cycle. This data will include 'incurred_bill' graph datapoints.
        billing cycle
      operationId: get_user_billing_model_evaluation_details_graph
      parameters:
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelEvaluationBillingHistoryDetailsResponseSchema'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve hourly cost datapoints of a Specific Model Evaluation for
        a specific
      tags:
      - billing
  /billing/billing/history/serverless_inference:
    get:
      description: User will recieve billing history of serverless_inference for the
        specified billing cycle.
      operationId: get_user_billing_history_serverless_inference
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by resource "Name" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBasedBillingHistoryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of serverless inference for a specific Billing
        Cycle
      tags:
      - billing
  /billing/billing/history/serverless_inference/{resource_id}:
    get:
      description: "Retrieve billing history for a specific Serverless Inference resource.\
        \ Includes: 'resource_name', 'infrahub_id', 'base_model', 'base_model_display_name',\
        \ 'lora_adapter', 'incurred_bill', 'non_discounted_bill', 'usage_time', 'input_tokens',\
        \ 'output_tokens', 'input_tokens_incurred_bill', 'input_tokens_non_discounted_bill',\
        \ 'output_tokens_incurred_bill', 'output_tokens_non_discounted_bill'"
      operationId: get_user_billing_history_serverless_inference_details
      parameters:
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: integer
        style: simple
      - description: YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerlessInferencedBillingHistoryDetailsResponseSchema'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      tags:
      - billing
  /billing/billing/history/serverless_inference/{resource_id}/graph:
    get:
      description: |-
        User will recieve hourly cost datapoints for a serverles inference for a specified billing cycle. This data will include 'incurred_bill' graph datapoints.
        billing cycle
      operationId: get_user_billing_serverless_inference_details_graph
      parameters:
      - explode: false
        in: path
        name: resource_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerlessInferencedBillingHistoryDetailsResponseSchema'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve hourly cost datapoints of a Specific Serverless Inference
        for a specific
      tags:
      - billing
  /billing/billing/history/snapshot:
    get:
      description: "User will recieve billing history of snapshots for thespecified\
        \ billing cycle. This data will include 'resource_name', 'infrahub_id', 'status',\
        \ 'incurred_bill', 'usage_time', 'price_per_hour'"
      operationId: get_user_billing_history_snapshot
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by resource "Name" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVolumeBillingHistoryResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of Snapshot for a specific Billing Cycle
      tags:
      - billing
  /billing/billing/history/snapshot/{snapshot_id}:
    get:
      description: "Retrieve billing history of a specific Snapshot for the specified\
        \ billing cycle. This data will include 'resource_name', 'infrahub_id', 'price_per_hour',\
        \ 'incurred_bill', 'usage_time', 'non_discounted_price_per_hour', 'non_discounted_bill'."
      operationId: get_user_billing_history_snapshot_details
      parameters:
      - explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Datetime should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Datetime should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVolumeBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of a Specific Snapshot for a specific Billing
        Cycle
      tags:
      - billing
  /billing/billing/history/snapshot/{snapshot_id}/graph:
    get:
      description: User will recieve hourly cost datapoints for a Snapshot for a specified
        billing cycle. This data will include 'incurred_bill' graph datapoints.
      operationId: get_user_billing_snapshot_details_graph
      parameters:
      - explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVolumeGraphBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve hourly cost datapoints of a Specific Snapshot for a specific
        billing cycle
      tags:
      - billing
  /billing/billing/history/virtual-machine:
    get:
      description: "User will recieve billing history of virtual machine for the specified\
        \ billing cycle. This data will include 'resource_name', 'infrahub_id', 'status',\
        \ 'incurred_bill', 'usage_time', 'price_per_hour'"
      operationId: get_user_billing_history_vm_2
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by resource "Name" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVmBillingHistoryResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of Virtual Machine for a specific Billing
        Cycle
      tags:
      - billing
  /billing/billing/history/virtual-machine/{vm_id}:
    get:
      description: "User will recieve billing history of a specific Virtual Machine\
        \ for the specified billing cycle. This data will include 'resource_name',\
        \ 'infrahub_id', 'price_per_hour', 'non_discounted_price_per_hour', 'incurred_bill',\
        \ 'non_discounted_bill', 'usage_time', 'usage_time_ACTIVE', 'usage_time_SHUTOFF',\
        \ 'usage_time_HIBERNATED'"
      operationId: get_user_billing_history_vm_details_2
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVMBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of a Specific Virtual Machine for a specific
        Billing Cycle
      tags:
      - billing
  /billing/billing/history/virtual-machine/{vm_id}/graph:
    get:
      description: User will recieve hourly cost datapoints for a VM for a specified
        billing cycle. This data will include 'incurred_bill' graph datapoints.
      operationId: get_user_billing_vm_details_graph_2
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVmGraphBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve hourly cost datapoints of a Specific Virtual Machine for a
        specific billing cycle
      tags:
      - billing
  /billing/billing/history/volume:
    get:
      description: "User will recieve billing history of volumes for thespecified\
        \ billing cycle. This data will include 'resource_name', 'infrahub_id', 'status',\
        \ 'incurred_bill', 'usage_time', 'price_per_hour'"
      operationId: get_user_billing_history_volume_2
      parameters:
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: Search by resource "Name" or "ID"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVolumeBillingHistoryResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of Volume for a specific Billing Cycle
      tags:
      - billing
  /billing/billing/history/volume/{volume_id}:
    get:
      description: "Retrieve billing history of a specific Volume for the specified\
        \ billing cycle. This data will include 'resource_name', 'infrahub_id', 'price_per_hour',\
        \ 'incurred_bill', 'usage_time', 'non_discounted_price_per_hour', 'non_discounted_bill'."
      operationId: get_user_billing_history_volume_details_2
      parameters:
      - explode: false
        in: path
        name: volume_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVolumeBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing History of a Specific Volume for a specific Billing
        Cycle
      tags:
      - billing
  /billing/billing/history/volume/{volume_id}/graph:
    get:
      description: User will recieve hourly cost datapoints for a Volume for a specified
        billing cycle. This data will include 'incurred_bill' graph datapoints.
      operationId: get_user_billing_volume_details_graph
      parameters:
      - explode: false
        in: path
        name: volume_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLevelVolumeGraphBillingDetailsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve hourly cost datapoints of a Specific Volume for a specific
        billing cycle
      tags:
      - billing
  /billing/billing/last-day-cost:
    get:
      description: "Retrieve the previous day's costs for instances, volumes, and\
        \ clusters. Returns a breakdown of  the costs and the total cost for the last\
        \ day. For additional information on Retrieve Previous Day Usage Costs, [**click\
        \ here**](None/docs/api-reference/billing-resources/last-day-usage/)"
      operationId: get_last_day_cost
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Last_day_cost_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: Last Day Cost"
      tags:
      - billing
  /billing/billing/threshold:
    get:
      description: Retrieve all the notification thresholds for an organization.
      operationId: get_organization_threshold
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization_thresholds_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: All Thresholds for Organization"
      tags:
      - billing
  /billing/billing/threshold/{threshold_id}:
    put:
      description: "By default, you are subscribed to all the threshold values and\
        \ you will be receiving the email notification for these default thresholds\
        \ values. `false` indicates that the user will no longer receive notifications\
        \ for this specific threshold, whereas `true` signifies that the user will\
        \ receive notification emails."
      operationId: put_organization_threshold
      parameters:
      - explode: false
        in: path
        name: threshold_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscribe_or_unsubscribe_update_payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization_threshold_update_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "Update: Subscribe or Unsubscribe Notification Threshold"
      tags:
      - billing
      x-codegen-request-body-name: payload
  /billing/billing/usage:
    get:
      description: "Retrieve active billing metrics for the organization's resources,\
        \ including pricing, uptime, and total cost. Returns usage details for each\
        \ active resource by defualt(`deleted=false` will return active resources).\
        \ Additionally, adding `deleted=true` in query parameter will return inactive\
        \ resources. For additional information on view usage costs for all resources,\
        \ [**click here**](None/docs/billing/pricebook/)"
      operationId: get_usage_2
      parameters:
      - description: '`true` will return inactive resources and `false` will return
          active resources. By defualt(`deleted=false`)'
        explode: true
        in: query
        name: deleted
        required: false
        schema:
          type: string
        style: form
      - description: Filter resources by environment ID or Name
        explode: true
        in: query
        name: environment
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Billing_metrices_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: Billing usage"
      tags:
      - billing
  /billing/billing/virtual-machine/{vm_id}/billing-events:
    get:
      description: User will receive vm billing events history
      operationId: get_user_vm_billing_events
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBillingEventsHistoryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve VM billing events history
      tags:
      - billing
  /billing/billing/virtual-machine/{vm_id}/sub-resource:
    get:
      description: |-
        User will get total costs and non_discount costs of sub resources on a specific Virtual Machine for the specified billing cycle.
        on a Specific VM for the Specified Billing Cycle
      operationId: get_user_billing_history_vm_total_costs
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubResourcesCostsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Total Costs and Non Discount Costs for Sub Resources
      tags:
      - billing
  /billing/billing/virtual-machine/{vm_id}/sub-resource/graph:
    get:
      description: |-
        User will recieve sub-resources historical cost datapoints for a VM sub resources for a specified billing cycle. This data will include 'incurred_bill' graph datapoints.
        Machine sub resources for a specific billing cycle
      operationId: get_user_billing_history_vm_sub_resource_graph_2
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubResourcesGraphResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Sub-Resources Historical Cost datapoints of a Virtual
      tags:
      - billing
  /billing/billing/volume/{volume_id}/billing-events:
    get:
      description: User will receive volume billing events history
      operationId: get_user_volume_billing_events
      parameters:
      - explode: false
        in: path
        name: volume_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBillingEventsHistoryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Volume billing events history
      tags:
      - billing
  /billing/payment/payment-details:
    get:
      description: "Retrieves a list of all payments made within your [**organization**](/docs/rbac/organization)\
        \ and their details, including the amount, payment status, and more. For additional\
        \ information [**click here**](None/docs/api-reference/billing-resources/retrieve-payment-history/)."
      operationId: get_details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment_Details_Response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: View payment details"
      tags:
      - payment
  /billing/payment/payment-initiate:
    post:
      description: "Creates a payment for a specified amount, adding credit to the\
        \ balance of your [**organization**](/docs/rbac/organization). Include the\
        \ `amount` in the body of the request to make a payment for the specified\
        \ value in dollars. View a history of past payments by calling the [**Retrieve\
        \ Payment History**](/docs/api-reference/billing-resources/retrieve-payment-history)\
        \ API. For additional information [**click here**](None/docs/api-reference/billing-resources/create-payment)."
      operationId: post_payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment_Initiate_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment_Initiate_Response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "POST: Initiate payment"
      tags:
      - payment
      x-codegen-request-body-name: payload
  /billing/payment/receipt/{payment_id}:
    get:
      description: Retrieve the payment receipt from Stripe for a specific payment
      operationId: get_payment_receipt_2
      parameters:
      - explode: false
        in: path
        name: payment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Payment Receipt
      tags:
      - payment
  /billing/user-credit/credit:
    get:
      description: "Retrieves the current credit balance for your [**organization**](/docs/rbac/organization).\
        \ Ensuring a positive credit balance allows you to create resources. However,\
        \ for prepaid accounts, if the credit balance falls below $0, all associated\
        \ resources will be temporarily suspended until a [**payment**](/docs/api-reference/billing-resources/create-payment)\
        \ is made. For additional information, [**click here**](None/docs/api-reference/billing-resources/retrieve-credit-balance/)."
      operationId: get_credit_2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get_credit_and_threshold_info_in_response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: View credit and threshold"
      tags:
      - credit
  /billing/user/info:
    get:
      description: Retrieve the billing details associated with your organization.
      operationId: get_user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInfoListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: Retrieve billing info"
      tags:
      - user
    post:
      description: Add billing details associated with your organization in the request
        body.
      operationId: post_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_info_post_payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserInfoSuccessResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "POST: Insert billing info"
      tags:
      - user
      x-codegen-request-body-name: payload
    put:
      description: Update the billing information for your organization in the request
        body.
      operationId: put_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_info_post_payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserInfoSuccessResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "PUT: Update billing info"
      tags:
      - user
      x-codegen-request-body-name: payload
  /core/clusters:
    get:
      operationId: List_Clusters
      parameters:
      - description: Page number for pagination
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Environment Filter
        explode: true
        in: query
        name: environment
        required: false
        schema:
          type: string
        style: form
      - description: Search query to filter cluster by name
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Clusters
      tags:
      - clusters
    post:
      operationId: Create_Cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Cluster_Payload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unprocessable entity
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create Cluster
      tags:
      - clusters
      x-codegen-request-body-name: payload
  /core/clusters/master-flavors:
    get:
      operationId: Get_Cluster_Master_Flavors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterFlavorsResponse'
          description: Retrieved Flavors.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get Cluster Master Flavors
      tags:
      - clusters
  /core/clusters/name-availability/{name}:
    get:
      description: Check if a Cluster name is available
      operationId: Fetch_cluster_name_availability
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailableModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Fetch cluster name availability
      tags:
      - clusters
  /core/clusters/versions:
    get:
      description: "Lists available Kubernetes versions, optionally filtered by region."
      operationId: Get_Cluster_Versions
      parameters:
      - description: Filter versions by region name (optional)
        explode: true
        in: query
        name: region
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterVersions'
          description: Retrieved Cluster Versions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Cluster Versions
      tags:
      - clusters
  /core/clusters/{cluster_id}/events:
    get:
      operationId: Fetch_all_of_a_cluster_events
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterEvents'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Fetch all of a cluster events
      tags:
      - cluster events
  /core/clusters/{cluster_id}/node-groups:
    get:
      operationId: List_Node_Groups
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNodeGroupsListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List node groups for a cluster
      tags:
      - clusters
    post:
      operationId: Create_Node_Group
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_ClusterNodeGroup_payload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNodeGroupsCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create a node group in a cluster
      tags:
      - clusters
      x-codegen-request-body-name: payload
  /core/clusters/{cluster_id}/node-groups/{node_group_id}:
    delete:
      operationId: Delete_a_Node_Group
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: node_group_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete a node group
      tags:
      - clusters
    get:
      operationId: Retrieve_a_Node_Group
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: node_group_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNodeGroupsGetResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve a node group in a cluster
      tags:
      - clusters
  /core/clusters/{cluster_id}/nodes:
    get:
      operationId: Get_Cluster_Nodes
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNodesListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get Cluster Nodes
      tags:
      - clusters
    post:
      operationId: Create_Node
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterNodeFields'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNodesListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create Node
      tags:
      - clusters
      x-codegen-request-body-name: payload
  /core/clusters/{cluster_id}/nodes/{node_id}:
    delete:
      operationId: Delete_Cluster_Node
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: node_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete Cluster Node
      tags:
      - clusters
  /core/clusters/{cluster_id}/reconcile:
    post:
      operationId: Attempt_to_manually_reconcile_a_cluster
      parameters:
      - explode: false
        in: path
        name: cluster_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualReconciliationModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Reconcile a cluster
      tags:
      - clusters
  /core/clusters/{id}:
    delete:
      operationId: Delete_a_cluster
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete a cluster
      tags:
      - clusters
    get:
      operationId: Getting_Cluster_Detail
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Getting Cluster Detail
      tags:
      - clusters
  /core/compliance:
    get:
      description: "Returns a list of compliance objects each corresponding to available\
        \ GPU models. These compliance objects contain minimum and maximum values\
        \ for RAM in GB, number of vCPUs, and system disk capacity in GB. Use the\
        \ optional `gpu` model parameter in the query string to filter responses by\
        \ GPU model. For additional details on GPU compliance, [**click here**](https://docs.hyperstack.cloud/docs/hardware/flavors#adhering-to-gpu-compliance)."
      operationId: Retrieve_compliance
      parameters:
      - description: This is for gpu model
        explode: true
        in: query
        name: gpu
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceResponse'
          description: Compliance list retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Acceptable
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve GPU compliance
      tags:
      - compliance
    post:
      operationId: Create_Compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompliancePayload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateComplianceResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create compliance
      tags:
      - compliance
      x-codegen-request-body-name: payload
    put:
      operationId: Update_a_compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompliancePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateComplianceResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update a compliance
      tags:
      - compliance
      x-codegen-request-body-name: payload
  /core/compliance/{gpu_model}:
    delete:
      operationId: Delete_a_compliance
      parameters:
      - explode: false
        in: path
        name: gpu_model
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete a compliance
      tags:
      - compliance
  /core/dashboard:
    get:
      description: "Returns hardware and pricing overview for your active resources,\
        \ includingvirtual machines, containers, and volumes. For more details on\
        \ the Dashboard feature, [**click here**](https://docs.hyperstack.cloud/docs/resource-management/dashboard/)."
      operationId: Retrieve_Dashboard
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard_Info_Response'
          description: Getting dashboard info success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Dashboard
      tags:
      - dashboard
  /core/environments:
    get:
      description: "Returns a list of your existing environments, providing the following\
        \ details for each; environment ID, name, [**region**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/environments/),\
        \ and the date and time of creation. For more information on environments,\
        \ [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/environments/)."
      operationId: List_environments
      parameters:
      - description: Page Number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Data Per Page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: string
        style: form
      - description: Search By ID or Name or Region
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environments'
          description: Successful retrieval of environments list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List environments
      tags:
      - environment
    post:
      description: "Creates an environment—a container to organize your resources,\
        \ including SSH key pairs, virtual machines, and volumes. To create your environment,\
        \ provide your desired environment name, and [**region**](https://docs.hyperstack.cloud/docs/resource-management/regions/)\
        \ in the request body."
      operationId: Create_environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Environment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment has been created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create environment
      tags:
      - environment
      x-codegen-request-body-name: payload
  /core/environments/name-availability/{name}:
    get:
      description: Check if a Environment name is available
      operationId: Fetch_environment_name_availability
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailableModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Fetch environment name availability
      tags:
      - environment
  /core/environments/{id}:
    delete:
      description: Deletes an environment permanently. Provide the environment ID
        in the path to remove the specified environment.
      operationId: Delete_environment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: The environment has been successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete environment
      tags:
      - environment
    get:
      description: Retrieves details about a specific environment. Provide the environment
        ID in the path and the new environment `name` in the request body to modify
        the specified environment.
      operationId: Retrieve_environment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment details retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve environment
      tags:
      - environment
    put:
      description: Updates the name of an existing environment. Provide the environment
        ID in the path and the new environment `name` in the request body to modify
        the specified environment.
      operationId: Update_environment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_Environment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment name successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update environment
      tags:
      - environment
      x-codegen-request-body-name: payload
  /core/firewalls:
    get:
      description: "Retrieves a list of existing firewalls and their details, including\
        \ the security rules they contain and information about the virtual machines\
        \ to which they are attached. For more information about the firewalls features\
        \ offered by Infrahub, [**click here**](https://docs.hyperstack.cloud/docs/network-security/security-groups)."
      operationId: get_security_group
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Filter Environment ID or Name
        explode: true
        in: query
        name: environment
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallsListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List firewalls
      tags:
      - firewalls
    post:
      description: "Creates a firewall to which firewall rules can be added. A firewall\
        \ can be attached to one or more virtual machines to control inbound and outbound\
        \ traffic. In the body of the request, include the name of the firewall, the\
        \ ID of the environment within which the firewall will be created, and an\
        \ optional description. To obtain the ID of the environment, make a request\
        \ to the [**list environments**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/environments/list-environments)\
        \ endpoint."
      operationId: post_security_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create firewall
      tags:
      - firewalls
      x-codegen-request-body-name: payload
  /core/firewalls/{firewall_id}/firewall-rules:
    post:
      description: "Creates a [**firewall rule**](https://docs.hyperstack.cloud/docs/network-security/security-rules)\
        \ and adds it to an existing firewall. Include the firewall ID in the path,\
        \ and provide the firewall rule configuration in the request body."
      operationId: post_security_group_rules
      parameters:
      - explode: false
        in: path
        name: firewall_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Firewall_Rule_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firewall_Rule'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Add firewall rule to firewall
      tags:
      - firewalls
      x-codegen-request-body-name: payload
  /core/firewalls/{firewall_id}/firewall-rules/{firewall_rule_id}:
    delete:
      description: "Removes a firewall rule from firewall by providing the firewall\
        \ ID and firewall rule ID in the path. For more information, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/firewalls/remove-firewall-rule-from-firewall)."
      operationId: delete_security_group_rule_delete
      parameters:
      - explode: false
        in: path
        name: firewall_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: firewall_rule_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Exists
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete firewall rules from firewall
      tags:
      - firewalls
  /core/firewalls/{firewall_id}/update-attachments:
    post:
      description: "Attach a firewall to one or more virtual machines by providing\
        \ the virtual machine IDs in the request body and the firewall ID in the path.\
        \ For more information, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/firewalls/attach-firewall-to-vms)."
      operationId: post_attach_security_groups
      parameters:
      - explode: false
        in: path
        name: firewall_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachFirewallWithVM'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach Firewalls to VMs
      tags:
      - firewall-attachment
      x-codegen-request-body-name: payload
  /core/firewalls/{id}:
    delete:
      description: "Deletes a firewall by specifying the firewall ID in the path.\
        \ If the firewall is currently attached to a virtual machine, it must be detached\
        \ before deletion. For more information, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/firewalls/delete-firewall)."
      operationId: delete_security_group_details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete firewall
      tags:
      - firewalls
    get:
      description: "Retrieves the details of an existing firewall, including the security\
        \ rules it contains and information about the virtual machines to which it\
        \ is attached."
      operationId: get_security_group_details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallDetailResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve firewall details
      tags:
      - firewalls
  /core/flavors:
    get:
      description: "Returns a list of available virtual machine hardware configurations,\
        \ known as**flavors**. You can specify a `region_name` in the query string\
        \ of the request toretrieve flavors available only in the specified region;\
        \ by default, it returnsflavors available in all regions. For more details\
        \ on flavors,[**click here**](https://docs.hyperstack.cloud/docs/hardware/flavors)."
      operationId: List_Flavors
      parameters:
      - description: Region Name
        explode: true
        in: query
        name: region
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flavor_List_Response'
          description: Successful retrieval of flavors list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Flavors
      tags:
      - flavor
  /core/gpus:
    get:
      description: Returns a list of all available GPUs that can be utilized in the
        creation of custom virtual machine configurations.
      operationId: List_GPUs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GPU_List'
          description: Retrieval of GPUs list successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List GPUs
      tags:
      - gpu
  /core/image/name-availability/{name}:
    get:
      description: Check if an Image name is available
      operationId: Fetch_Image_name_availability
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailableModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Fetch name availability for Images
      tags:
      - image
  /core/images:
    get:
      description: "Returns a list of all available operating system (OS) images,\
        \ providing details about each image's corresponding virtual machine operating\
        \ system. You can include the optional `region` parameter in the query string\
        \ of the request to specifically return OS images from the designated region.\
        \ Additionally, use the `include_public` parameter to specify whether to include\
        \ public images in the response. For more information onOS images, [**click\
        \ here**](https://docs.hyperstack.cloud/docs/virtual-machines/images)."
      operationId: List_Images_2
      parameters:
      - description: Region Name
        explode: true
        in: query
        name: region
        required: false
        schema:
          type: string
        style: form
      - description: Flag to include public images in the response (true/false). Default
          is true.
        explode: true
        in: query
        name: include_public
        required: false
        schema:
          type: boolean
        style: form
      - description: Search query to filter images by name
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Page number for pagination
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of Images per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
          description: Retrieval of images list successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Acceptable
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Images
      tags:
      - image
  /core/images/{id}:
    delete:
      description: Deletes an image permanently. Provide the image ID in the path
        to specify the image to be deleted.
      operationId: Delete_image
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Image successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete an image
      tags:
      - image
    get:
      description: Retrieve details of a specific image by providing the image ID.
      operationId: Get_Image_Details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: include_related_vms
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: Image details retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get Private Image Details
      tags:
      - image
  /core/keypair/{id}:
    delete:
      description: Permanently deletes a specified key pair. Provide the key pair
        ID in the path to remove the designated key pair.
      operationId: Delete_key_pair
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Keypair successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete key pair
      tags:
      - keypair
    put:
      description: "Updates the name of a specified key pair. Provide the key pair\
        \ ID in the path, and include the new `name` in the request body."
      operationId: Update_key_pair_name
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_Keypair_Name'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Update_Keypair_name_response'
          description: Keypair name updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update key pair name
      tags:
      - keypair
      x-codegen-request-body-name: payload
  /core/keypairs:
    get:
      description: "Retrieves a list of your existing SSH key pairs, providing details\
        \ for each. For more information on SSH key pairs, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/keypairs/)."
      operationId: List_key_pairs
      parameters:
      - description: Page Number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Data Per Page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keypairs'
          description: Retrieval of key pairs list successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List key pairs
      tags:
      - keypair
    post:
      description: "Imports a new key pair for secure shell (SSH) access to your resources.\
        \ Provide the key name, environment name, and public key in the request body.\
        \ For more details on importing SSH key pairs, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/keypairs/import-keypair)."
      operationId: Import_key_pair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Import_Keypair_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import_Keypair_Response'
          description: Keypair is imported successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Import key pair
      tags:
      - keypair
      x-codegen-request-body-name: payload
  /core/marketplace/deployments:
    get:
      operationId: List_Deployments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployments'
          description: Getting deployments success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Deployments
      tags:
      - deployment
    post:
      operationId: Start_Deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Start_Deployment_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Start_Deployment'
          description: Deployment created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Start Deployment
      tags:
      - deployment
      x-codegen-request-body-name: payload
  /core/marketplace/deployments/{id}:
    delete:
      operationId: Delete_Deployment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete Deployment
      tags:
      - deployment
    get:
      operationId: Details_of_Deployment_by_ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Start_Deployment'
          description: Getting deployment detail success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Details of Deployment by ID
      tags:
      - deployment
  /core/marketplace/templates:
    get:
      description: "Returns a comprehensive list of templates, providing resource\
        \ configuration details for each. Optionally, specify the `visibility` as\
        \ `public` or `private` to retrieve templates with the desired visibility\
        \ status. To learn more about the templates feature, [**click here**](https://docs.hyperstack.cloud/docs/features/templates#view-a-list-of-templates)."
      operationId: List_templates
      parameters:
      - description: Specify the `visibility` status as either `public` or `private`
          to filter and retrieve templates with the desired visibility.
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Templates'
          description: Templates list successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Acceptable
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List templates
      tags:
      - template
    post:
      description: Creates a resource template for deployment.
      operationId: Create_template
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Create_template_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Template added successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create template
      tags:
      - template
  /core/marketplace/templates/{id}:
    delete:
      description: Permanently deletes a template. Supply the template ID in the path
        to delete the specified template.
      operationId: Delete_template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Template deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete template
      tags:
      - template
    get:
      description: "Retrieves the resource configuration details for a specified template.Provide\
        \ the template ID in the path to retrieve details for the specified template.For\
        \ additional information on template configuration details,[**click here**](https://docs.hyperstack.cloud/docs/api-references/)."
      operationId: Retrieve_template_details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Template details retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve template details
      tags:
      - template
    put:
      description: "Updates the details of a template. Modify the template name, description\
        \ and/or`is_public` status to change the public/private visibility of the\
        \ template."
      operationId: Update_template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_Template'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Template updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update template
      tags:
      - template
      x-codegen-request-body-name: payload
  /core/profiles:
    get:
      description: "Returns a list of your existing provisioning profiles, providing\
        \ virtual machine configuration details for each. For additional information\
        \ about profiles,[**click here**](https://docs.hyperstack.cloud/docs/virtual-machines/provisioning-profiles#load-a-provisioning-profile)."
      operationId: List_profiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile_List_Response'
          description: Getting profiles success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List profiles
      tags:
      - profile
    post:
      description: "Creates a provisioning profile to save the configuration of a\
        \ virtual machinefor future use. Include the profile name, description, and\
        \ virtual machine configuration details in the request body. For more information\
        \ about virtual machine profiles,[**click here**](https://docs.hyperstack.cloud/docs/virtual-machines/provisioning-profiles)."
      operationId: Create_profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Profile_Payload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Profile_Response'
          description: Profile created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create profile
      tags:
      - profile
      x-codegen-request-body-name: payload
  /core/profiles/{id}:
    delete:
      description: Permanently deletes a provisioning profile. Supply the profile
        ID in the path to delete the specified profile.
      operationId: Delete_profile
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Profile deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete profile
      tags:
      - profile
    get:
      description: "Retrieves details for an existing provisioning profile by supplying\
        \ the profile ID in the request path. For more information about profiles,\
        \ [**click here**](https://docs.hyperstack.cloud/docs/virtual-machines/provisioning-profiles)."
      operationId: Retrieve_profile_details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Profile_Response'
          description: Profile details retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve profile details
      tags:
      - profile
  /core/regions:
    get:
      description: "Lists the currently available regions, each representing a distinct\
        \ geographic  location housing a data center. For additional information on\
        \ regions, [**click here**](https://docs.hyperstack.cloud/docs/resource-management/regions)."
      operationId: List_Regions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regions'
          description: Successful retrieval of regions list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Regions
      tags:
      - region
  /core/sg-rules-protocols:
    get:
      description: Returns a list of all available protocols that can be used in the
        creation of firewall rules for your virtual machines.
      operationId: List_firewall_rule_protocols
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Rules_Protocol_Fields'
          description: Protocols list successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List firewall rule protocols
      tags:
      - security-rules
  /core/snapshots:
    get:
      description: "Retrieves a list of snapshot, providing details such as snapshot\
        \ name, timestamp, VM ID, and other relevant information."
      operationId: get_snapshots
      parameters:
      - description: Page Number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Data Per Page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: string
        style: form
      - description: Search By Snapshot ID or Name
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshots'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve list of snapshots with pagination
      tags:
      - Snapshots
  /core/snapshots/name-availability/{name}:
    get:
      description: Check if a Snapshot name is available
      operationId: Fetch_snapshot_name_availability
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailableModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Fetch snapshot name availability
      tags:
      - Snapshots
  /core/snapshots/{id}:
    delete:
      description: "Delete a snapshot. Provide the snapshot ID in the path to delete\
        \ the specified snapshot. If the snapshot is connected with an image, that\
        \ image will also bedeleted and the deleted image ID will be returned in the\
        \ success message response."
      operationId: delete_snapshot
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete snapshot
      tags:
      - Snapshots
    get:
      description: Retrieve a snapshot.
      operationId: get_snapshot
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotRetrieve'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve a snapshot
      tags:
      - Snapshots
  /core/snapshots/{id}/restore:
    post:
      description: Restore a snapshot.
      operationId: post_snapshot_restore
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotRestoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Restore a snapshot
      tags:
      - Snapshots
      x-codegen-request-body-name: payload
  /core/snapshots/{snapshot_id}/events:
    get:
      description: "Retrieves a list of all events for a Snapshot's history, which\
        \ records actions performed on the specific snapshot. Requires the snapshot\
        \ ID in the path."
      operationId: Fetch_all_events_for_a_snapshot
      parameters:
      - explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Success
      security:
      - accessToken: []
      - apiKey: []
      summary: Fetch all events for a snapshot
      tags:
      - snapshot events
  /core/snapshots/{snapshot_id}/image:
    post:
      description: Create a new custom image from an existing snapshot.Requires a
        name and any labels for your new custom image.
      operationId: Create_a_new_custom_image
      parameters:
      - explode: false
        in: path
        name: snapshot_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImagePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Create_Image'
          description: Creation of image successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Acceptable
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create an image from a snapshot
      tags:
      - Snapshots
      x-codegen-request-body-name: payload
  /core/stocks:
    get:
      description: "Returns information on current and upcoming GPU availability,\
        \ organized byregion and GPU model. For additional information on GPU stocks,[**click\
        \ here**](https://docs.hyperstack.cloud/docs/hardware/gpu-stock-information)."
      operationId: Retrieve_GPU_stocks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New_Stock_Retrive_Response'
          description: GPU stocks retrieved successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content: {}
          description: Stocks Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve GPU stocks
      tags:
      - stock
  /core/user/resources/defaults:
    get:
      description: "Retrieve the default choices for virtual machine deployment, including\
        \ the default region, flavor, and image."
      operationId: Retrieve_Default_Flavors_and_Images
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefaultChoicesForUserResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Default Flavors and Images
      tags:
      - user detail choice
  /core/virtual-machines:
    get:
      description: "Returns a list of your existing virtual machines, providing configuration\
        \ details for each. The list is sorted by creation date, with the oldest virtual\
        \ machines displayed first."
      operationId: get_instance
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: environment
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of Security Group IDs to ignore instances
          attached
        explode: true
        in: query
        name: exclude_firewalls
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instances'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List virtual machines
      tags:
      - virtual machine
    post:
      description: "Creates one or more virtual machines with the specified custom\
        \ configuration and features provided in the request body. For more information\
        \ about the virtual machine features offered by Infrahub, [**click here**](https://docs.hyperstack.cloud/docs/virtual-machines/virtual-machine-features#create-a-virtual-machine-with-custom-features)."
      operationId: post_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Instances_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstancesResponse'
          description: Virtual machine(s) created successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create virtual machines
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/contract/{contract_id}/virtual-machines:
    get:
      description: "Retrieves a list of virtual machines associated with a contract,\
        \ providing details such as virtual machine name, timestamp, flavor name,\
        \ and other relevant information. Please provide the ID of the relevant contract\
        \ in the path."
      operationId: get_contract_instances
      parameters:
      - explode: false
        in: path
        name: contract_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Page Number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Data Per Page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: string
        style: form
      - description: Search By Instance ID or Name
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractInstancesResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve virtual machines associated with a contract
      tags:
      - virtual machine
  /core/virtual-machines/name-availability/{name}:
    get:
      description: Check if a Virtual Machine name is available
      operationId: Fetch_virtual_machine_name_availability
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailableModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Fetch virtual machine name availability
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}:
    delete:
      description: Permanently deletes a virtual machine. Provide the virtual machine
        ID in the path to delete the specified virtual machine.
      operationId: delete_instance
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Virtual machine deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete virtual machine
      tags:
      - virtual machine
    get:
      description: "Retrieves the details of an existing virtual machine. Provide\
        \ the virtual machine ID in the path, and Infrahub will return information\
        \ about the corresponding VM."
      operationId: get_instance_2
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Virtual machine details retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve virtual machine details
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}/attach-callback:
    post:
      description: "Creates a callback URL for a specified virtual machine, enabling\
        \ the posting of action events executed on the virtual machine to the specified\
        \ URL. Provide the callback URL in the request body and the ID of the virtual\
        \ machine to which it is being attached in the path. For more details on virtual\
        \ machine callback URLs, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/virtual-machines/callbacks-vms/attach-callback-vm)."
      operationId: Attach_callback_to_virtual_machine
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attach_Callback_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attach_Callback_Response'
          description: Callback URL successfully attached to your virtual machine.
            Any action events on your virtual machine will be posted to the provided
            URL
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach callback to virtual machine
      tags:
      - callbacks
      x-codegen-request-body-name: payload
  /core/virtual-machines/{vm_id}/attach-firewalls:
    post:
      description: Attach firewalls to a virtual machine by providing the virtual
        machine ID in the path and the IDs of the firewalls in the request body; any
        firewalls not included will be detached.
      operationId: post_instance_attach_firewalls
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachFirewallsToVMPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach firewalls to a virtual machine
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/{vm_id}/attach-floatingip:
    post:
      description: "Initiates the creation of a public IP address and attaches it\
        \ to an existing virtual machine, making it accessible through the internet.\
        \ Include the virtual machine ID in the path to attach a public IP to the\
        \ specified VM. For more information on public IP addresses, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/virtual-machines/floating-ip/attach-floating-ip/)."
      operationId: Attach_public_IP_to_virtual_machine
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Public IP successfully attached to VM.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Insufficient balance to create the resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach public IP to virtual machine
      tags:
      - floating ip
  /core/virtual-machines/{vm_id}/attach-volumes:
    post:
      description: "Attaches one or more volumes to an existing virtual machine, expanding\
        \ its storage capacity by 2PB per attached volume. Include the VM ID in the\
        \ path and the volume IDs in the request body to attach the specified volumes.\
        \ For more detailson volume attachment, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/volumes/volume-attachment/attach-volumes/)."
      operationId: Attach_volumes_to_virtual_machine
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attach_Volumes_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attach_Volumes'
          description: Volumes have been successfully attached to the virtual machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach volumes to virtual machine
      tags:
      - volume attachment
      x-codegen-request-body-name: payload
  /core/virtual-machines/{vm_id}/console/{job_id}:
    get:
      description: "Retrieves the URL to access the VNC console for a specified virtual\
        \ machine by providing the virtual machine ID and the job ID in the path.\
        \ For more information, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/virtual-machines/vnc-console/retrieve-vnc-url)."
      operationId: get_vnc_url
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VNC_URL'
          description: Get VNC Console Link Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get VNC Console Link
      tags:
      - vnc url
  /core/virtual-machines/{vm_id}/delete-callback:
    delete:
      description: "Permanently deletes the callback URL associated with a specified\
        \ virtual machine by providing the virtual machine ID in the request path.\
        \ For additional information on virtual machine callback URLs, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/virtual-machines/callbacks-vms/delete-callback-vm)."
      operationId: Delete_virtual_machine_callback
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Virtual machine callback URL successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete virtual machine callback
      tags:
      - callbacks
  /core/virtual-machines/{vm_id}/detach-floatingip:
    post:
      description: "Removes a public IP address from an existing virtual machine,\
        \ disabling internet accessibility to the VM. Include the virtual machine\
        \ ID in the path to detach the public IP from the specified VM. For more information\
        \ on public IP addresses, [**click here**](https://docs.hyperstack.cloud/docs/virtual-machines/public-ip)."
      operationId: Detach_public_IP_from_virtual_machine
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Detach public IP from virtual machine
      tags:
      - floating ip
  /core/virtual-machines/{vm_id}/detach-volumes:
    post:
      description: Detaches one or more volumes attached to an existing virtual machine.
        Include the VM ID in the path and volume IDs in the request body to detach
        the specified volumes from the virtual machine.
      operationId: Detach_volumes_from_virtual_machine
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detach_Volumes_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detach_Volumes'
          description: Volumes have been successfully detached from the virtual machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Detach volumes from virtual machine
      tags:
      - volume attachment
      x-codegen-request-body-name: payload
  /core/virtual-machines/{vm_id}/events:
    get:
      description: "Retrieves a list of all events in a virtual machine's history,\
        \ which records actions performed on the specified virtual machine. Include\
        \ the virtual machine ID in the path to retrieve the history of events. For\
        \ more details on virtual machine events history, [**click here**](https://docs.hyperstack.cloud/docs/virtual-machines/vm-performance-metrics-and-events-history#events-history)."
      operationId: List_virtual_machine_events
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceEvents'
          description: Virtual machines event list successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List virtual machine events
      tags:
      - virtual machine events
  /core/virtual-machines/{vm_id}/hard-reboot:
    get:
      description: "Initiates a hard reboot for a virtual machine, simulating the\
        \ process of unplugging and rebooting a physical machine. Provide the virtual\
        \ machine ID in the path to execute a hard reboot for the specified virtual\
        \ machine."
      operationId: get_instance_3
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Hard reboot process has been successfully initiated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Hard reboot virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}/hibernate:
    get:
      description: "Initiates the hibernation of a virtual machine, saving its current\
        \ state to disk before powering off. Provide the virtual machine ID in the\
        \ path to specify the virtual machine to be hibernated."
      operationId: get_instance_hibernate
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Hibernation request for the virtual machine was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Hibernate virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}/hibernate-restore:
    get:
      description: "Resumes a virtual machine from hibernation, bringing it back to\
        \ an active state. Provide the virtual machine ID in the path to specify the\
        \ virtual machine to be restored from hibernation."
      operationId: get_instance_hibernate_restore
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: The request to restore the virtual machine from hibernation
            was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Restore virtual machine from hibernation
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}/label:
    put:
      description: "Adds one or more labels to an existing virtual machine. Provide\
        \ the virtual machine ID in the path to add labels to the specified VM. For\
        \ multiple labels, add a space between each label in the request body."
      operationId: put_labels
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edit_label_of_an_existing_VM_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Labels edited successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Edit virtual machine labels
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/{vm_id}/logs:
    get:
      description: Retrieve console logs for a virtual machine
      operationId: get_instance_logs
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: request_id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceLogsResponse'
          description: Logs were successfully retrieved
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get virtual machine logs
      tags:
      - virtual machine
    post:
      description: Request console logs for a virtual machine
      operationId: post_instance_logs
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInstanceLogsPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestInstanceLogsResponse'
          description: Logs were successfully requested
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Request virtual machine logs
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/{vm_id}/metrics:
    get:
      description: "Retrieves performance metrics data for a virtual machine. Provide\
        \ the virtual machine ID in the path to retrieve the following data for the\
        \ specified virtual machine: CPU usage, memory usage (RAM), `network.in`,\
        \ `network.out`, `disk.read`, and `disk.write`. The optional `duration` parameter\
        \ can be used to specify the period for retrieving performance metrics; the\
        \ default value will retrieve all available data. To learn more about virtual\
        \ machine performance metrics, [**click here**](https://docs.hyperstack.cloud/docs/virtual-machines/vm-performance-metrics-and-events-history#performance-metrics)."
      operationId: get_instance_metrics
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: duration
        required: false
        schema:
          enum:
          - 1h
          - 2h
          - 4h
          - 6h
          - 12h
          - 1d
          - 3d
          - 7d
          - 15d
          - 30d
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsFields'
          description: Virtual machine performance metrics have been successfully
            retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Acceptable
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve virtual machine performance metrics
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}/request-console:
    get:
      description: "Retrieves the path of the VNC console for the given virtual machine\
        \ ID by providing the virtual machine ID in the path. For more information,\
        \ [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/virtual-machines/vnc-console/retrieve-console-path)."
      operationId: get_vnc_url_2
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request_Console'
          description: Please wait a few seconds and visit the below link to access
            your VNC console URL
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Request Instance Console
      tags:
      - vnc url
  /core/virtual-machines/{vm_id}/resize:
    post:
      description: "Updates the hardware configuration for an existing virtual machine.\
        \ Include the virtual machine ID in the path and provide the new configuration,\
        \ referred to as a `flavor`, in the body of the request. For additional information\
        \ resizing, [**click here**](https://docs.hyperstack.cloud/docs/hardware/flavors#modify-the-flavor-of-an-existing-virtual-machine)."
      operationId: post_instance_resize
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceResizePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: The resizing of the virtual machine configuration was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Resize virtual machine
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/{vm_id}/sg-rules:
    post:
      description: "Creates a firewall rule for a virtual machine. Include the virtual\
        \ machine ID in the path, and provide the firewall rule configuration in the\
        \ request body, as detailed below. For additional information on firewall\
        \ rules, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/virtual-machines/vm-firewall-rules/add-firewall-rule-to-vm)."
      operationId: post_security_rule
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Security_Rule_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Group_Rule'
          description: The firewall rule has been successfully added to the virtual
            machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Add firewall rule to virtual machine
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/{vm_id}/sg-rules/{sg_rule_id}:
    delete:
      description: Deletes a firewall rule associated with a virtual machine. Provide
        the virtual machine ID and the firewall rule ID in the path to remove the
        specified rule from the specified virtual machine.
      operationId: delete_security_rule
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: sg_rule_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: The firewall rule has been successfully removed from the virtual
            machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete firewall rule from virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}/snapshots:
    post:
      description: Create snapshots of a virtual machine by providing the virtual
        machine ID in the path
      operationId: post_snapshots
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSnapshotPayload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create snapshot from a virtual machine
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/{vm_id}/start:
    get:
      description: Initiates the startup of a virtual machine. Provide the virtual
        machine ID in the path to initiate the starting of the specified virtual machine.
      operationId: get_instance_4
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Virtual machine started successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Start virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}/stop:
    get:
      description: Shuts down a virtual machine. Provide the virtual machine ID in
        the path to initiate the shutdown process for the specified virtual machine.
      operationId: get_instance_5
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Virtual machine shut down successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Stop virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}/update-callback:
    put:
      description: "Updates the callback URL for a specified virtual machine. Provide\
        \ the new callback URL in the request body, along with the ID of the associated\
        \ virtual machine in the path. For additional information on virtual machine\
        \ callback URLs, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/virtual-machines/callbacks-vms)."
      operationId: Update_virtual_machine_callback
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attach_Callback_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attach_Callback_Response'
          description: Virtual machine callback URL successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update virtual machine callback
      tags:
      - callbacks
      x-codegen-request-body-name: payload
  /core/volume-attachments/{volume_attachment_id}:
    patch:
      operationId: Update_a_volume_attachment
      parameters:
      - explode: false
        in: path
        name: volume_attachment_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_Volume_Attachment_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attach_Volumes'
          description: Volume attachment has been updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update a volume attachment
      tags:
      - volume attachment
      x-codegen-request-body-name: payload
  /core/volume-types:
    get:
      description: Retrieves a list of available volume types that can be used in
        the creation of a new volume.
      operationId: List_volume_types
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_Types'
          description: Successful retrieval of volume types list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List volume types
      tags:
      - volume
  /core/volume/name-availability/{name}:
    get:
      description: Check if a Volume name is available
      operationId: Fetch_volume_name_availability
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailableModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Fetch volume name availability
      tags:
      - volume
  /core/volumes:
    get:
      description: "Returns a list of your existing volumes, providing details for\
        \ each. For more information on volumes, [**click here**]({Config.INFRAHUB_DOCS_BASE}/docs/api-reference/core-resources/volumes/)."
      operationId: List_volumes
      parameters:
      - description: Page Number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Data Per Page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Filter Environment ID or Name
        explode: true
        in: query
        name: environment
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List volumes
      tags:
      - volume
    post:
      description: "Creates a volume that can be attached to a virtual machine, expanding\
        \ its storage capacity. Specify the volume type and custom configuration in\
        \ the request body. For additional details on volumes, [**click here**]({Config.INFRAHUB_DOCS_BASE}/docs/api-reference/core-resources/volumes/create-volume)."
      operationId: Create_volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Volume_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: Volume successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create volume
      tags:
      - volume
      x-codegen-request-body-name: payload
  /core/volumes/{volume_id}:
    delete:
      description: Deletes a volume permanently. Provide the volume ID in the path
        to specify the volume to be deleted.
      operationId: Delete_volume
      parameters:
      - explode: false
        in: path
        name: volume_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Volume successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete volume
      tags:
      - volume
    get:
      description: "Fetch volume details for specific volume. This endpoint returns\
        \ id, name, volume size, volume type, status, description, image_id, os_image,\
        \ created_at, updated_at etc."
      operationId: Fetch_Volume_Details
      parameters:
      - explode: false
        in: path
        name: volume_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Fetch Volume Details
      tags:
      - volume
    patch:
      description: "Update volume properties. Currently supports updating the environment\
        \ by providing 'environment_name'. The volume must not be attached to any\
        \ instance when changing environments, and the target environment must be\
        \ in the same region."
      operationId: Update_volume
      parameters:
      - explode: false
        in: path
        name: volume_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_Volume_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Update_Volume_Response'
          description: Volume successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update volume fields
      tags:
      - volume
      x-codegen-request-body-name: payload
  /core/volumes/{volume_id}/attach-callback:
    post:
      description: "Creates a callback URL for a specified volume, enabling the posting\
        \ of action events executed on the volume to the specified URL. Provide the\
        \ callback URL in the request body and the ID of the volume to which it is\
        \ being attached in the path. For more details on volume callback URLs, [**click\
        \ here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/volumes/volume-callbacks/attach-callback-volume)."
      operationId: Attach_callback_to_volume
      parameters:
      - explode: false
        in: path
        name: volume_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attach_Callback_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attach_Callback_Response'
          description: Callback URL successfully attached to your volume. Any action
            events on your volume will be posted to the provided URL
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach callback to volume
      tags:
      - callbacks
      x-codegen-request-body-name: payload
  /core/volumes/{volume_id}/delete-callback:
    delete:
      description: "Permanently deletes the callback URL associated with a specified\
        \ volume by providing the volume ID in the request path. For additional information\
        \ on volume callback URLs, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/volumes/volume-callbacks/delete-callback-volume)."
      operationId: Delete_volume_callback
      parameters:
      - explode: false
        in: path
        name: volume_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Volume callback URL successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete volume callback
      tags:
      - callbacks
  /core/volumes/{volume_id}/update-callback:
    put:
      description: "Updates the callback URL for a specified volume. Provide the new\
        \ callback URL in the request body, along with the ID of the associated volume\
        \ in the path. For additional information on volume callback URLs, [**click\
        \ here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/volumes/volume-callbacks/update-callback-volume/)."
      operationId: Update_volume_callback
      parameters:
      - explode: false
        in: path
        name: volume_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attach_Callback_Payload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attach_Callback_Response'
          description: Callback URL successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update volume callback
      tags:
      - callbacks
      x-codegen-request-body-name: payload
  /pricebook:
    get:
      description: "Retrieves the Infrahub Pricebook, detailing hourly running costs\
        \ for all resources offered by Infrahub. For more information on Pricebook\
        \ [**click here**](None/docs/api-reference/pricebook-resources/pricebook/)."
      operationId: get_pricebook
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PricebookModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      tags:
      - Pricebook
  /pricebook/calculate/resource/{resource_type}/{id}:
    get:
      description: Calculate the hourly billing rate of a specified resource by including
        the resource ID in the path.
      operationId: get_calculate_2
      parameters:
      - explode: false
        in: path
        name: resource_type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBillingResponseForCustomer'
          description: Successfully retrieved billing rate.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Billing Rate for Resource
      tags:
      - Calculate
  /pricebook/contracts:
    get:
      description: "Retrieves a list of contracts and their details, including the\
        \ terms of each contract and the discounts applied to all resources under\
        \ each contract. Pagination can be controlled using the `page` and `per_page`\
        \ query parameters. For additional information about contracts, click [**here**](None/docs/billing-and-payment/contracts)."
      operationId: get_customer_contract
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerContractsListResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Contracts
      tags:
      - Customer Contract
  /pricebook/contracts/{contract_id}:
    get:
      description: "Retrieve details of a specific contract by providing the contract\
        \ ID in the path. The endpoint returns the contract object along with its\
        \ associated discount plans. For more information, [**click here**](None/docs/api-reference/pricebook-resources/retrieve-contract-details)."
      operationId: get_customer_contract_details
      parameters:
      - explode: false
        in: path
        name: contract_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContractDetailResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Contract Details
      tags:
      - Customer Contract
  /pricebook/contracts/{contract_id}/gpu_allocation_graph:
    get:
      description: Retrieve GPU allocation count graph for a specific contract by
        providing the contract ID in the path. The endpoint returns the GPU allocation
        count graph for the contract within the specified date range.
      operationId: get_customer_contract_gpu_allocation_graph
      parameters:
      - explode: false
        in: path
        name: contract_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Date should be formatted in YYYY-MM-DDTHH:MM:SS
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractGPUAllocationGraphResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve GPU Allocation Graph for Contract
      tags:
      - Customer Contract
components:
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    AccessTokenField:
      example:
        access_token: access_token
      properties:
        access_token:
          type: string
      type: object
    AddUserInfoSuccessResponseModel:
      example:
        data:
          country: country
          business: true
          vat_number: vat_number
          stripe_user_id: stripe_user_id
          created_at: 2000-01-23T04:56:07.000+00:00
          zip_code: zip_code
          phone: phone
          company_name: company_name
          organization_id: 6
          name: name
          id: 0
          state: state
          billing_address1: billing_address1
          billing_address2: billing_address2
          email: email
        message: message
        status: true
      properties:
        data:
          $ref: '#/components/schemas/UsersInfoFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    AllocatedGPUCountGraph:
      example:
        datetime: datetime
        value: 0
      properties:
        datetime:
          type: string
        value:
          type: integer
      type: object
    ApiKeyFields:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
        key: key
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          type: integer
        key:
          type: string
        name:
          type: string
      type: object
    AssignRbacRolePayload:
      example:
        role_id: 0
      properties:
        role_id:
          type: integer
      required:
      - role_id
      type: object
    AttachFirewallWithVM:
      example:
        vms:
        - 0
        - 0
      properties:
        vms:
          items:
            type: integer
          type: array
      required:
      - vms
      type: object
    AttachFirewallsToVMPayload:
      example:
        firewalls:
        - 0
        - 0
      properties:
        firewalls:
          description: Ids of the firewalls to be attached with a virtual machine.
          items:
            type: integer
          type: array
      required:
      - firewalls
      type: object
    Attach_Callback_Payload:
      properties:
        url:
          type: string
      required:
      - url
      type: object
    Attach_Callback_Response:
      example:
        message: message
        url: url
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        url:
          type: string
      type: object
    Attach_Volume_Fields:
      example:
        instance_id: 6
        protected: true
        volume_id: 1
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        device: device
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        device:
          type: string
        id:
          type: integer
        instance_id:
          type: integer
        protected:
          type: boolean
        status:
          type: string
        volume_id:
          type: integer
      type: object
    Attach_Volumes:
      example:
        message: message
        volume_attachments:
        - instance_id: 6
          protected: true
          volume_id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          device: device
          status: status
        - instance_id: 6
          protected: true
          volume_id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          device: device
          status: status
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        volume_attachments:
          items:
            $ref: '#/components/schemas/Attach_Volume_Fields'
          type: array
      type: object
    Attach_Volumes_Payload:
      properties:
        protected:
          default: false
          type: boolean
        volume_ids:
          items:
            type: integer
          type: array
      type: object
    Attachments_Fields_for_Volume:
      example:
        instance_id: 5
        protected: true
        id: 5
        device: device
        status: status
      properties:
        device:
          type: string
        id:
          type: integer
        instance_id:
          type: integer
        protected:
          type: boolean
        status:
          type: string
      type: object
    AuthGetTokenResponseModel:
      example:
        message: message
        status: true
        token:
          access_token: access_token
      properties:
        message:
          type: string
        status:
          type: boolean
        token:
          $ref: '#/components/schemas/AccessTokenField'
      type: object
    AuthUserFields:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        email: email
        username: username
      properties:
        created_at:
          format: date-time
          type: string
        email:
          type: string
        name:
          type: string
        username:
          type: string
      type: object
    AuthUserInfoResponseModel:
      example:
        message: message
        user:
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          email: email
          username: username
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        user:
          $ref: '#/components/schemas/AuthUserFields'
      type: object
    BetaAccessRequestFields:
      example:
        user_id: 1
        program_id: 6
        program_name: program_name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        status: requested
      properties:
        created_at:
          description: When the request was made
          format: date-time
          type: string
        id:
          description: Unique identifier for the request
          type: integer
        program_id:
          description: ID of the beta program
          type: integer
        program_name:
          description: Name of the beta program
          type: string
        status:
          description: Status of the request
          enum:
          - requested
          - approved
          - denied
          - revoked
          example: requested
          type: string
        user_id:
          description: ID of the user who made the request
          type: integer
      type: object
    BetaAccessRequestPayload:
      example:
        metadata: "{}"
        program: program
      properties:
        metadata:
          description: Optional metadata for the request
          properties: {}
          type: object
        program:
          description: Name of the beta program
          type: string
      required:
      - program
      type: object
    BetaAccessRequestResponseModel:
      example:
        message: message
        beta_access_request:
          user_id: 1
          program_id: 6
          program_name: program_name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: requested
        status: true
      properties:
        beta_access_request:
          $ref: '#/components/schemas/BetaAccessRequestFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    BetaAccessStatusItem:
      example:
        program_name: program_name
        request_date: 2000-01-23T04:56:07.000+00:00
        status: requested
      properties:
        program_name:
          description: Name of the beta program
          type: string
        request_date:
          description: When the request was made
          format: date-time
          type: string
        status:
          description: "Status of the request (requested, approved, denied, revoked)"
          enum:
          - requested
          - approved
          - denied
          - revoked
          example: requested
          type: string
      type: object
    BetaAccessStatusResponseModel:
      example:
        message: message
        beta_access_requests:
        - program_name: program_name
          request_date: 2000-01-23T04:56:07.000+00:00
          status: requested
        - program_name: program_name
          request_date: 2000-01-23T04:56:07.000+00:00
          status: requested
        status: true
      properties:
        beta_access_requests:
          description: List of beta access requests
          items:
            $ref: '#/components/schemas/BetaAccessStatusItem'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    Billing_metrices_fields:
      example:
        create_time: 2000-01-23T04:56:07.000+00:00
        organization_id: 6
        total_up_time: 5.637376656633329
        exclude_billing: true
        name: name
        resource_type: resource_type
        terminate_time: 2000-01-23T04:56:07.000+00:00
        active: true
        resource_id: 1
        bill_per_minute: 0.8008281904610115
        total_bill: 5.962133916683182
      properties:
        active:
          type: boolean
        bill_per_minute:
          type: number
        create_time:
          format: date-time
          type: string
        exclude_billing:
          type: boolean
        name:
          type: string
        organization_id:
          type: integer
        resource_id:
          type: integer
        resource_type:
          type: string
        terminate_time:
          format: date-time
          type: string
        total_bill:
          type: number
        total_up_time:
          type: number
      type: object
    Billing_metrices_response:
      example:
        data:
        - create_time: 2000-01-23T04:56:07.000+00:00
          organization_id: 6
          total_up_time: 5.637376656633329
          exclude_billing: true
          name: name
          resource_type: resource_type
          terminate_time: 2000-01-23T04:56:07.000+00:00
          active: true
          resource_id: 1
          bill_per_minute: 0.8008281904610115
          total_bill: 5.962133916683182
        - create_time: 2000-01-23T04:56:07.000+00:00
          organization_id: 6
          total_up_time: 5.637376656633329
          exclude_billing: true
          name: name
          resource_type: resource_type
          terminate_time: 2000-01-23T04:56:07.000+00:00
          active: true
          resource_id: 1
          bill_per_minute: 0.8008281904610115
          total_bill: 5.962133916683182
        message: message
        status: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/Billing_metrices_fields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    ClusterEvents:
      example:
        cluster_events:
        - reason: reason
          cluster_id: 0
          user_id: 5
          org_id: 1
          id: 6
          time: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          object: object
        - reason: reason
          cluster_id: 0
          user_id: 5
          org_id: 1
          id: 6
          time: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          object: object
        message: message
        status: true
      properties:
        cluster_events:
          items:
            $ref: '#/components/schemas/ClusterEventsFields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    ClusterEventsFields:
      example:
        reason: reason
        cluster_id: 0
        user_id: 5
        org_id: 1
        id: 6
        time: 2000-01-23T04:56:07.000+00:00
        message: message
        type: type
        object: object
      properties:
        cluster_id:
          type: integer
        id:
          type: integer
        message:
          type: string
        object:
          type: string
        org_id:
          type: integer
        reason:
          type: string
        time:
          format: date-time
          type: string
        type:
          type: string
        user_id:
          type: integer
      type: object
    ClusterFields:
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        keypair_name: keypair_name
        api_address: api_address
        node_groups:
        - flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          count: 3
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2
        - flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          count: 3
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2
        nodes:
        - instance:
            contract_id: 7
            floating_ip: floating_ip
            floating_ip_status: floating_ip_status
            name: name
            fixed_ip: fixed_ip
            id: 1
            image_id: 1
            status: status
          is_bastion: true
          role: role
          requires_public_ip: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 4
          node_group_name: node_group_name
          status_reason: status_reason
          node_group_id: 1
          status: status
        - instance:
            contract_id: 7
            floating_ip: floating_ip
            floating_ip_status: floating_ip_status
            name: name
            fixed_ip: fixed_ip
            id: 1
            image_id: 1
            status: status
          is_bastion: true
          role: role
          requires_public_ip: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 4
          node_group_name: node_group_name
          status_reason: status_reason
          node_group_id: 1
          status: status
        kube_config: kube_config
        kubernetes_version: kubernetes_version
        name: name
        id: 0
        master_flavor:
          features: "{}"
          disk: 1
          gpu_count: 5
          name: name
          cpu: 6
          ephemeral: 5
          id: 2
          gpu: gpu
          labels:
          - id: 7
            label: label
          - id: 7
            label: label
          ram: 9.301444243932576
        status_reason: status_reason
        environment_name: environment_name
        status: status
      properties:
        api_address:
          type: string
        created_at:
          format: date-time
          type: string
        environment_name:
          type: string
        id:
          type: integer
        keypair_name:
          type: string
        kube_config:
          type: string
        kubernetes_version:
          type: string
        master_flavor:
          $ref: '#/components/schemas/Cluster_Flavor_Fields'
        name:
          type: string
        node_groups:
          items:
            $ref: '#/components/schemas/ClusterNodeGroupFields'
          type: array
        nodes:
          items:
            $ref: '#/components/schemas/ClusterNodeFields'
          type: array
        status:
          type: string
        status_reason:
          type: string
      type: object
    ClusterListResponse:
      example:
        message: message
        clusters:
        - created_at: 2000-01-23T04:56:07.000+00:00
          keypair_name: keypair_name
          api_address: api_address
          node_groups:
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          nodes:
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          kube_config: kube_config
          kubernetes_version: kubernetes_version
          name: name
          id: 0
          master_flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          status_reason: status_reason
          environment_name: environment_name
          status: status
        - created_at: 2000-01-23T04:56:07.000+00:00
          keypair_name: keypair_name
          api_address: api_address
          node_groups:
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          nodes:
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          kube_config: kube_config
          kubernetes_version: kubernetes_version
          name: name
          id: 0
          master_flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          status_reason: status_reason
          environment_name: environment_name
          status: status
        status: true
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/ClusterFields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    ClusterNodeFields:
      example:
        instance:
          contract_id: 7
          floating_ip: floating_ip
          floating_ip_status: floating_ip_status
          name: name
          fixed_ip: fixed_ip
          id: 1
          image_id: 1
          status: status
        is_bastion: true
        role: role
        requires_public_ip: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 4
        node_group_name: node_group_name
        status_reason: status_reason
        node_group_id: 1
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        id:
          type: integer
        instance:
          $ref: '#/components/schemas/ClusterNodeInstanceFields'
        is_bastion:
          type: boolean
        node_group_id:
          type: integer
        node_group_name:
          type: string
        requires_public_ip:
          type: boolean
        role:
          type: string
        status:
          type: string
        status_reason:
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    ClusterNodeGroupFields:
      example:
        flavor:
          features: "{}"
          disk: 1
          gpu_count: 5
          name: name
          cpu: 6
          ephemeral: 5
          id: 2
          gpu: gpu
          labels:
          - id: 7
            label: label
          - id: 7
            label: label
          ram: 9.301444243932576
        role: role
        updated_at: 2000-01-23T04:56:07.000+00:00
        count: 3
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 2
      properties:
        count:
          type: integer
        created_at:
          format: date-time
          type: string
        flavor:
          $ref: '#/components/schemas/Cluster_Flavor_Fields'
        id:
          type: integer
        name:
          type: string
        role:
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    ClusterNodeGroupsCreateResponse:
      example:
        node_group:
          flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          count: 3
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2
        nodes:
        - instance:
            contract_id: 7
            floating_ip: floating_ip
            floating_ip_status: floating_ip_status
            name: name
            fixed_ip: fixed_ip
            id: 1
            image_id: 1
            status: status
          is_bastion: true
          role: role
          requires_public_ip: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 4
          node_group_name: node_group_name
          status_reason: status_reason
          node_group_id: 1
          status: status
        - instance:
            contract_id: 7
            floating_ip: floating_ip
            floating_ip_status: floating_ip_status
            name: name
            fixed_ip: fixed_ip
            id: 1
            image_id: 1
            status: status
          is_bastion: true
          role: role
          requires_public_ip: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 4
          node_group_name: node_group_name
          status_reason: status_reason
          node_group_id: 1
          status: status
        message: message
        status: true
      properties:
        message:
          type: string
        node_group:
          $ref: '#/components/schemas/ClusterNodeGroupFields'
        nodes:
          items:
            $ref: '#/components/schemas/ClusterNodeFields'
          type: array
        status:
          type: boolean
      type: object
    ClusterNodeGroupsGetResponse:
      example:
        node_group:
          flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          count: 3
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2
        message: message
        status: true
      properties:
        message:
          type: string
        node_group:
          $ref: '#/components/schemas/ClusterNodeGroupFields'
        status:
          type: boolean
      type: object
    ClusterNodeGroupsListResponse:
      example:
        message: message
        node_groups:
        - flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          count: 3
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2
        - flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          count: 3
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2
        status: true
      properties:
        message:
          type: string
        node_groups:
          items:
            $ref: '#/components/schemas/ClusterNodeGroupFields'
          type: array
        status:
          type: boolean
      type: object
    ClusterNodeInstanceFields:
      example:
        contract_id: 7
        floating_ip: floating_ip
        floating_ip_status: floating_ip_status
        name: name
        fixed_ip: fixed_ip
        id: 1
        image_id: 1
        status: status
      properties:
        contract_id:
          type: integer
        fixed_ip:
          type: string
        floating_ip:
          type: string
        floating_ip_status:
          type: string
        id:
          type: integer
        image_id:
          type: integer
        name:
          type: string
        status:
          type: string
      type: object
    ClusterNodesListResponse:
      example:
        nodes:
        - instance:
            contract_id: 7
            floating_ip: floating_ip
            floating_ip_status: floating_ip_status
            name: name
            fixed_ip: fixed_ip
            id: 1
            image_id: 1
            status: status
          is_bastion: true
          role: role
          requires_public_ip: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 4
          node_group_name: node_group_name
          status_reason: status_reason
          node_group_id: 1
          status: status
        - instance:
            contract_id: 7
            floating_ip: floating_ip
            floating_ip_status: floating_ip_status
            name: name
            fixed_ip: fixed_ip
            id: 1
            image_id: 1
            status: status
          is_bastion: true
          role: role
          requires_public_ip: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 4
          node_group_name: node_group_name
          status_reason: status_reason
          node_group_id: 1
          status: status
        message: message
        status: true
      properties:
        message:
          type: string
        nodes:
          items:
            $ref: '#/components/schemas/ClusterNodeFields'
          type: array
        status:
          type: boolean
      type: object
    ClusterResponse:
      example:
        cluster:
          created_at: 2000-01-23T04:56:07.000+00:00
          keypair_name: keypair_name
          api_address: api_address
          node_groups:
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          nodes:
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          kube_config: kube_config
          kubernetes_version: kubernetes_version
          name: name
          id: 0
          master_flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          status_reason: status_reason
          environment_name: environment_name
          status: status
        message: message
        status: true
      properties:
        cluster:
          $ref: '#/components/schemas/ClusterFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    ClusterVersion:
      example:
        image: "{}"
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        region: "{}"
        version: version
      properties:
        created_at:
          description: ""
          format: date-time
          type: string
        id:
          description: ""
          type: integer
        image:
          type: object
        region:
          type: object
        updated_at:
          description: ""
          format: date-time
          type: string
        version:
          description: ""
          type: string
      type: object
    ClusterVersions:
      example:
        versions:
        - image: "{}"
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          region: "{}"
          version: version
        - image: "{}"
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          region: "{}"
          version: version
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        versions:
          items:
            $ref: '#/components/schemas/ClusterVersion'
          type: array
      type: object
    Cluster_Flavor_Fields:
      example:
        features: "{}"
        disk: 1
        gpu_count: 5
        name: name
        cpu: 6
        ephemeral: 5
        id: 2
        gpu: gpu
        labels:
        - id: 7
          label: label
        - id: 7
          label: label
        ram: 9.301444243932576
      properties:
        cpu:
          type: integer
        disk:
          type: integer
        ephemeral:
          type: integer
        features:
          properties: {}
          type: object
        gpu:
          type: string
        gpu_count:
          type: integer
        id:
          type: integer
        labels:
          items:
            $ref: '#/components/schemas/LableResonse'
          type: array
        name:
          type: string
        ram:
          type: number
      type: object
    Colors:
      example:
        secondary:
          light: light
          dark: dark
        primary:
          light: light
          dark: dark
      properties:
        primary:
          $ref: '#/components/schemas/PrimaryColor'
        secondary:
          $ref: '#/components/schemas/SecondaryColor'
      type: object
    CommonResponseModel:
      example:
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
      type: object
    ComplianceFields:
      example:
        gpu_model: gpu_model
        cpu:
        - 0
        - 0
        hdd:
        - 6
        - 6
        ram:
        - 1
        - 1
      properties:
        cpu:
          items:
            type: integer
          type: array
        gpu_model:
          type: string
        hdd:
          items:
            type: integer
          type: array
        ram:
          items:
            type: integer
          type: array
      type: object
    ComplianceModelFields:
      example:
        base_value: 0
        gpu_model: gpu_model
        variation_min: 5
        variation_unit: 5
        resource_type: resource_type
        id: 6
        variation_max: 1
      properties:
        base_value:
          type: integer
        gpu_model:
          type: string
        id:
          type: integer
        resource_type:
          type: string
        variation_max:
          type: integer
        variation_min:
          type: integer
        variation_unit:
          type: integer
      type: object
    CompliancePayload:
      example:
        base_value: 0
        gpu_model: gpu_model
        variation_min: 1
        variation_unit: 5
        resource_type: resource_type
        variation_max: 6
      properties:
        base_value:
          type: integer
        gpu_model:
          type: string
        resource_type:
          type: string
        variation_max:
          type: integer
        variation_min:
          type: integer
        variation_unit:
          type: integer
      required:
      - base_value
      - gpu_model
      - resource_type
      - variation_max
      - variation_min
      - variation_unit
      type: object
    ComplianceResponse:
      example:
        compliance:
          gpu_model: gpu_model
          cpu:
          - 0
          - 0
          hdd:
          - 6
          - 6
          ram:
          - 1
          - 1
        message: message
        status: true
      properties:
        compliance:
          $ref: '#/components/schemas/ComplianceFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    Container_Overview_Fields:
      example:
        cost_per_hour: 0.8008281904610115
        gpus: 1
        count: 6
        vcpus: 5
        ram: 5.962133916683182
      properties:
        cost_per_hour:
          type: number
        count:
          type: integer
        gpus:
          type: integer
        ram:
          type: number
        vcpus:
          type: integer
      type: object
    Contract:
      example:
        allocated_gpu_count_graph:
        - datetime: datetime
          value: 0
        - datetime: datetime
          value: 0
        granularity: 6
        org_id: 1
        id: id
        total_gpu_allocation: 5
        status: status
      properties:
        allocated_gpu_count_graph:
          items:
            $ref: '#/components/schemas/AllocatedGPUCountGraph'
          type: array
        granularity:
          type: integer
        id:
          type: string
        org_id:
          type: integer
        status:
          type: string
        total_gpu_allocation:
          type: integer
      type: object
    ContractDiscountPlanFields:
      example:
        discount_status: discount_status
        remaining_count: 5
        discount_amount: 0.8008281904610115
        discount_code: discount_code
        resource_id: 2
        id: 1
        discount_percent: 6.027456183070403
        discount_type: discount_type
        resource_name: resource_name
        resource_count: 5
      properties:
        discount_amount:
          type: number
        discount_code:
          type: string
        discount_percent:
          type: number
        discount_status:
          type: string
        discount_type:
          type: string
        id:
          type: integer
        remaining_count:
          type: integer
        resource_count:
          type: integer
        resource_id:
          type: integer
        resource_name:
          type: string
      type: object
    ContractGPUAllocationGraphResponse:
      example:
        contract:
          allocated_gpu_count_graph:
          - datetime: datetime
            value: 0
          - datetime: datetime
            value: 0
          granularity: 6
          org_id: 1
          id: id
          total_gpu_allocation: 5
          status: status
        message: message
        status: true
      properties:
        contract:
          $ref: '#/components/schemas/Contract'
        message:
          type: string
        status:
          type: boolean
      type: object
    ContractInstanceFields:
      example:
        cluster:
          created_at: 2000-01-23T04:56:07.000+00:00
          keypair_name: keypair_name
          api_address: api_address
          node_groups:
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          nodes:
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          kube_config: kube_config
          kubernetes_version: kubernetes_version
          name: name
          id: 0
          master_flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          status_reason: status_reason
          environment_name: environment_name
          status: status
        flavor_name: flavor_name
        gpu_count: 0
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 6
        total_usage_time: 1
        termination_time: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        cluster:
          $ref: '#/components/schemas/ClusterFields'
        created_at:
          format: date-time
          type: string
        flavor_name:
          type: string
        gpu_count:
          type: integer
        id:
          type: integer
        name:
          type: string
        status:
          type: string
        termination_time:
          format: date-time
          type: string
        total_usage_time:
          type: integer
      type: object
    ContractInstancesResponse:
      example:
        instances:
        - cluster:
            created_at: 2000-01-23T04:56:07.000+00:00
            keypair_name: keypair_name
            api_address: api_address
            node_groups:
            - flavor:
                features: "{}"
                disk: 1
                gpu_count: 5
                name: name
                cpu: 6
                ephemeral: 5
                id: 2
                gpu: gpu
                labels:
                - id: 7
                  label: label
                - id: 7
                  label: label
                ram: 9.301444243932576
              role: role
              updated_at: 2000-01-23T04:56:07.000+00:00
              count: 3
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 2
            - flavor:
                features: "{}"
                disk: 1
                gpu_count: 5
                name: name
                cpu: 6
                ephemeral: 5
                id: 2
                gpu: gpu
                labels:
                - id: 7
                  label: label
                - id: 7
                  label: label
                ram: 9.301444243932576
              role: role
              updated_at: 2000-01-23T04:56:07.000+00:00
              count: 3
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 2
            nodes:
            - instance:
                contract_id: 7
                floating_ip: floating_ip
                floating_ip_status: floating_ip_status
                name: name
                fixed_ip: fixed_ip
                id: 1
                image_id: 1
                status: status
              is_bastion: true
              role: role
              requires_public_ip: true
              updated_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 4
              node_group_name: node_group_name
              status_reason: status_reason
              node_group_id: 1
              status: status
            - instance:
                contract_id: 7
                floating_ip: floating_ip
                floating_ip_status: floating_ip_status
                name: name
                fixed_ip: fixed_ip
                id: 1
                image_id: 1
                status: status
              is_bastion: true
              role: role
              requires_public_ip: true
              updated_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 4
              node_group_name: node_group_name
              status_reason: status_reason
              node_group_id: 1
              status: status
            kube_config: kube_config
            kubernetes_version: kubernetes_version
            name: name
            id: 0
            master_flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            status_reason: status_reason
            environment_name: environment_name
            status: status
          flavor_name: flavor_name
          gpu_count: 0
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
          total_usage_time: 1
          termination_time: 2000-01-23T04:56:07.000+00:00
          status: status
        - cluster:
            created_at: 2000-01-23T04:56:07.000+00:00
            keypair_name: keypair_name
            api_address: api_address
            node_groups:
            - flavor:
                features: "{}"
                disk: 1
                gpu_count: 5
                name: name
                cpu: 6
                ephemeral: 5
                id: 2
                gpu: gpu
                labels:
                - id: 7
                  label: label
                - id: 7
                  label: label
                ram: 9.301444243932576
              role: role
              updated_at: 2000-01-23T04:56:07.000+00:00
              count: 3
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 2
            - flavor:
                features: "{}"
                disk: 1
                gpu_count: 5
                name: name
                cpu: 6
                ephemeral: 5
                id: 2
                gpu: gpu
                labels:
                - id: 7
                  label: label
                - id: 7
                  label: label
                ram: 9.301444243932576
              role: role
              updated_at: 2000-01-23T04:56:07.000+00:00
              count: 3
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 2
            nodes:
            - instance:
                contract_id: 7
                floating_ip: floating_ip
                floating_ip_status: floating_ip_status
                name: name
                fixed_ip: fixed_ip
                id: 1
                image_id: 1
                status: status
              is_bastion: true
              role: role
              requires_public_ip: true
              updated_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 4
              node_group_name: node_group_name
              status_reason: status_reason
              node_group_id: 1
              status: status
            - instance:
                contract_id: 7
                floating_ip: floating_ip
                floating_ip_status: floating_ip_status
                name: name
                fixed_ip: fixed_ip
                id: 1
                image_id: 1
                status: status
              is_bastion: true
              role: role
              requires_public_ip: true
              updated_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 4
              node_group_name: node_group_name
              status_reason: status_reason
              node_group_id: 1
              status: status
            kube_config: kube_config
            kubernetes_version: kubernetes_version
            name: name
            id: 0
            master_flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            status_reason: status_reason
            environment_name: environment_name
            status: status
          flavor_name: flavor_name
          gpu_count: 0
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
          total_usage_time: 1
          termination_time: 2000-01-23T04:56:07.000+00:00
          status: status
        message: message
        status: true
      properties:
        instances:
          items:
            $ref: '#/components/schemas/ContractInstanceFields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    CreateClusterNodeFields:
      example:
        node_group: node_group
        role: worker
        count: 1
      properties:
        count:
          minimum: 1
          type: integer
        node_group:
          type: string
        role:
          enum:
          - worker
          - master
          example: worker
          type: string
      type: object
    CreateFirewallPayload:
      example:
        environment_id: 0
        name: name
        description: description
      properties:
        description:
          description: Description of the firewall.
          type: string
        environment_id:
          description: ID of the environment.
          type: integer
        name:
          description: Name of the firewall.
          type: string
      required:
      - environment_id
      - name
      type: object
    CreateImagePayload:
      example:
        name: name
        labels:
        - labels
        - labels
      properties:
        labels:
          description: List of labels to attach to the image
          items:
            description: ""
            type: string
          type: array
        name:
          description: Name for the new custom image
          type: string
      required:
      - name
      type: object
    CreateInstancesResponse:
      example:
        instances:
        - image:
            name: name
          os: os
          requires_public_ip: true
          contract_id: 0
          floating_ip_status: floating_ip_status
          keypair:
            name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          power_state: power_state
          labels:
          - labels
          - labels
          callback_url: callback_url
          flavor:
            features: "{}"
            disk: 5
            gpu_count: 7
            name: name
            cpu: 5
            ephemeral: 2
            id: 9
            gpu: gpu
            labels:
            - id: 3
              label: label
            - id: 3
              label: label
            ram: 2.027123023002322
          vm_state: vm_state
          features: "{}"
          environment:
            features:
              green_status: GREEN
              network_optimised: true
            org_id: 1
            name: name
            id: 6
            region: region
          port_randomization_status: port_randomization_status
          floating_ip: floating_ip
          name: name
          fixed_ip: fixed_ip
          id: 4
          locked: true
          volume_attachments:
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          security_rules:
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          port_randomization: true
          status: status
        - image:
            name: name
          os: os
          requires_public_ip: true
          contract_id: 0
          floating_ip_status: floating_ip_status
          keypair:
            name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          power_state: power_state
          labels:
          - labels
          - labels
          callback_url: callback_url
          flavor:
            features: "{}"
            disk: 5
            gpu_count: 7
            name: name
            cpu: 5
            ephemeral: 2
            id: 9
            gpu: gpu
            labels:
            - id: 3
              label: label
            - id: 3
              label: label
            ram: 2.027123023002322
          vm_state: vm_state
          features: "{}"
          environment:
            features:
              green_status: GREEN
              network_optimised: true
            org_id: 1
            name: name
            id: 6
            region: region
          port_randomization_status: port_randomization_status
          floating_ip: floating_ip
          name: name
          fixed_ip: fixed_ip
          id: 4
          locked: true
          volume_attachments:
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          security_rules:
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          port_randomization: true
          status: status
        message: message
        status: true
      properties:
        instances:
          items:
            $ref: '#/components/schemas/Instance_Fields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    CreateSnapshotPayload:
      example:
        name: name
        description: description
        labels:
        - labels
        - labels
      properties:
        description:
          description: description
          type: string
        labels:
          description: Labels associated with snapshot
          items:
            description: label
            type: string
          type: array
        name:
          description: Snapshot name
          type: string
      required:
      - description
      - name
      type: object
    CreateSnapshotResponse:
      example:
        message: message
        snapshot:
          has_floating_ip: true
          vm_id: 7
          size: 2
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          region_id: 5
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          is_image: true
          id: 5
          labels:
          - labels
          - labels
          status: status
        status: true
      properties:
        message:
          type: string
        snapshot:
          $ref: '#/components/schemas/SnapshotFields'
        status:
          type: boolean
      type: object
    CreateUpdateComplianceResponse:
      example:
        compliance:
          base_value: 0
          gpu_model: gpu_model
          variation_min: 5
          variation_unit: 5
          resource_type: resource_type
          id: 6
          variation_max: 1
        message: message
        status: true
      properties:
        compliance:
          $ref: '#/components/schemas/ComplianceModelFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    CreateUpdateRbacRolePayload:
      example:
        permissions:
        - 0
        - 0
        name: name
        policies:
        - 6
        - 6
        description: description
      properties:
        description:
          description: Description of the role.
          type: string
        name:
          description: Name of the RBAC role.
          maxLength: 200
          type: string
        permissions:
          items:
            description: List of permission IDs.
            type: integer
          type: array
        policies:
          items:
            description: List of policy IDs.
            type: integer
          type: array
      required:
      - description
      - name
      type: object
    Create_ClusterNodeGroup_payload:
      properties:
        count:
          minimum: 1
          type: integer
        flavor_name:
          type: string
        name:
          maxLength: 20
          type: string
      required:
      - flavor_name
      - name
      type: object
    Create_Cluster_Payload:
      properties:
        deployment_mode:
          default: full
          enum:
          - full
          - standard
          example: full
          type: string
        environment_name:
          type: string
        keypair_name:
          type: string
        kubernetes_version:
          type: string
        master_count:
          maximum: 3
          minimum: 2
          type: integer
        master_flavor_name:
          type: string
        name:
          type: string
        node_count:
          type: integer
        node_flavor_name:
          type: string
        node_groups:
          items:
            $ref: '#/components/schemas/Create_ClusterNodeGroup_payload'
          type: array
      required:
      - environment_name
      - keypair_name
      - kubernetes_version
      - master_flavor_name
      - name
      type: object
    Create_Environment:
      properties:
        name:
          description: The name of the environment being created.
          maxLength: 50
          type: string
        region:
          description: "The geographic location of the data center where the environment\
            \ is being created. To learn more about regions, [**click here**]({Config.INFRAHUB_DOCS_BASE}/docs/features/regions)."
          type: string
      required:
      - name
      - region
      type: object
    Create_Firewall_Rule_Payload:
      properties:
        direction:
          description: The direction of traffic that the firewall rule applies to.
          type: string
        ethertype:
          description: The Ethernet type associated with the rule.
          type: string
        port_range_max:
          description: The maximum port number in the range of ports to be allowed
            by the firewall rule.
          type: integer
        port_range_min:
          description: The minimum port number in the range of ports to be allowed
            by the firewall rule.
          type: integer
        protocol:
          description: "The network protocol associated with the rule. Call the [`GET\
            \ /core/sg-rules-protocols`](https://infrahub-api-doc.nexgencloud.com/#get-/core/sg-rules-protocols)\
            \ endpoint to retrieve a list of permitted network protocols."
          enum:
          - any
          - ah
          - dccp
          - egp
          - esp
          - gre
          - hopopt
          - icmp
          - igmp
          - ip
          - ipip
          - ipv6-encap
          - ipv6-frag
          - ipv6-icmp
          - icmpv6
          - ipv6-nonxt
          - ipv6-opts
          - ipv6-route
          - ospf
          - pgm
          - rsvp
          - sctp
          - tcp
          - udp
          - udplite
          - vrrp
          example: any
          type: string
        remote_ip_prefix:
          description: The IP address range that is allowed to access the specified
            port. Use "0.0.0.0/0" to allow any IP address.
          type: string
      required:
      - direction
      - ethertype
      - protocol
      - remote_ip_prefix
      type: object
    Create_Image:
      example:
        id: 0
        message: message
        status: true
      properties:
        id:
          type: integer
        message:
          type: string
        status:
          type: boolean
      type: object
    Create_Instances_Payload:
      properties:
        assign_floating_ip:
          description: "When this field is set to `true`, it attaches a [public IP\
            \ address](https://docs.hyperstack.cloud/docs/api-reference/core-resources/virtual-machines/floating-ip/)\
            \ to the virtual machine, enabling internet accessibility."
          type: boolean
        callback_url:
          description: "An optional URL where actions performed on the virtual machine\
            \ will be sent. For additional information on event callbacks, [**click\
            \ here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/virtual-machines/callbacks-vms/)."
          maxLength: 250
          type: string
        count:
          description: The number of virtual machines to be created.
          type: integer
        create_bootable_volume:
          description: "Indicates whether to create a bootable volume for the virtual\
            \ machine. When set to `true`, a bootable volume will be created; the\
            \ default value is `false`."
          type: boolean
        enable_port_randomization:
          default: true
          description: Indicates whether to enable port randomization.This setting
            is only effective if 'assign_floating_ip' is true. Defaults to true.
          type: boolean
        environment_name:
          description: "The name of the [environment](https://docs.hyperstack.cloud/docs/api-reference/core-resources/environments/)\
            \ in which the virtual machine is to be created."
          type: string
        flavor:
          $ref: '#/components/schemas/Flavor_Object_Fields'
        flavor_name:
          description: "The name of the GPU hardware configuration ([flavor](https://docs.hyperstack.cloud/docs/hardware/flavors))\
            \ for the virtual machines being created."
          type: string
        image_name:
          description: "The [operating system (OS) image](https://docs.hyperstack.cloud/docs/virtual-machines/images)\
            \ name designated for installation on the virtual machine.It also accepts\
            \ custom, private images, created from [existing snapshots](https://docs.hyperstack.cloud/docs/virtual-machines/custom-images)."
          type: string
        key_name:
          description: "The name of the existing SSH key pair to be used for secure\
            \ access to the virtual machine. For additional information on SSH key\
            \ pairs, [**click here**](https://docs.hyperstack.cloud/docs/api-reference/core-resources/keypairs/)."
          type: string
        labels:
          items:
            type: string
          type: array
        name:
          description: The name of the virtual machine being created.
          maxLength: 50
          type: string
        profile:
          $ref: '#/components/schemas/Profile_Object_Fields'
        security_rules:
          items:
            $ref: '#/components/schemas/Create_Security_Rule_Payload'
          type: array
        user_data:
          description: "Optional initialization configuration commands to manage the\
            \ configuration of a virtual machine at launch using cloud-init scripts.\
            \ For more information about custom VM configuration using cloud-init,\
            \ [**click here**](https://docs.hyperstack.cloud/docs/virtual-machines/initialization-configuration)."
          type: string
        volume_name:
          description: The names of the volume(s) to be attached to the virtual machine
            being created.
          type: string
      required:
      - count
      - environment_name
      - flavor_name
      - key_name
      - name
      type: object
    Create_Profile_Payload:
      properties:
        data:
          additionalProperties:
            type: string
          description: The data object containing the configuration details of the
            virtual machine profile being created.
          type: object
        description:
          description: The optional description for the profile being created.
          maxLength: 150
          type: string
        name:
          description: The name of the profile being created.
          maxLength: 50
          type: string
      required:
      - data
      - name
      type: object
    Create_Profile_Response:
      example:
        profile:
          data: data
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
        message: message
        status: true
      properties:
        message:
          type: string
        profile:
          $ref: '#/components/schemas/Profile_Fields'
        status:
          type: boolean
      type: object
    Create_Security_Rule_Payload:
      properties:
        direction:
          description: The direction of traffic that the firewall rule applies to.
          type: string
        ethertype:
          description: The Ethernet type associated with the rule.
          type: string
        protocol:
          description: "The network protocol associated with the rule. Call the [`GET\
            \ /core/sg-rules-protocols`](https://infrahub-api-doc.nexgencloud.com/#get-/core/sg-rules-protocols)\
            \ endpoint to retrieve a list of permitted network protocols."
          enum:
          - any
          - ah
          - dccp
          - egp
          - esp
          - gre
          - hopopt
          - icmp
          - igmp
          - ip
          - ipip
          - ipv6-encap
          - ipv6-frag
          - ipv6-icmp
          - icmpv6
          - ipv6-nonxt
          - ipv6-opts
          - ipv6-route
          - ospf
          - pgm
          - rsvp
          - sctp
          - tcp
          - udp
          - udplite
          - vrrp
          example: any
          type: string
        remote_ip_prefix:
          description: The IP address range that is allowed to access the specified
            port. Use "0.0.0.0/0" to allow any IP address.
          type: string
        port_range_min:
          type: integer
        port_range_max:
          type: integer
      required:
      - direction
      - ethertype
      - protocol
      - remote_ip_prefix
      - virtual_machine_id
      type: object
    Create_Volume_Payload:
      properties:
        callback_url:
          description: A URL that can be attached to the volume you are creating.
            This `callback_url` will post any action events that occur to your volume
            to the provided URL.
          maxLength: 250
          type: string
        description:
          description: A brief description or comment about the volume.
          type: string
        environment_name:
          description: "The name of the [environment](https://docs.hyperstack.cloud/docs/api-reference/core-resources/environments/)\
            \ within which the volume is being created."
          type: string
        image_id:
          description: "The ID of the operating system image that will be associated\
            \ with the volume. By providing an `image_id` in the create volume request,\
            \ you will create a bootable volume."
          type: integer
        name:
          description: The name of the volume being created.
          maxLength: 50
          type: string
        size:
          description: The size of the volume in GB. 1048576GB storage capacity per
            volume.
          type: integer
        volume_type:
          description: "Specifies the type of volume being created, which determines\
            \ the storage technology it will use. Call the [List volume types](https://infrahub-api-doc.nexgencloud.com/#get-/core/volumes)\
            \ endpoint to retrieve a list of available volume model types."
          type: string
      required:
      - environment_name
      - name
      - size
      - volume_type
      type: object
    CustomerContractDetailResponseModel:
      example:
        contracts:
          end_date: 2000-01-23T04:56:07.000+00:00
          discounts:
          - discount_status: discount_status
            remaining_count: 5
            discount_amount: 0.8008281904610115
            discount_code: discount_code
            resource_id: 2
            id: 1
            discount_percent: 6.027456183070403
            discount_type: discount_type
            resource_name: resource_name
            resource_count: 5
          - discount_status: discount_status
            remaining_count: 5
            discount_amount: 0.8008281904610115
            discount_code: discount_code
            resource_id: 2
            id: 1
            discount_percent: 6.027456183070403
            discount_type: discount_type
            resource_name: resource_name
            resource_count: 5
          org_id: 3
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 9
          expiration_policy: 7
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
        message: message
        status: true
      properties:
        contracts:
          $ref: '#/components/schemas/CustomerContractFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    CustomerContractFields:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        discounts:
        - discount_status: discount_status
          remaining_count: 5
          discount_amount: 0.8008281904610115
          discount_code: discount_code
          resource_id: 2
          id: 1
          discount_percent: 6.027456183070403
          discount_type: discount_type
          resource_name: resource_name
          resource_count: 5
        - discount_status: discount_status
          remaining_count: 5
          discount_amount: 0.8008281904610115
          discount_code: discount_code
          resource_id: 2
          id: 1
          discount_percent: 6.027456183070403
          discount_type: discount_type
          resource_name: resource_name
          resource_count: 5
        org_id: 3
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 9
        expiration_policy: 7
        start_date: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        discounts:
          items:
            $ref: '#/components/schemas/ContractDiscountPlanFields'
          type: array
        end_date:
          format: date-time
          type: string
        expiration_policy:
          type: integer
        id:
          type: integer
        org_id:
          type: integer
        start_date:
          format: date-time
          type: string
        status:
          type: string
      type: object
    Dashboard_Info_Response:
      example:
        overview:
          container:
            cost_per_hour: 0.8008281904610115
            gpus: 1
            count: 6
            vcpus: 5
            ram: 5.962133916683182
          volume:
            cost_per_hour: 4.145608029883936
            using: 1
            count: 7
          instance:
            cost_per_hour: 2.3021358869347655
            gpus: 9
            count: 7
            vcpus: 2
            ram: 3.616076749251911
        message: message
        status: true
      properties:
        message:
          type: string
        overview:
          $ref: '#/components/schemas/Overview_Info'
        status:
          type: boolean
      type: object
    DataSynthesisBillingHistoryDetailsResponseSchema:
      example:
        billing_history_data_synthesis_details:
          billing_history:
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          pagination:
            per_page: 5
            pages: 5
            page: 1
          org_id: 0
          total_count: 6
        message: message
        status: true
      properties:
        billing_history_data_synthesis_details:
          $ref: '#/components/schemas/billing_history_data_synthesis_details'
        message:
          description: ""
          type: string
        status:
          description: ""
          type: boolean
      type: object
    Deployment_Fields:
      example:
        template: template
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          type: integer
        name:
          type: string
        status:
          type: string
        template:
          type: string
      type: object
    Deployment_Fields_for_start_deployments:
      example:
        template: template
        variables: variables
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          type: integer
        name:
          type: string
        status:
          type: string
        template:
          type: string
        variables:
          type: string
      type: object
    Deployments:
      example:
        deployments:
        - template: template
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          status: status
        - template: template
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          status: status
        message: message
        status: true
      properties:
        deployments:
          items:
            $ref: '#/components/schemas/Deployment_Fields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    Detach_Volumes:
      example:
        message: message
        volume_attachments:
        - instance_id: 6
          protected: true
          volume_id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          device: device
          status: status
        - instance_id: 6
          protected: true
          volume_id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          device: device
          status: status
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        volume_attachments:
          items:
            $ref: '#/components/schemas/Attach_Volume_Fields'
          type: array
      type: object
    Detach_Volumes_Payload:
      properties:
        volume_ids:
          items:
            type: integer
          type: array
      type: object
    Edit_label_of_an_existing_VM_Payload:
      properties:
        labels:
          description: Multiple labels can be added by separating with spaces
          items:
            type: string
          type: array
      type: object
    Environment:
      example:
        environment:
          features:
            green_status: GREEN
            network_optimised: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
          region: region
        message: message
        status: true
      properties:
        environment:
          $ref: '#/components/schemas/Environment_Fields'
        message:
          type: string
        status:
          type: boolean
      type: object
    Environment_Features:
      example:
        green_status: GREEN
        network_optimised: true
      properties:
        green_status:
          enum:
          - GREEN
          - PARTIALLY_GREEN
          - NOT_GREEN
          example: GREEN
          type: string
        network_optimised:
          type: boolean
      type: object
    Environment_Fields:
      example:
        features:
          green_status: GREEN
          network_optimised: true
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 6
        region: region
      properties:
        created_at:
          format: date-time
          type: string
        features:
          $ref: '#/components/schemas/Environment_Features'
        id:
          type: integer
        name:
          type: string
        region:
          type: string
      type: object
    Environment_Fields_for_Volume:
      example:
        features: "{}"
        name: name
        region: region
      properties:
        features:
          properties: {}
          type: object
        name:
          type: string
        region:
          type: string
      type: object
    Environments:
      example:
        environments:
        - features:
            green_status: GREEN
            network_optimised: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
          region: region
        - features:
            green_status: GREEN
            network_optimised: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
          region: region
        count: 0
        page: 1
        message: message
        page_size: 5
        status: true
      properties:
        count:
          type: integer
        environments:
          items:
            $ref: '#/components/schemas/Environment_Fields'
          type: array
        message:
          type: string
        page:
          type: integer
        page_size:
          type: integer
        status:
          type: boolean
      type: object
    ErrorResponseModel:
      example:
        error_reason: error_reason
        message: message
        status: false
      properties:
        error_reason:
          type: string
        message:
          type: string
        status:
          default: false
          type: boolean
      type: object
    FirewallDetailFields:
      example:
        environment:
          name: name
          id: 5
          region: region
        attachments:
        - vm:
            flavor: flavor
            environment: environment
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            status: status
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
          status: status
        - vm:
            flavor: flavor
            environment: environment
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            status: status
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
          status: status
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        rules:
        - protocol: protocol
          ethertype: ethertype
          created_at: 2000-01-23T04:56:07.000+00:00
          port_range_max: 7
          remote_ip_prefix: remote_ip_prefix
          id: 2
          direction: direction
          port_range_min: 9
          status: status
        - protocol: protocol
          ethertype: ethertype
          created_at: 2000-01-23T04:56:07.000+00:00
          port_range_max: 7
          remote_ip_prefix: remote_ip_prefix
          id: 2
          direction: direction
          port_range_min: 9
          status: status
        id: 5
        status: status
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Firewall_Attachment_Model'
          type: array
        created_at:
          format: date-time
          type: string
        description:
          type: string
        environment:
          $ref: '#/components/schemas/FirewallEnvironmentFields'
        id:
          type: integer
        name:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/SecurityGroupRuleFields'
          type: array
        status:
          type: string
      type: object
    FirewallDetailResponse:
      example:
        firewall:
          environment:
            name: name
            id: 5
            region: region
          attachments:
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 1
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 6
            status: status
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 1
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 6
            status: status
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          rules:
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 7
            remote_ip_prefix: remote_ip_prefix
            id: 2
            direction: direction
            port_range_min: 9
            status: status
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 7
            remote_ip_prefix: remote_ip_prefix
            id: 2
            direction: direction
            port_range_min: 9
            status: status
          id: 5
          status: status
        message: message
        status: true
      properties:
        firewall:
          $ref: '#/components/schemas/FirewallDetailFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    FirewallEnvironmentFields:
      example:
        name: name
        id: 5
        region: region
      properties:
        id:
          type: integer
        name:
          type: string
        region:
          type: string
      type: object
    FirewallFields:
      example:
        environment:
          name: name
          id: 5
          region: region
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        environment:
          $ref: '#/components/schemas/FirewallEnvironmentFields'
        id:
          type: integer
        name:
          type: string
        status:
          type: string
      type: object
    FirewallResponse:
      example:
        firewall:
          environment:
            name: name
            id: 5
            region: region
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          status: status
        message: message
        status: true
      properties:
        firewall:
          $ref: '#/components/schemas/FirewallFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    Firewall_Attachment_Model:
      example:
        vm:
          flavor: flavor
          environment: environment
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          status: status
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 6
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        id:
          type: integer
        status:
          type: string
        vm:
          $ref: '#/components/schemas/Firewall_Attachment_VM_Model'
      type: object
    Firewall_Attachment_VM_Model:
      example:
        flavor: flavor
        environment: environment
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 1
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        environment:
          type: string
        flavor:
          type: string
        id:
          type: integer
        name:
          type: string
        status:
          type: string
      type: object
    Firewall_Rule:
      example:
        firewall_rule:
          protocol: protocol
          ethertype: ethertype
          created_at: 2000-01-23T04:56:07.000+00:00
          port_range_max: 7
          remote_ip_prefix: remote_ip_prefix
          id: 2
          direction: direction
          port_range_min: 9
          status: status
        message: message
        status: true
      properties:
        firewall_rule:
          $ref: '#/components/schemas/SecurityGroupRuleFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    FirewallsListResponse:
      example:
        count: 0
        firewalls:
        - environment:
            name: name
            id: 5
            region: region
          attachments:
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 1
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 6
            status: status
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 1
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 6
            status: status
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          rules:
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 7
            remote_ip_prefix: remote_ip_prefix
            id: 2
            direction: direction
            port_range_min: 9
            status: status
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 7
            remote_ip_prefix: remote_ip_prefix
            id: 2
            direction: direction
            port_range_min: 9
            status: status
          id: 5
          status: status
        - environment:
            name: name
            id: 5
            region: region
          attachments:
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 1
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 6
            status: status
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 1
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 6
            status: status
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          rules:
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 7
            remote_ip_prefix: remote_ip_prefix
            id: 2
            direction: direction
            port_range_min: 9
            status: status
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 7
            remote_ip_prefix: remote_ip_prefix
            id: 2
            direction: direction
            port_range_min: 9
            status: status
          id: 5
          status: status
        page: 3
        message: message
        page_size: 2
        status: true
      properties:
        count:
          type: integer
        firewalls:
          items:
            $ref: '#/components/schemas/FirewallDetailFields'
          type: array
        message:
          type: string
        page:
          type: integer
        page_size:
          type: integer
        status:
          type: boolean
      type: object
    FlavorLabelFields:
      example:
        id: 3
        label: label
      properties:
        id:
          description: ""
          type: integer
        label:
          description: ""
          type: string
      type: object
    Flavor_Fields:
      example:
        cpu: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        ephemeral: 1
        display_name: display_name
        stock_available: true
        gpu: gpu
        labels:
        - id: 7
          label: label
        - id: 7
          label: label
        features: "{}"
        disk: 6
        gpu_count: 5
        name: name
        region_name: region_name
        id: 5
        ram: 2.3021358869347655
      properties:
        cpu:
          type: integer
        created_at:
          format: date-time
          type: string
        disk:
          type: integer
        display_name:
          type: string
        ephemeral:
          type: integer
        features:
          properties: {}
          type: object
        gpu:
          type: string
        gpu_count:
          type: integer
        id:
          type: integer
        labels:
          items:
            $ref: '#/components/schemas/LableResonse'
          type: array
        name:
          type: string
        ram:
          type: number
        region_name:
          type: string
        stock_available:
          type: boolean
      type: object
    Flavor_Item_Get_Response:
      example:
        flavors:
        - cpu: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          ephemeral: 1
          display_name: display_name
          stock_available: true
          gpu: gpu
          labels:
          - id: 7
            label: label
          - id: 7
            label: label
          features: "{}"
          disk: 6
          gpu_count: 5
          name: name
          region_name: region_name
          id: 5
          ram: 2.3021358869347655
        - cpu: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          ephemeral: 1
          display_name: display_name
          stock_available: true
          gpu: gpu
          labels:
          - id: 7
            label: label
          - id: 7
            label: label
          features: "{}"
          disk: 6
          gpu_count: 5
          name: name
          region_name: region_name
          id: 5
          ram: 2.3021358869347655
        region_name: region_name
        gpu: gpu
      properties:
        flavors:
          items:
            $ref: '#/components/schemas/Flavor_Fields'
          type: array
        gpu:
          type: string
        region_name:
          type: string
      type: object
    Flavor_List_Response:
      example:
        data:
        - flavors:
          - cpu: 0
            created_at: 2000-01-23T04:56:07.000+00:00
            ephemeral: 1
            display_name: display_name
            stock_available: true
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            features: "{}"
            disk: 6
            gpu_count: 5
            name: name
            region_name: region_name
            id: 5
            ram: 2.3021358869347655
          - cpu: 0
            created_at: 2000-01-23T04:56:07.000+00:00
            ephemeral: 1
            display_name: display_name
            stock_available: true
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            features: "{}"
            disk: 6
            gpu_count: 5
            name: name
            region_name: region_name
            id: 5
            ram: 2.3021358869347655
          region_name: region_name
          gpu: gpu
        - flavors:
          - cpu: 0
            created_at: 2000-01-23T04:56:07.000+00:00
            ephemeral: 1
            display_name: display_name
            stock_available: true
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            features: "{}"
            disk: 6
            gpu_count: 5
            name: name
            region_name: region_name
            id: 5
            ram: 2.3021358869347655
          - cpu: 0
            created_at: 2000-01-23T04:56:07.000+00:00
            ephemeral: 1
            display_name: display_name
            stock_available: true
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            features: "{}"
            disk: 6
            gpu_count: 5
            name: name
            region_name: region_name
            id: 5
            ram: 2.3021358869347655
          region_name: region_name
          gpu: gpu
        message: message
        status: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/Flavor_Item_Get_Response'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    Flavor_Object_Fields:
      example:
        disk: 6
        gpu_count: 1
        cpu: 0
        gpu: gpu
        ram: 5.962133916683182
      properties:
        cpu:
          type: integer
        disk:
          type: integer
        gpu:
          type: string
        gpu_count:
          type: integer
        ram:
          type: number
      type: object
    GPU_Fields:
      example:
        regions:
        - name: name
          id: 6
        - name: name
          id: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        example_metadata: example_metadata
      properties:
        created_at:
          format: date-time
          type: string
        example_metadata:
          type: string
        id:
          type: integer
        name:
          type: string
        regions:
          items:
            $ref: '#/components/schemas/GPU_Region_Fields'
          type: array
        updated_at:
          format: date-time
          type: string
      type: object
    GPU_List:
      example:
        gpu_list:
        - regions:
          - name: name
            id: 6
          - name: name
            id: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          example_metadata: example_metadata
        - regions:
          - name: name
            id: 6
          - name: name
            id: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          example_metadata: example_metadata
        message: message
        status: true
      properties:
        gpu_list:
          items:
            $ref: '#/components/schemas/GPU_Fields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    GPU_Region_Fields:
      example:
        name: name
        id: 6
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    GenerateUpdateApiKeyPayload:
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
      required:
      - name
      type: object
    GenerateUpdateApiKeyResponseModel:
      example:
        api_key:
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          key: key
        message: message
        status: true
      properties:
        api_key:
          $ref: '#/components/schemas/ApiKeyFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    GetApiKeysResponseModel:
      example:
        api_keys:
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          key: key
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          key: key
        message: message
        status: true
      properties:
        api_keys:
          items:
            $ref: '#/components/schemas/ApiKeyFields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    GetCustomerContractsListResponseModel:
      example:
        count: 2
        contracts:
        - end_date: 2000-01-23T04:56:07.000+00:00
          discounts:
          - discount_status: discount_status
            remaining_count: 5
            discount_amount: 0.8008281904610115
            discount_code: discount_code
            resource_id: 2
            id: 1
            discount_percent: 6.027456183070403
            discount_type: discount_type
            resource_name: resource_name
            resource_count: 5
          - discount_status: discount_status
            remaining_count: 5
            discount_amount: 0.8008281904610115
            discount_code: discount_code
            resource_id: 2
            id: 1
            discount_percent: 6.027456183070403
            discount_type: discount_type
            resource_name: resource_name
            resource_count: 5
          org_id: 3
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 9
          expiration_policy: 7
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
        - end_date: 2000-01-23T04:56:07.000+00:00
          discounts:
          - discount_status: discount_status
            remaining_count: 5
            discount_amount: 0.8008281904610115
            discount_code: discount_code
            resource_id: 2
            id: 1
            discount_percent: 6.027456183070403
            discount_type: discount_type
            resource_name: resource_name
            resource_count: 5
          - discount_status: discount_status
            remaining_count: 5
            discount_amount: 0.8008281904610115
            discount_code: discount_code
            resource_id: 2
            id: 1
            discount_percent: 6.027456183070403
            discount_type: discount_type
            resource_name: resource_name
            resource_count: 5
          org_id: 3
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 9
          expiration_policy: 7
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
        message: message
        status: true
      properties:
        contracts:
          items:
            $ref: '#/components/schemas/CustomerContractFields'
          type: array
        count:
          type: integer
        message:
          type: string
        status:
          type: boolean
      type: object
    GetInstanceLogsResponse:
      example:
        logs: logs
      properties:
        logs:
          type: string
      type: object
    GetInvitesResponseModel:
      example:
        invites:
        - created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          email: email
          status: status
        - created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          email: email
          status: status
        message: message
        status: true
      properties:
        invites:
          items:
            $ref: '#/components/schemas/InviteFields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    GetOrganizationResponseModel:
      example:
        organization:
          total_volumes: 7
          total_containers: 5
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          total_clusters: 5
          threshold: 1
          id: 6
          credit: 0
          total_instances: 2
          users:
          - joined_at: 2000-01-23T04:56:07.000+00:00
            sub: sub
            role: role
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            rbac_roles:
            - name: name
            - name: name
            id: 9
            email: email
            username: username
          - joined_at: 2000-01-23T04:56:07.000+00:00
            sub: sub
            role: role
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            rbac_roles:
            - name: name
            - name: name
            id: 9
            email: email
            username: username
        message: message
        status: true
      properties:
        message:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationFields'
        status:
          type: boolean
      type: object
    GetPermissionsResponseModel:
      example:
        permissions:
        - endpoint: endpoint
          method: method
          resource: resource
          created_at: 2000-01-23T04:56:07.000+00:00
          permission: permission
          id: 0
        - endpoint: endpoint
          method: method
          resource: resource
          created_at: 2000-01-23T04:56:07.000+00:00
          permission: permission
          id: 0
        message: message
        status: true
      properties:
        message:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/PermissionFields'
          type: array
        status:
          type: boolean
      type: object
    GetPoliciesResponseModel:
      example:
        policies:
        - permissions:
          - resource: resource
            permission: permission
            id: 6
          - resource: resource
            permission: permission
            id: 6
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
        - permissions:
          - resource: resource
            permission: permission
            id: 6
          - resource: resource
            permission: permission
            id: 6
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
        message: message
        status: true
      properties:
        message:
          type: string
        policies:
          items:
            $ref: '#/components/schemas/PolicyFields'
          type: array
        status:
          type: boolean
      type: object
    GetRbacRolesResponseModel:
      example:
        roles:
        - permissions:
          - resource: resource
            permission: permission
            id: 6
          - resource: resource
            permission: permission
            id: 6
          name: name
          policies:
          - name: name
            description: description
            id: 1
          - name: name
            description: description
            id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
        - permissions:
          - resource: resource
            permission: permission
            id: 6
          - resource: resource
            permission: permission
            id: 6
          name: name
          policies:
          - name: name
            description: description
            id: 1
          - name: name
            description: description
            id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
        message: message
        status: true
      properties:
        message:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/RbacRoleFields'
          type: array
        status:
          type: boolean
      type: object
    GetUserPermissionsResponseModel:
      example:
        permissions:
        - resource: resource
          permission: permission
          id: 0
        - resource: resource
          permission: permission
          id: 0
        message: message
        status: true
      properties:
        message:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/UserPermissionFields'
          type: array
        status:
          type: boolean
      type: object
    Get_credit_and_threshold_info:
      example:
        can_create_instance: true
        threshold: 6.027456183070403
        credit: 0.8008281904610115
      properties:
        can_create_instance:
          type: boolean
        credit:
          type: number
        threshold:
          type: number
      type: object
    Get_credit_and_threshold_info_in_response:
      example:
        data:
          can_create_instance: true
          threshold: 6.027456183070403
          credit: 0.8008281904610115
        message: message
        status: true
      properties:
        data:
          $ref: '#/components/schemas/Get_credit_and_threshold_info'
        message:
          type: string
        status:
          type: boolean
      type: object
    GraphDatetimeValueModel:
      example:
        datetime: datetime
        value: 1.4658129805029452
      properties:
        datetime:
          type: string
        value:
          type: number
      type: object
    Image:
      example:
        image:
          size: 6
          display_size: display_size
          is_public: true
          name: name
          description: description
          region_name: region_name
          id: 0
          type: type
          version: version
          labels:
          - id: 7
            label: label
          - id: 7
            label: label
      properties:
        image:
          $ref: '#/components/schemas/Image_Fields'
      type: object
    Image_Fields:
      example:
        size: 6
        display_size: display_size
        is_public: true
        name: name
        description: description
        region_name: region_name
        id: 0
        type: type
        version: version
        labels:
        - id: 7
          label: label
        - id: 7
          label: label
      properties:
        description:
          type: string
        display_size:
          type: string
        id:
          type: integer
        is_public:
          type: boolean
        labels:
          items:
            $ref: '#/components/schemas/LableResonse'
          type: array
        name:
          type: string
        region_name:
          type: string
        size:
          type: integer
        type:
          type: string
        version:
          type: string
      type: object
    Image_Get_Response:
      example:
        images:
        - size: 6
          display_size: display_size
          is_public: true
          name: name
          description: description
          region_name: region_name
          id: 0
          type: type
          version: version
          labels:
          - id: 7
            label: label
          - id: 7
            label: label
        - size: 6
          display_size: display_size
          is_public: true
          name: name
          description: description
          region_name: region_name
          id: 0
          type: type
          version: version
          labels:
          - id: 7
            label: label
          - id: 7
            label: label
        logo: logo
        region_name: region_name
        type: type
      properties:
        images:
          items:
            $ref: '#/components/schemas/Image_Fields'
          type: array
        logo:
          type: string
        region_name:
          type: string
        type:
          type: string
      type: object
    Images:
      example:
        images:
        - images:
          - size: 6
            display_size: display_size
            is_public: true
            name: name
            description: description
            region_name: region_name
            id: 0
            type: type
            version: version
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
          - size: 6
            display_size: display_size
            is_public: true
            name: name
            description: description
            region_name: region_name
            id: 0
            type: type
            version: version
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
          logo: logo
          region_name: region_name
          type: type
        - images:
          - size: 6
            display_size: display_size
            is_public: true
            name: name
            description: description
            region_name: region_name
            id: 0
            type: type
            version: version
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
          - size: 6
            display_size: display_size
            is_public: true
            name: name
            description: description
            region_name: region_name
            id: 0
            type: type
            version: version
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
          logo: logo
          region_name: region_name
          type: type
        message: message
        status: true
      properties:
        images:
          items:
            $ref: '#/components/schemas/Image_Get_Response'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    Import_Keypair_Payload:
      properties:
        environment_name:
          description: The name of the environment where the key pair is being created.
          type: string
        name:
          description: The name of the key pair that is being created.
          maxLength: 50
          type: string
        public_key:
          description: The public key that is being used to import an SSH key pair.
          type: string
      required:
      - environment_name
      - name
      - public_key
      type: object
    Import_Keypair_Response:
      example:
        keypair:
          public_key: public_key
          environment:
            features:
              green_status: GREEN
              network_optimised: true
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 0
            region: region
          fingerprint: fingerprint
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
        message: message
        status: true
      properties:
        keypair:
          $ref: '#/components/schemas/Keypair_Fields'
        message:
          type: string
        status:
          type: boolean
      type: object
    InfrahubResourceObjectResponseForCustomer:
      example:
        actual_price: 6.027456183070403
        price: 5.962133916683182
        host: host
        name: name
        resources:
        - amount: 2
          actual_price: 5.637376656633329
          rate: 3.616076749251911
          price: 9.301444243932576
          name: name
          type: type
          discounted_rate: 7.061401241503109
        - amount: 2
          actual_price: 5.637376656633329
          rate: 3.616076749251911
          price: 9.301444243932576
          name: name
          type: type
          discounted_rate: 7.061401241503109
        infrahub_id: 1
        type: type
        status: status
      properties:
        actual_price:
          type: number
        host:
          type: string
        infrahub_id:
          type: integer
        name:
          type: string
        price:
          type: number
        resources:
          items:
            $ref: '#/components/schemas/PricebookResourceObjectResponseForCustomer'
          type: array
        status:
          type: string
        type:
          type: string
      type: object
    Instance:
      example:
        instance:
          image:
            name: name
          os: os
          requires_public_ip: true
          contract_id: 0
          floating_ip_status: floating_ip_status
          keypair:
            name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          power_state: power_state
          labels:
          - labels
          - labels
          callback_url: callback_url
          flavor:
            features: "{}"
            disk: 5
            gpu_count: 7
            name: name
            cpu: 5
            ephemeral: 2
            id: 9
            gpu: gpu
            labels:
            - id: 3
              label: label
            - id: 3
              label: label
            ram: 2.027123023002322
          vm_state: vm_state
          features: "{}"
          environment:
            features:
              green_status: GREEN
              network_optimised: true
            org_id: 1
            name: name
            id: 6
            region: region
          port_randomization_status: port_randomization_status
          floating_ip: floating_ip
          name: name
          fixed_ip: fixed_ip
          id: 4
          locked: true
          volume_attachments:
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          security_rules:
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          port_randomization: true
          status: status
        message: message
        status: true
      properties:
        instance:
          $ref: '#/components/schemas/Instance_Fields'
        message:
          type: string
        status:
          type: boolean
      type: object
    InstanceEvents:
      example:
        instance_events:
        - reason: reason
          instance_id: 0
          user_id: 1
          org_id: 6
          time: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          object: object
        - reason: reason
          instance_id: 0
          user_id: 1
          org_id: 6
          time: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          object: object
        message: message
        status: true
      properties:
        instance_events:
          items:
            $ref: '#/components/schemas/InstanceEventsFields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    InstanceEventsFields:
      example:
        reason: reason
        instance_id: 0
        user_id: 1
        org_id: 6
        time: 2000-01-23T04:56:07.000+00:00
        message: message
        type: type
        object: object
      properties:
        instance_id:
          type: integer
        message:
          type: string
        object:
          type: string
        org_id:
          type: integer
        reason:
          type: string
        time:
          format: date-time
          type: string
        type:
          type: string
        user_id:
          type: integer
      type: object
    InstanceResizePayload:
      example:
        flavor:
          disk: 6
          gpu_count: 1
          cpu: 0
          gpu: gpu
          ram: 5.962133916683182
        flavor_name: flavor_name
      properties:
        flavor:
          $ref: '#/components/schemas/Flavor_Object_Fields'
        flavor_name:
          type: string
      type: object
    Instance_Environment_Fields:
      example:
        features:
          green_status: GREEN
          network_optimised: true
        org_id: 1
        name: name
        id: 6
        region: region
      properties:
        features:
          $ref: '#/components/schemas/Environment_Features'
        id:
          type: integer
        name:
          type: string
        org_id:
          type: integer
        region:
          type: string
      type: object
    Instance_Fields:
      example:
        image:
          name: name
        os: os
        requires_public_ip: true
        contract_id: 0
        floating_ip_status: floating_ip_status
        keypair:
          name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        power_state: power_state
        labels:
        - labels
        - labels
        callback_url: callback_url
        flavor:
          features: "{}"
          disk: 5
          gpu_count: 7
          name: name
          cpu: 5
          ephemeral: 2
          id: 9
          gpu: gpu
          labels:
          - id: 3
            label: label
          - id: 3
            label: label
          ram: 2.027123023002322
        vm_state: vm_state
        features: "{}"
        environment:
          features:
            green_status: GREEN
            network_optimised: true
          org_id: 1
          name: name
          id: 6
          region: region
        port_randomization_status: port_randomization_status
        floating_ip: floating_ip
        name: name
        fixed_ip: fixed_ip
        id: 4
        locked: true
        volume_attachments:
        - volume:
            volume_type: volume_type
            size: 7
            name: name
            description: description
            id: 6
            bootable: true
          protected: true
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          device: device
          status: status
        - volume:
            volume_type: volume_type
            size: 7
            name: name
            description: description
            id: 6
            bootable: true
          protected: true
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          device: device
          status: status
        security_rules:
        - protocol: protocol
          ethertype: ethertype
          created_at: 2000-01-23T04:56:07.000+00:00
          port_range_max: 1
          remote_ip_prefix: remote_ip_prefix
          id: 7
          direction: direction
          port_range_min: 1
          status: status
        - protocol: protocol
          ethertype: ethertype
          created_at: 2000-01-23T04:56:07.000+00:00
          port_range_max: 1
          remote_ip_prefix: remote_ip_prefix
          id: 7
          direction: direction
          port_range_min: 1
          status: status
        port_randomization: true
        status: status
      properties:
        callback_url:
          type: string
        contract_id:
          type: integer
        created_at:
          format: date-time
          type: string
        environment:
          $ref: '#/components/schemas/Instance_Environment_Fields'
        features:
          properties: {}
          type: object
        fixed_ip:
          type: string
        flavor:
          $ref: '#/components/schemas/Instance_Flavor_Fields'
        floating_ip:
          type: string
        floating_ip_status:
          type: string
        id:
          type: integer
        image:
          $ref: '#/components/schemas/Instance_Image_Fields'
        keypair:
          $ref: '#/components/schemas/Instance_Keypair_Fields'
        labels:
          items:
            type: string
          type: array
        locked:
          type: boolean
        name:
          type: string
        os:
          type: string
        port_randomization:
          type: boolean
        port_randomization_status:
          type: string
        power_state:
          type: string
        requires_public_ip:
          type: boolean
        security_rules:
          items:
            $ref: '#/components/schemas/Security_Rules_Fields_for_Instance'
          type: array
        status:
          type: string
        vm_state:
          type: string
        volume_attachments:
          items:
            $ref: '#/components/schemas/Volume_Attachment_Fields'
          type: array
      type: object
    Instance_Flavor_Fields:
      example:
        features: "{}"
        disk: 5
        gpu_count: 7
        name: name
        cpu: 5
        ephemeral: 2
        id: 9
        gpu: gpu
        labels:
        - id: 3
          label: label
        - id: 3
          label: label
        ram: 2.027123023002322
      properties:
        cpu:
          type: integer
        disk:
          type: integer
        ephemeral:
          type: integer
        features:
          properties: {}
          type: object
        gpu:
          type: string
        gpu_count:
          type: integer
        id:
          type: integer
        labels:
          items:
            $ref: '#/components/schemas/FlavorLabelFields'
          type: array
        name:
          type: string
        ram:
          type: number
      type: object
    Instance_Image_Fields:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    Instance_Keypair_Fields:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    Instance_Overview_Fields:
      example:
        cost_per_hour: 2.3021358869347655
        gpus: 9
        count: 7
        vcpus: 2
        ram: 3.616076749251911
      properties:
        cost_per_hour:
          type: number
        count:
          type: integer
        gpus:
          type: integer
        ram:
          type: number
        vcpus:
          type: integer
      type: object
    Instances:
      example:
        instances:
        - image:
            name: name
          os: os
          requires_public_ip: true
          contract_id: 0
          floating_ip_status: floating_ip_status
          keypair:
            name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          power_state: power_state
          labels:
          - labels
          - labels
          callback_url: callback_url
          flavor:
            features: "{}"
            disk: 5
            gpu_count: 7
            name: name
            cpu: 5
            ephemeral: 2
            id: 9
            gpu: gpu
            labels:
            - id: 3
              label: label
            - id: 3
              label: label
            ram: 2.027123023002322
          vm_state: vm_state
          features: "{}"
          environment:
            features:
              green_status: GREEN
              network_optimised: true
            org_id: 1
            name: name
            id: 6
            region: region
          port_randomization_status: port_randomization_status
          floating_ip: floating_ip
          name: name
          fixed_ip: fixed_ip
          id: 4
          locked: true
          volume_attachments:
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          security_rules:
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          port_randomization: true
          status: status
        - image:
            name: name
          os: os
          requires_public_ip: true
          contract_id: 0
          floating_ip_status: floating_ip_status
          keypair:
            name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          power_state: power_state
          labels:
          - labels
          - labels
          callback_url: callback_url
          flavor:
            features: "{}"
            disk: 5
            gpu_count: 7
            name: name
            cpu: 5
            ephemeral: 2
            id: 9
            gpu: gpu
            labels:
            - id: 3
              label: label
            - id: 3
              label: label
            ram: 2.027123023002322
          vm_state: vm_state
          features: "{}"
          environment:
            features:
              green_status: GREEN
              network_optimised: true
            org_id: 1
            name: name
            id: 6
            region: region
          port_randomization_status: port_randomization_status
          floating_ip: floating_ip
          name: name
          fixed_ip: fixed_ip
          id: 4
          locked: true
          volume_attachments:
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          - volume:
              volume_type: volume_type
              size: 7
              name: name
              description: description
              id: 6
              bootable: true
            protected: true
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            device: device
            status: status
          security_rules:
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          - protocol: protocol
            ethertype: ethertype
            created_at: 2000-01-23T04:56:07.000+00:00
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          port_randomization: true
          status: status
        count: 0
        page: 6
        message: message
        page_size: 1
        status: true
      properties:
        count:
          type: integer
        instances:
          items:
            $ref: '#/components/schemas/Instance_Fields'
          type: array
        message:
          type: string
        page:
          type: integer
        page_size:
          type: integer
        status:
          type: boolean
      type: object
    InviteFields:
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        email: email
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        email:
          type: string
        id:
          type: integer
        status:
          type: string
      type: object
    InviteUserPayload:
      example:
        email: email
      properties:
        email:
          description: The email for sending invitation.
          maxLength: 100
          type: string
      required:
      - email
      type: object
    InviteUserResponseModel:
      example:
        invite:
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          email: email
          status: status
        message: message
        status: true
      properties:
        invite:
          $ref: '#/components/schemas/InviteFields'
        message:
          type: string
        status:
          type: boolean
      type: object
    Keypair_Environment_Features:
      example:
        green_status: GREEN
        network_optimised: true
      properties:
        green_status:
          enum:
          - GREEN
          - PARTIALLY_GREEN
          - NOT_GREEN
          example: GREEN
          type: string
        network_optimised:
          type: boolean
      type: object
    Keypair_Environment_Fields:
      example:
        features:
          green_status: GREEN
          network_optimised: true
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        region: region
      properties:
        created_at:
          format: date-time
          type: string
        features:
          $ref: '#/components/schemas/Keypair_Environment_Features'
        id:
          type: integer
        name:
          type: string
        region:
          type: string
      type: object
    Keypair_Fields:
      example:
        public_key: public_key
        environment:
          features:
            green_status: GREEN
            network_optimised: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          region: region
        fingerprint: fingerprint
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 6
      properties:
        created_at:
          format: date-time
          type: string
        environment:
          $ref: '#/components/schemas/Keypair_Environment_Fields'
        fingerprint:
          type: string
        id:
          type: integer
        name:
          type: string
        public_key:
          type: string
      type: object
    Keypairs:
      example:
        count: 0
        page: 6
        message: message
        keypairs:
        - public_key: public_key
          environment:
            features:
              green_status: GREEN
              network_optimised: true
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 0
            region: region
          fingerprint: fingerprint
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
        - public_key: public_key
          environment:
            features:
              green_status: GREEN
              network_optimised: true
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 0
            region: region
          fingerprint: fingerprint
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
        page_size: 1
        status: true
      properties:
        count:
          type: integer
        keypairs:
          items:
            $ref: '#/components/schemas/Keypair_Fields'
          type: array
        message:
          type: string
        page:
          type: integer
        page_size:
          type: integer
        status:
          type: boolean
      type: object
    LableResonse:
      example:
        id: 7
        label: label
      properties:
        id:
          type: integer
        label:
          type: string
      type: object
    Last_day_cost_fields:
      example:
        instances_cost: 6.027456183070403
        total_cost: 1.4658129805029452
        clusters_cost: 0.8008281904610115
        volumes_cost: 5.962133916683182
      properties:
        clusters_cost:
          type: number
        instances_cost:
          type: number
        total_cost:
          type: number
        volumes_cost:
          type: number
      type: object
    Last_day_cost_response:
      example:
        data:
          instances_cost: 6.027456183070403
          total_cost: 1.4658129805029452
          clusters_cost: 0.8008281904610115
          volumes_cost: 5.962133916683182
        message: message
        status: true
      properties:
        data:
          $ref: '#/components/schemas/Last_day_cost_fields'
        message:
          type: string
        status:
          type: boolean
      type: object
    Logos:
      example:
        favicon: favicon
        light: light
        dark: dark
        email: email
      properties:
        dark:
          type: string
        email:
          type: string
        favicon:
          type: string
        light:
          type: string
      type: object
    MFAStatusFields:
      example:
        mfa_enabled: true
      properties:
        mfa_enabled:
          description: Whether MFA is enabled for the user
          type: boolean
      required:
      - mfa_enabled
      type: object
    MFAStatusResponse:
      example:
        mfa:
          mfa_enabled: true
        message: message
        status: true
      properties:
        message:
          type: string
        mfa:
          $ref: '#/components/schemas/MFAStatusFields'
        status:
          type: boolean
      type: object
    ManualReconciliationModel:
      example:
        cluster:
          created_at: 2000-01-23T04:56:07.000+00:00
          keypair_name: keypair_name
          api_address: api_address
          node_groups:
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          - flavor:
              features: "{}"
              disk: 1
              gpu_count: 5
              name: name
              cpu: 6
              ephemeral: 5
              id: 2
              gpu: gpu
              labels:
              - id: 7
                label: label
              - id: 7
                label: label
              ram: 9.301444243932576
            role: role
            updated_at: 2000-01-23T04:56:07.000+00:00
            count: 3
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
          nodes:
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          - instance:
              contract_id: 7
              floating_ip: floating_ip
              floating_ip_status: floating_ip_status
              name: name
              fixed_ip: fixed_ip
              id: 1
              image_id: 1
              status: status
            is_bastion: true
            role: role
            requires_public_ip: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 4
            node_group_name: node_group_name
            status_reason: status_reason
            node_group_id: 1
            status: status
          kube_config: kube_config
          kubernetes_version: kubernetes_version
          name: name
          id: 0
          master_flavor:
            features: "{}"
            disk: 1
            gpu_count: 5
            name: name
            cpu: 6
            ephemeral: 5
            id: 2
            gpu: gpu
            labels:
            - id: 7
              label: label
            - id: 7
              label: label
            ram: 9.301444243932576
          status_reason: status_reason
          environment_name: environment_name
          status: status
        message: message
        status: status
      properties:
        cluster:
          $ref: '#/components/schemas/ClusterFields'
        message:
          type: string
        status:
          type: string
      type: object
    MasterFlavorsResponse:
      example:
        flavors:
        - features: "{}"
          disk: 1
          gpu_count: 5
          name: name
          cpu: 6
          ephemeral: 5
          id: 2
          gpu: gpu
          labels:
          - id: 7
            label: label
          - id: 7
            label: label
          ram: 9.301444243932576
        - features: "{}"
          disk: 1
          gpu_count: 5
          name: name
          cpu: 6
          ephemeral: 5
          id: 2
          gpu: gpu
          labels:
          - id: 7
            label: label
          - id: 7
            label: label
          ram: 9.301444243932576
        message: message
        status: true
      properties:
        flavors:
          items:
            $ref: '#/components/schemas/Cluster_Flavor_Fields'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    MetricItemFields:
      example:
        unit: unit
        data:
        - - 2023-09-01T01:19:00+00:00
          - 60
          - 1041433070000000
        - - 2023-09-01T01:24:00+00:00
          - 60
          - 1041441320000000
        columns:
        - time
        - granularity
        - value
      properties:
        columns:
          example:
          - time
          - granularity
          - value
          items:
            type: string
          type: array
        data:
          example:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          items:
            items:
              properties: {}
              type: object
            type: array
          type: array
        unit:
          type: string
      type: object
    MetricsFields:
      example:
        disk.read:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        memory.usages:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        cpu:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        disk.write:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        network.in:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        network.out:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
      properties:
        cpu:
          $ref: '#/components/schemas/MetricItemFields'
        disk.read:
          $ref: '#/components/schemas/MetricItemFields'
        disk.write:
          $ref: '#/components/schemas/MetricItemFields'
        memory.usages:
          $ref: '#/components/schemas/MetricItemFields'
        network.in:
          $ref: '#/components/schemas/MetricItemFields'
        network.out:
          $ref: '#/components/schemas/MetricItemFields'
      type: object
    ModelEvaluationBillingHistoryDetailsResponseSchema:
      example:
        billing_history_model_evalutation_details:
          billing_history:
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          pagination:
            per_page: 5
            pages: 5
            page: 1
          org_id: 0
          total_count: 6
        message: message
        status: true
      properties:
        billing_history_model_evalutation_details:
          $ref: '#/components/schemas/billing_history_model_evalutation_details'
        message:
          description: ""
          type: string
        status:
          description: ""
          type: boolean
      type: object
    NameAvailableModel:
      example:
        available: true
        name: name
        message: message
      properties:
        available:
          type: boolean
        message:
          type: string
        name:
          type: string
      type: object
    New_Configurations_Response:
      example:
        "8x": 5
        "4x": 5
        "2x": 1
        "1x": 6
        "10x": 0
      properties:
        "10x":
          type: integer
        "1x":
          type: integer
        "2x":
          type: integer
        "4x":
          type: integer
        "8x":
          type: integer
      type: object
    New_Model_Response:
      example:
        planned_7_days: planned_7_days
        planned_100_days: planned_100_days
        configurations:
          "8x": 5
          "4x": 5
          "2x": 1
          "1x": 6
          "10x": 0
        available: available
        model: model
        planned_30_days: planned_30_days
      properties:
        available:
          type: string
        configurations:
          $ref: '#/components/schemas/New_Configurations_Response'
        model:
          type: string
        planned_100_days:
          type: string
        planned_30_days:
          type: string
        planned_7_days:
          type: string
      type: object
    New_Stock_Response:
      example:
        models:
        - planned_7_days: planned_7_days
          planned_100_days: planned_100_days
          configurations:
            "8x": 5
            "4x": 5
            "2x": 1
            "1x": 6
            "10x": 0
          available: available
          model: model
          planned_30_days: planned_30_days
        - planned_7_days: planned_7_days
          planned_100_days: planned_100_days
          configurations:
            "8x": 5
            "4x": 5
            "2x": 1
            "1x": 6
            "10x": 0
          available: available
          model: model
          planned_30_days: planned_30_days
        stock-type: stock-type
        region: region
      properties:
        models:
          items:
            $ref: '#/components/schemas/New_Model_Response'
          type: array
        region:
          type: string
        stock-type:
          type: string
      type: object
    New_Stock_Retrive_Response:
      example:
        stocks:
        - models:
          - planned_7_days: planned_7_days
            planned_100_days: planned_100_days
            configurations:
              "8x": 5
              "4x": 5
              "2x": 1
              "1x": 6
              "10x": 0
            available: available
            model: model
            planned_30_days: planned_30_days
          - planned_7_days: planned_7_days
            planned_100_days: planned_100_days
            configurations:
              "8x": 5
              "4x": 5
              "2x": 1
              "1x": 6
              "10x": 0
            available: available
            model: model
            planned_30_days: planned_30_days
          stock-type: stock-type
          region: region
        - models:
          - planned_7_days: planned_7_days
            planned_100_days: planned_100_days
            configurations:
              "8x": 5
              "4x": 5
              "2x": 1
              "1x": 6
              "10x": 0
            available: available
            model: model
            planned_30_days: planned_30_days
          - planned_7_days: planned_7_days
            planned_100_days: planned_100_days
            configurations:
              "8x": 5
              "4x": 5
              "2x": 1
              "1x": 6
              "10x": 0
            available: available
            model: model
            planned_30_days: planned_30_days
          stock-type: stock-type
          region: region
      properties:
        stocks:
          items:
            $ref: '#/components/schemas/New_Stock_Response'
          type: array
      type: object
    OrganizationFields:
      example:
        total_volumes: 7
        total_containers: 5
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        total_clusters: 5
        threshold: 1
        id: 6
        credit: 0
        total_instances: 2
        users:
        - joined_at: 2000-01-23T04:56:07.000+00:00
          sub: sub
          role: role
          last_login: 2000-01-23T04:56:07.000+00:00
          name: name
          rbac_roles:
          - name: name
          - name: name
          id: 9
          email: email
          username: username
        - joined_at: 2000-01-23T04:56:07.000+00:00
          sub: sub
          role: role
          last_login: 2000-01-23T04:56:07.000+00:00
          name: name
          rbac_roles:
          - name: name
          - name: name
          id: 9
          email: email
          username: username
      properties:
        created_at:
          format: date-time
          type: string
        credit:
          type: integer
        id:
          type: integer
        name:
          type: string
        threshold:
          type: integer
        total_clusters:
          type: integer
        total_containers:
          type: integer
        total_instances:
          type: integer
        total_volumes:
          type: integer
        users:
          items:
            $ref: '#/components/schemas/OrganizationUserResponseModel'
          type: array
      required:
      - id
      - name
      type: object
    OrganizationLevelBillingHistory:
      example:
        billing_history:
        - attributes:
            id: id
          metrics:
            contract_cost: 0.8008281904610115
            incurred_bill: 6.027456183070403
            volume_cost: 2.3021358869347655
            snapshot_cost: 5.962133916683182
            non_discounted_bill: 1.4658129805029452
            vm_cost: 5.637376656633329
        - attributes:
            id: id
          metrics:
            contract_cost: 0.8008281904610115
            incurred_bill: 6.027456183070403
            volume_cost: 2.3021358869347655
            snapshot_cost: 5.962133916683182
            non_discounted_bill: 1.4658129805029452
            vm_cost: 5.637376656633329
        org_id: 7
        total_count: 9
      properties:
        billing_history:
          items:
            $ref: '#/components/schemas/OrganizationLevelBillingHistoryResources'
          type: array
        org_id:
          type: integer
        total_count:
          type: integer
      type: object
    OrganizationLevelBillingHistoryResources:
      example:
        attributes:
          id: id
        metrics:
          contract_cost: 0.8008281904610115
          incurred_bill: 6.027456183070403
          volume_cost: 2.3021358869347655
          snapshot_cost: 5.962133916683182
          non_discounted_bill: 1.4658129805029452
          vm_cost: 5.637376656633329
      properties:
        attributes:
          $ref: '#/components/schemas/OrganizationLevelBillingHistoryResponseAttributes'
        metrics:
          $ref: '#/components/schemas/OrganizationLevelBillingHistoryResponseMetrics'
      type: object
    OrganizationLevelBillingHistoryResponseAttributes:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    OrganizationLevelBillingHistoryResponseMetrics:
      example:
        contract_cost: 0.8008281904610115
        incurred_bill: 6.027456183070403
        volume_cost: 2.3021358869347655
        snapshot_cost: 5.962133916683182
        non_discounted_bill: 1.4658129805029452
        vm_cost: 5.637376656633329
      properties:
        contract_cost:
          type: number
        incurred_bill:
          type: number
        non_discounted_bill:
          type: number
        snapshot_cost:
          type: number
        vm_cost:
          type: number
        volume_cost:
          type: number
      type: object
    OrganizationLevelBillingHistoryResponseModel:
      example:
        billing_history:
          billing_history:
          - attributes:
              id: id
            metrics:
              contract_cost: 0.8008281904610115
              incurred_bill: 6.027456183070403
              volume_cost: 2.3021358869347655
              snapshot_cost: 5.962133916683182
              non_discounted_bill: 1.4658129805029452
              vm_cost: 5.637376656633329
          - attributes:
              id: id
            metrics:
              contract_cost: 0.8008281904610115
              incurred_bill: 6.027456183070403
              volume_cost: 2.3021358869347655
              snapshot_cost: 5.962133916683182
              non_discounted_bill: 1.4658129805029452
              vm_cost: 5.637376656633329
          org_id: 7
          total_count: 9
        message: message
        status: true
      properties:
        billing_history:
          $ref: '#/components/schemas/OrganizationLevelBillingHistory'
        message:
          type: string
        status:
          type: boolean
      type: object
    OrganizationUserResponseModel:
      example:
        joined_at: 2000-01-23T04:56:07.000+00:00
        sub: sub
        role: role
        last_login: 2000-01-23T04:56:07.000+00:00
        name: name
        rbac_roles:
        - name: name
        - name: name
        id: 9
        email: email
        username: username
      properties:
        email:
          type: string
        id:
          type: integer
        joined_at:
          format: date-time
          type: string
        last_login:
          format: date-time
          type: string
        name:
          type: string
        rbac_roles:
          items:
            $ref: '#/components/schemas/RbacRoleField'
          type: array
        role:
          type: string
        sub:
          type: string
        username:
          type: string
      type: object
    Organization_Threshold_fields:
      example:
        interface_title: interface_title
        subscribed: true
        threshold: 6
        id: 0
        interface_tooltip: interface_tooltip
      properties:
        id:
          type: integer
        interface_title:
          type: string
        interface_tooltip:
          type: string
        subscribed:
          type: boolean
        threshold:
          type: integer
      type: object
    Organization_threshold_update_response:
      example:
        threshold:
          interface_title: interface_title
          subscribed: true
          threshold: 6
          id: 0
          interface_tooltip: interface_tooltip
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        threshold:
          $ref: '#/components/schemas/Organization_Threshold_fields'
      type: object
    Organization_thresholds_response:
      example:
        thresholds:
        - interface_title: interface_title
          subscribed: true
          threshold: 6
          id: 0
          interface_tooltip: interface_tooltip
        - interface_title: interface_title
          subscribed: true
          threshold: 6
          id: 0
          interface_tooltip: interface_tooltip
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        thresholds:
          items:
            $ref: '#/components/schemas/Organization_Threshold_fields'
          type: array
      type: object
    Overview_Info:
      example:
        container:
          cost_per_hour: 0.8008281904610115
          gpus: 1
          count: 6
          vcpus: 5
          ram: 5.962133916683182
        volume:
          cost_per_hour: 4.145608029883936
          using: 1
          count: 7
        instance:
          cost_per_hour: 2.3021358869347655
          gpus: 9
          count: 7
          vcpus: 2
          ram: 3.616076749251911
      properties:
        container:
          $ref: '#/components/schemas/Container_Overview_Fields'
        instance:
          $ref: '#/components/schemas/Instance_Overview_Fields'
        volume:
          $ref: '#/components/schemas/Volume_Overview_Fields'
      type: object
    PaginationData:
      example:
        per_page: 3
        pages: 9
        page: 7
      properties:
        page:
          type: integer
        pages:
          type: integer
        per_page:
          type: integer
      type: object
    PartnerConfig:
      example:
        uris:
          console: console
          auth: auth
          api_uri: api_uri
          doc: doc
          landing_page: landing_page
          contact_us: contact_us
          api_doc: api_doc
        background_image_url: background_image_url
        support_email: support_email
        user_type: user_type
        name: name
        logos:
          favicon: favicon
          light: light
          dark: dark
          email: email
        colors:
          secondary:
            light: light
            dark: dark
          primary:
            light: light
            dark: dark
      properties:
        background_image_url:
          type: string
        colors:
          $ref: '#/components/schemas/Colors'
        logos:
          $ref: '#/components/schemas/Logos'
        name:
          type: string
        support_email:
          type: string
        uris:
          $ref: '#/components/schemas/URIs'
        user_type:
          type: string
      required:
      - name
      - user_type
      type: object
    Payment_Details_Fields:
      example:
        tax_amount: 6.027456183070403
        transaction_id: transaction_id
        amount: 0.8008281904610115
        updated_at: 2000-01-23T04:56:07.000+00:00
        payment_id: payment_id
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        currency: currency
        invoice: invoice
        paid_from: paid_from
        gateway_response: gateway_response
        status: status
      properties:
        amount:
          type: number
        created_at:
          format: date-time
          type: string
        currency:
          type: string
        description:
          type: string
        gateway_response:
          type: string
        invoice:
          type: string
        paid_from:
          type: string
        payment_id:
          type: string
        status:
          type: string
        tax_amount:
          type: number
        transaction_id:
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    Payment_Details_Response:
      example:
        data:
          tax_amount: 6.027456183070403
          transaction_id: transaction_id
          amount: 0.8008281904610115
          updated_at: 2000-01-23T04:56:07.000+00:00
          payment_id: payment_id
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          currency: currency
          invoice: invoice
          paid_from: paid_from
          gateway_response: gateway_response
          status: status
        message: message
        status: true
      properties:
        data:
          $ref: '#/components/schemas/Payment_Details_Fields'
        message:
          type: string
        status:
          type: boolean
      type: object
    Payment_Initiate_Fields:
      example:
        payment_id: payment_id
      properties:
        payment_id:
          type: string
      type: object
    Payment_Initiate_Payload:
      properties:
        amount:
          type: number
      type: object
    Payment_Initiate_Response:
      example:
        data:
          payment_id: payment_id
        message: message
        status: true
      properties:
        data:
          $ref: '#/components/schemas/Payment_Initiate_Fields'
        message:
          type: string
        status:
          type: boolean
      type: object
    PermissionFields:
      example:
        endpoint: endpoint
        method: method
        resource: resource
        created_at: 2000-01-23T04:56:07.000+00:00
        permission: permission
        id: 0
      properties:
        created_at:
          format: date-time
          type: string
        endpoint:
          type: string
        id:
          type: integer
        method:
          type: string
        permission:
          type: string
        resource:
          type: string
      type: object
    PolicyFields:
      example:
        permissions:
        - resource: resource
          permission: permission
          id: 6
        - resource: resource
          permission: permission
          id: 6
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          type: integer
        name:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/PolicyPermissionFields'
          type: array
      type: object
    PolicyPermissionFields:
      example:
        resource: resource
        permission: permission
        id: 6
      properties:
        id:
          type: integer
        permission:
          type: string
        resource:
          type: string
      type: object
    PricebookModel:
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        discount_applied: true
        original_value: 6.027456183070403
        end_time: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 0
        value: 1.4658129805029452
      properties:
        discount_applied:
          type: boolean
        end_time:
          format: date-time
          type: string
        id:
          type: integer
        name:
          type: string
        original_value:
          type: number
        start_time:
          format: date-time
          type: string
        value:
          type: number
      type: object
    PricebookResourceObjectResponseForCustomer:
      example:
        amount: 2
        actual_price: 5.637376656633329
        rate: 3.616076749251911
        price: 9.301444243932576
        name: name
        type: type
        discounted_rate: 7.061401241503109
      properties:
        actual_price:
          type: number
        amount:
          type: integer
        discounted_rate:
          type: number
        name:
          type: string
        price:
          type: number
        rate:
          type: number
        type:
          type: string
      type: object
    PrimaryColor:
      example:
        light: light
        dark: dark
      properties:
        dark:
          type: string
        light:
          type: string
      type: object
    Profile_Fields:
      example:
        data: data
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
      properties:
        created_at:
          format: date-time
          type: string
        data:
          type: string
        description:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    Profile_List_Response:
      example:
        profiles:
        - data: data
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
        - data: data
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
        message: message
        status: true
      properties:
        message:
          type: string
        profiles:
          items:
            $ref: '#/components/schemas/Profile_Fields'
          type: array
        status:
          type: boolean
      type: object
    Profile_Object_Fields:
      properties:
        description:
          type: string
        name:
          type: string
      required:
      - name
      type: object
    RbacRoleDetailResponseModel:
      example:
        role:
          permissions:
          - resource: resource
            permission: permission
            id: 6
          - resource: resource
            permission: permission
            id: 6
          name: name
          policies:
          - name: name
            description: description
            id: 1
          - name: name
            description: description
            id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
        message: message
        status: true
      properties:
        message:
          type: string
        role:
          $ref: '#/components/schemas/RbacRoleFields'
        status:
          type: boolean
      type: object
    RbacRoleField:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    RbacRoleFields:
      example:
        permissions:
        - resource: resource
          permission: permission
          id: 6
        - resource: resource
          permission: permission
          id: 6
        name: name
        policies:
        - name: name
          description: description
          id: 1
        - name: name
          description: description
          id: 1
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          type: integer
        name:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/RolePermissionFields'
          type: array
        policies:
          items:
            $ref: '#/components/schemas/RolePolicyFields'
          type: array
      type: object
    Region_Fields:
      example:
        country: country
        green_status: GREEN
        name: name
        description: description
        id: 0
      properties:
        country:
          type: string
        description:
          type: string
        green_status:
          description: Green status
          enum:
          - GREEN
          - PARTIALLY_GREEN
          - NOT_GREEN
          example: GREEN
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    Regions:
      example:
        regions:
        - country: country
          green_status: GREEN
          name: name
          description: description
          id: 0
        - country: country
          green_status: GREEN
          name: name
          description: description
          id: 0
        message: message
        status: true
      properties:
        message:
          type: string
        regions:
          items:
            $ref: '#/components/schemas/Region_Fields'
          type: array
        status:
          type: boolean
      type: object
    RemoveMemberFromOrganizationResponseModel:
      example:
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
      type: object
    RemoveMemberPayload:
      example:
        email: email
      properties:
        email:
          description: The email of the user to be removed.
          maxLength: 64
          type: string
      required:
      - email
      type: object
    RequestInstanceLogsPayload:
      example:
        length: 0
      properties:
        length:
          description: The amount of lines to fetch
          type: integer
      type: object
    RequestInstanceLogsResponse:
      example:
        request_id: 0
      properties:
        request_id:
          type: integer
      type: object
    Request_Console:
      example:
        message: message
        url: url
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        url:
          type: string
      type: object
    ResourceBillingEventsHistoryMetrics:
      example:
        total_cost: 1.4658129805029452
        price_per_hour: 6.027456183070403
        event_duration: 0.8008281904610115
        start: start
        event: event
      properties:
        event:
          type: string
        event_duration:
          type: number
        price_per_hour:
          type: number
        start:
          type: string
        total_cost:
          type: number
      type: object
    ResourceBillingEventsHistoryResponse:
      example:
        billing_events_history:
        - total_cost: 1.4658129805029452
          price_per_hour: 6.027456183070403
          event_duration: 0.8008281904610115
          start: start
          event: event
        - total_cost: 1.4658129805029452
          price_per_hour: 6.027456183070403
          event_duration: 0.8008281904610115
          start: start
          event: event
        message: message
        status: true
      properties:
        billing_events_history:
          items:
            $ref: '#/components/schemas/ResourceBillingEventsHistoryMetrics'
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceBillingResponseForCustomer:
      example:
        calculated_resource_bills:
          resource:
            actual_price: 6.027456183070403
            price: 5.962133916683182
            host: host
            name: name
            resources:
            - amount: 2
              actual_price: 5.637376656633329
              rate: 3.616076749251911
              price: 9.301444243932576
              name: name
              type: type
              discounted_rate: 7.061401241503109
            - amount: 2
              actual_price: 5.637376656633329
              rate: 3.616076749251911
              price: 9.301444243932576
              name: name
              type: type
              discounted_rate: 7.061401241503109
            infrahub_id: 1
            type: type
            status: status
          org_id: 0
        message: message
        status: true
      properties:
        calculated_resource_bills:
          $ref: '#/components/schemas/ResourceObjectResponseForCustomer'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelBillingBucketDetailsResources:
      example:
        attributes:
          id: id
          infrahub_id: 0
          resource_name: resource_name
        metrics:
          usage_time_HIBERNATED: 9.301444243932576
          incurred_bill: 6.027456183070403
          price_per_hour: 5.637376656633329
          usage_time: 2.3021358869347655
          usage_time_SHUTOFF: 3.616076749251911
          usage_time_ACTIVE: 7.061401241503109
          non_discounted_bill: 1.4658129805029452
          non_discounted_price_per_hour: 5.962133916683182
      properties:
        attributes:
          $ref: '#/components/schemas/ResourceLevelBillingDetailsAttributes'
        metrics:
          $ref: '#/components/schemas/ResourceLevelBillingDetailsMetrics'
      type: object
    ResourceLevelBillingDetailsAttributes:
      example:
        id: id
        infrahub_id: 0
        resource_name: resource_name
      properties:
        id:
          type: string
        infrahub_id:
          type: integer
        resource_name:
          type: string
      type: object
    ResourceLevelBillingDetailsMetrics:
      example:
        usage_time_HIBERNATED: 9.301444243932576
        incurred_bill: 6.027456183070403
        price_per_hour: 5.637376656633329
        usage_time: 2.3021358869347655
        usage_time_SHUTOFF: 3.616076749251911
        usage_time_ACTIVE: 7.061401241503109
        non_discounted_bill: 1.4658129805029452
        non_discounted_price_per_hour: 5.962133916683182
      properties:
        incurred_bill:
          type: number
        non_discounted_bill:
          type: number
        non_discounted_price_per_hour:
          type: number
        price_per_hour:
          type: number
        usage_time:
          type: number
        usage_time_ACTIVE:
          type: number
        usage_time_HIBERNATED:
          type: number
        usage_time_SHUTOFF:
          type: number
      type: object
    ResourceLevelBillingDetailsVM:
      example:
        billing_history:
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            usage_time_HIBERNATED: 9.301444243932576
            incurred_bill: 6.027456183070403
            price_per_hour: 5.637376656633329
            usage_time: 2.3021358869347655
            usage_time_SHUTOFF: 3.616076749251911
            usage_time_ACTIVE: 7.061401241503109
            non_discounted_bill: 1.4658129805029452
            non_discounted_price_per_hour: 5.962133916683182
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            usage_time_HIBERNATED: 9.301444243932576
            incurred_bill: 6.027456183070403
            price_per_hour: 5.637376656633329
            usage_time: 2.3021358869347655
            usage_time_SHUTOFF: 3.616076749251911
            usage_time_ACTIVE: 7.061401241503109
            non_discounted_bill: 1.4658129805029452
            non_discounted_price_per_hour: 5.962133916683182
        org_id: 0
        total_count: 6
      properties:
        billing_history:
          items:
            $ref: '#/components/schemas/ResourceLevelBillingVMDetailsResources'
          type: array
        org_id:
          type: integer
        total_count:
          type: integer
      type: object
    ResourceLevelBillingDetailsVolume:
      example:
        billing_history:
        - attributes:
            subresource_type: subresource_type
            subresource_amount: 6
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            incurred_bill: 1.4658129805029452
            price_per_hour: 2.3021358869347655
            usage_time: 7.061401241503109
            non_discounted_bill: 5.962133916683182
            non_discounted_price_per_hour: 5.637376656633329
        - attributes:
            subresource_type: subresource_type
            subresource_amount: 6
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            incurred_bill: 1.4658129805029452
            price_per_hour: 2.3021358869347655
            usage_time: 7.061401241503109
            non_discounted_bill: 5.962133916683182
            non_discounted_price_per_hour: 5.637376656633329
        org_id: 9
        total_count: 3
      properties:
        billing_history:
          items:
            $ref: '#/components/schemas/ResourceLevelBillingVolumeDetailsResources'
          type: array
        org_id:
          type: integer
        total_count:
          type: integer
      type: object
    ResourceLevelBillingDetailsVolumeAttributes:
      example:
        subresource_type: subresource_type
        subresource_amount: 6
        id: id
        infrahub_id: 0
        resource_name: resource_name
      properties:
        id:
          type: string
        infrahub_id:
          type: integer
        resource_name:
          type: string
        subresource_amount:
          type: integer
        subresource_type:
          type: string
      type: object
    ResourceLevelBillingDetailsVolumeMetrics:
      example:
        incurred_bill: 1.4658129805029452
        price_per_hour: 2.3021358869347655
        usage_time: 7.061401241503109
        non_discounted_bill: 5.962133916683182
        non_discounted_price_per_hour: 5.637376656633329
      properties:
        incurred_bill:
          type: number
        non_discounted_bill:
          type: number
        non_discounted_price_per_hour:
          type: number
        price_per_hour:
          type: number
        usage_time:
          type: number
      type: object
    ResourceLevelBillingHistory:
      example:
        billing_history:
        - attributes:
            contract_id: 0
            id: id
            infrahub_id: 6
            resource_name: resource_name
            status: status
          metrics:
            incurred_bill: 1.4658129805029452
            price_per_hour: 5.962133916683182
            usage_time: 5.637376656633329
        - attributes:
            contract_id: 0
            id: id
            infrahub_id: 6
            resource_name: resource_name
            status: status
          metrics:
            incurred_bill: 1.4658129805029452
            price_per_hour: 5.962133916683182
            usage_time: 5.637376656633329
        pagination:
          per_page: 3
          pages: 9
          page: 7
        org_id: 2
        total_count: 2
      properties:
        billing_history:
          items:
            $ref: '#/components/schemas/ResourceLevelBillingHistoryResources'
          type: array
        org_id:
          type: integer
        pagination:
          $ref: '#/components/schemas/PaginationData'
        total_count:
          type: integer
      type: object
    ResourceLevelBillingHistoryResources:
      example:
        attributes:
          contract_id: 0
          id: id
          infrahub_id: 6
          resource_name: resource_name
          status: status
        metrics:
          incurred_bill: 1.4658129805029452
          price_per_hour: 5.962133916683182
          usage_time: 5.637376656633329
      properties:
        attributes:
          $ref: '#/components/schemas/ResourceLevelBillingHistoryResponseAttributes'
        metrics:
          $ref: '#/components/schemas/ResourceLevelBillingHistoryResponseMetrics'
      type: object
    ResourceLevelBillingHistoryResourcesCluster:
      example:
        nodes:
        - attributes:
            contract_id: 0
            id: id
            infrahub_id: 6
            resource_name: resource_name
            status: status
          metrics:
            incurred_bill: 1.4658129805029452
            price_per_hour: 5.962133916683182
            usage_time: 5.637376656633329
        - attributes:
            contract_id: 0
            id: id
            infrahub_id: 6
            resource_name: resource_name
            status: status
          metrics:
            incurred_bill: 1.4658129805029452
            price_per_hour: 5.962133916683182
            usage_time: 5.637376656633329
        attributes:
          contract_id: 0
          id: id
          infrahub_id: 6
          resource_name: resource_name
          status: status
        metrics:
          incurred_bill: 1.4658129805029452
          price_per_hour: 5.962133916683182
          usage_time: 5.637376656633329
      properties:
        attributes:
          $ref: '#/components/schemas/ResourceLevelBillingHistoryResponseAttributes'
        metrics:
          $ref: '#/components/schemas/ResourceLevelBillingHistoryResponseMetrics'
        nodes:
          items:
            $ref: '#/components/schemas/ResourceLevelBillingHistoryResources'
          type: array
      type: object
    ResourceLevelBillingHistoryResponseAttributes:
      example:
        contract_id: 0
        id: id
        infrahub_id: 6
        resource_name: resource_name
        status: status
      properties:
        contract_id:
          type: integer
        id:
          type: string
        infrahub_id:
          type: integer
        resource_name:
          type: string
        status:
          type: string
      type: object
    ResourceLevelBillingHistoryResponseMetrics:
      example:
        incurred_bill: 1.4658129805029452
        price_per_hour: 5.962133916683182
        usage_time: 5.637376656633329
      properties:
        incurred_bill:
          type: number
        price_per_hour:
          type: number
        usage_time:
          type: number
      type: object
    ResourceLevelBillingVMDetailsResources:
      example:
        attributes:
          id: id
          infrahub_id: 0
          resource_name: resource_name
        metrics:
          usage_time_HIBERNATED: 9.301444243932576
          incurred_bill: 6.027456183070403
          price_per_hour: 5.637376656633329
          usage_time: 2.3021358869347655
          usage_time_SHUTOFF: 3.616076749251911
          usage_time_ACTIVE: 7.061401241503109
          non_discounted_bill: 1.4658129805029452
          non_discounted_price_per_hour: 5.962133916683182
      properties:
        attributes:
          $ref: '#/components/schemas/ResourceLevelBillingDetailsAttributes'
        metrics:
          $ref: '#/components/schemas/ResourceLevelBillingDetailsMetrics'
      type: object
    ResourceLevelBillingVolumeDetailsResources:
      example:
        attributes:
          subresource_type: subresource_type
          subresource_amount: 6
          id: id
          infrahub_id: 0
          resource_name: resource_name
        metrics:
          incurred_bill: 1.4658129805029452
          price_per_hour: 2.3021358869347655
          usage_time: 7.061401241503109
          non_discounted_bill: 5.962133916683182
          non_discounted_price_per_hour: 5.637376656633329
      properties:
        attributes:
          $ref: '#/components/schemas/ResourceLevelBillingDetailsVolumeAttributes'
        metrics:
          $ref: '#/components/schemas/ResourceLevelBillingDetailsVolumeMetrics'
      type: object
    ResourceLevelBucketBillingDetailsResponseModel:
      example:
        billing_history_bucket_details:
          attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            usage_time_HIBERNATED: 9.301444243932576
            incurred_bill: 6.027456183070403
            price_per_hour: 5.637376656633329
            usage_time: 2.3021358869347655
            usage_time_SHUTOFF: 3.616076749251911
            usage_time_ACTIVE: 7.061401241503109
            non_discounted_bill: 1.4658129805029452
            non_discounted_price_per_hour: 5.962133916683182
        message: message
        status: true
      properties:
        billing_history_bucket_details:
          $ref: '#/components/schemas/ResourceLevelBillingBucketDetailsResources'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelBucketBillingHistoryResponseModel:
      example:
        billing_history_bucket:
          billing_history:
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          pagination:
            per_page: 3
            pages: 9
            page: 7
          org_id: 2
          total_count: 2
        message: message
        status: true
      properties:
        billing_history_bucket:
          $ref: '#/components/schemas/ResourceLevelBillingHistory'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelClusterBillingDetailsResponseModel:
      example:
        billing_history_cluster_details:
          nodes:
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          attributes:
            contract_id: 0
            id: id
            infrahub_id: 6
            resource_name: resource_name
            status: status
          metrics:
            incurred_bill: 1.4658129805029452
            price_per_hour: 5.962133916683182
            usage_time: 5.637376656633329
        message: message
        status: true
      properties:
        billing_history_cluster_details:
          $ref: '#/components/schemas/ResourceLevelBillingHistoryResourcesCluster'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelClusterBillingHistoryResponseModel:
      example:
        message: message
        billing_history_cluster:
          billing_history:
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          pagination:
            per_page: 3
            pages: 9
            page: 7
          org_id: 2
          total_count: 2
        status: true
      properties:
        billing_history_cluster:
          $ref: '#/components/schemas/ResourceLevelBillingHistory'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelClusterGraphBillingDetailsResponseModel:
      example:
        billing_history_cluster_details:
          billing_history:
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              incurred_bill: 6.027456183070403
              incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              incurred_bill: 6.027456183070403
              incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
          granularity: 5
          org_id: 5
          total_count: 2
        message: message
        status: true
      properties:
        billing_history_cluster_details:
          $ref: '#/components/schemas/ResourceLevelGraphBillingDetailVolume'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelGraphBillingDetailVolume:
      example:
        billing_history:
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            incurred_bill: 6.027456183070403
            incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            incurred_bill: 6.027456183070403
            incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
        granularity: 5
        org_id: 5
        total_count: 2
      properties:
        billing_history:
          items:
            $ref: '#/components/schemas/ResourceLevelGraphBillingVolumeDetailsResources'
          type: array
        granularity:
          type: integer
        org_id:
          type: integer
        total_count:
          type: integer
      type: object
    ResourceLevelGraphBillingDetailsAttributes:
      example:
        id: id
        infrahub_id: 0
        resource_name: resource_name
      properties:
        id:
          type: string
        infrahub_id:
          type: integer
        resource_name:
          type: string
      type: object
    ResourceLevelGraphBillingDetailsBucket:
      example:
        billing_history:
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            usage_time_HIBERNATED: 9.301444243932576
            incurred_bill: 6.027456183070403
            price_per_hour: 5.637376656633329
            usage_time: 2.3021358869347655
            usage_time_SHUTOFF: 3.616076749251911
            usage_time_ACTIVE: 7.061401241503109
            non_discounted_bill: 1.4658129805029452
            non_discounted_price_per_hour: 5.962133916683182
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            usage_time_HIBERNATED: 9.301444243932576
            incurred_bill: 6.027456183070403
            price_per_hour: 5.637376656633329
            usage_time: 2.3021358869347655
            usage_time_SHUTOFF: 3.616076749251911
            usage_time_ACTIVE: 7.061401241503109
            non_discounted_bill: 1.4658129805029452
            non_discounted_price_per_hour: 5.962133916683182
        granularity: 0
        org_id: 6
        total_count: 1
      properties:
        billing_history:
          items:
            $ref: '#/components/schemas/ResourceLevelBillingBucketDetailsResources'
          type: array
        granularity:
          type: integer
        org_id:
          type: integer
        total_count:
          type: integer
      type: object
    ResourceLevelGraphBillingDetailsMetrics:
      example:
        incurred_bill: 6.027456183070403
        incurred_bill_graph:
        - datetime: datetime
          value: 1.4658129805029452
        - datetime: datetime
          value: 1.4658129805029452
      properties:
        incurred_bill:
          type: number
        incurred_bill_graph:
          items:
            $ref: '#/components/schemas/GraphDatetimeValueModel'
          type: array
      type: object
    ResourceLevelGraphBillingDetailsVM:
      example:
        billing_history:
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            incurred_bill: 6.027456183070403
            incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            incurred_bill: 6.027456183070403
            incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
        granularity: 0
        org_id: 6
        total_count: 1
      properties:
        billing_history:
          items:
            $ref: '#/components/schemas/ResourceLevelGraphBillingVMDetailsResources'
          type: array
        granularity:
          type: integer
        org_id:
          type: integer
        total_count:
          type: integer
      type: object
    ResourceLevelGraphBillingVMDetailsResources:
      example:
        attributes:
          id: id
          infrahub_id: 0
          resource_name: resource_name
        metrics:
          incurred_bill: 6.027456183070403
          incurred_bill_graph:
          - datetime: datetime
            value: 1.4658129805029452
          - datetime: datetime
            value: 1.4658129805029452
      properties:
        attributes:
          $ref: '#/components/schemas/ResourceLevelGraphBillingDetailsAttributes'
        metrics:
          $ref: '#/components/schemas/ResourceLevelGraphBillingDetailsMetrics'
      type: object
    ResourceLevelGraphBillingVolumeDetailsResources:
      example:
        attributes:
          id: id
          infrahub_id: 0
          resource_name: resource_name
        metrics:
          incurred_bill: 6.027456183070403
          incurred_bill_graph:
          - datetime: datetime
            value: 1.4658129805029452
          - datetime: datetime
            value: 1.4658129805029452
      properties:
        attributes:
          $ref: '#/components/schemas/ResourceLevelGraphBillingDetailsAttributes'
        metrics:
          $ref: '#/components/schemas/ResourceLevelGraphBillingDetailsMetrics'
      type: object
    ResourceLevelVMBillingDetailsResponseModel:
      example:
        billing_history_vm_details:
          billing_history:
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              usage_time_HIBERNATED: 9.301444243932576
              incurred_bill: 6.027456183070403
              price_per_hour: 5.637376656633329
              usage_time: 2.3021358869347655
              usage_time_SHUTOFF: 3.616076749251911
              usage_time_ACTIVE: 7.061401241503109
              non_discounted_bill: 1.4658129805029452
              non_discounted_price_per_hour: 5.962133916683182
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              usage_time_HIBERNATED: 9.301444243932576
              incurred_bill: 6.027456183070403
              price_per_hour: 5.637376656633329
              usage_time: 2.3021358869347655
              usage_time_SHUTOFF: 3.616076749251911
              usage_time_ACTIVE: 7.061401241503109
              non_discounted_bill: 1.4658129805029452
              non_discounted_price_per_hour: 5.962133916683182
          org_id: 0
          total_count: 6
        message: message
        status: true
      properties:
        billing_history_vm_details:
          $ref: '#/components/schemas/ResourceLevelBillingDetailsVM'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelVmBillingHistoryResponseModel:
      example:
        billing_history_vm:
          billing_history:
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          pagination:
            per_page: 3
            pages: 9
            page: 7
          org_id: 2
          total_count: 2
        message: message
        status: true
      properties:
        billing_history_vm:
          $ref: '#/components/schemas/ResourceLevelBillingHistory'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelVmGraphBillingDetailsResponseModel:
      example:
        billing_history_vm_details:
          billing_history:
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              incurred_bill: 6.027456183070403
              incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              incurred_bill: 6.027456183070403
              incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
          granularity: 0
          org_id: 6
          total_count: 1
        message: message
        status: true
      properties:
        billing_history_vm_details:
          $ref: '#/components/schemas/ResourceLevelGraphBillingDetailsVM'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelVolumeBillingDetailsResponseModel:
      example:
        billing_history_volume_details:
          billing_history:
          - attributes:
              subresource_type: subresource_type
              subresource_amount: 6
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 2.3021358869347655
              usage_time: 7.061401241503109
              non_discounted_bill: 5.962133916683182
              non_discounted_price_per_hour: 5.637376656633329
          - attributes:
              subresource_type: subresource_type
              subresource_amount: 6
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 2.3021358869347655
              usage_time: 7.061401241503109
              non_discounted_bill: 5.962133916683182
              non_discounted_price_per_hour: 5.637376656633329
          org_id: 9
          total_count: 3
        message: message
        status: true
      properties:
        billing_history_volume_details:
          $ref: '#/components/schemas/ResourceLevelBillingDetailsVolume'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelVolumeBillingHistoryResponseModel:
      example:
        message: message
        billing_history_volume:
          billing_history:
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          - attributes:
              contract_id: 0
              id: id
              infrahub_id: 6
              resource_name: resource_name
              status: status
            metrics:
              incurred_bill: 1.4658129805029452
              price_per_hour: 5.962133916683182
              usage_time: 5.637376656633329
          pagination:
            per_page: 3
            pages: 9
            page: 7
          org_id: 2
          total_count: 2
        status: true
      properties:
        billing_history_volume:
          $ref: '#/components/schemas/ResourceLevelBillingHistory'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceLevelVolumeGraphBillingDetailsResponseModel:
      example:
        billing_history_snapshot_details:
          billing_history:
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              incurred_bill: 6.027456183070403
              incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              incurred_bill: 6.027456183070403
              incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
          granularity: 5
          org_id: 5
          total_count: 2
        message: message
        status: true
      properties:
        billing_history_snapshot_details:
          $ref: '#/components/schemas/ResourceLevelGraphBillingDetailVolume'
        message:
          type: string
        status:
          type: boolean
      type: object
    ResourceObjectResponseForCustomer:
      example:
        resource:
          actual_price: 6.027456183070403
          price: 5.962133916683182
          host: host
          name: name
          resources:
          - amount: 2
            actual_price: 5.637376656633329
            rate: 3.616076749251911
            price: 9.301444243932576
            name: name
            type: type
            discounted_rate: 7.061401241503109
          - amount: 2
            actual_price: 5.637376656633329
            rate: 3.616076749251911
            price: 9.301444243932576
            name: name
            type: type
            discounted_rate: 7.061401241503109
          infrahub_id: 1
          type: type
          status: status
        org_id: 0
      properties:
        org_id:
          type: integer
        resource:
          $ref: '#/components/schemas/InfrahubResourceObjectResponseForCustomer'
      type: object
    ResponseModel:
      example:
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
      type: object
    RolePermissionFields:
      example:
        resource: resource
        permission: permission
        id: 6
      properties:
        id:
          type: integer
        permission:
          type: string
        resource:
          type: string
      type: object
    RolePolicyFields:
      example:
        name: name
        description: description
        id: 1
      properties:
        description:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    SecondaryColor:
      example:
        light: light
        dark: dark
      properties:
        dark:
          type: string
        light:
          type: string
      type: object
    SecurityGroupRuleFields:
      example:
        protocol: protocol
        ethertype: ethertype
        created_at: 2000-01-23T04:56:07.000+00:00
        port_range_max: 7
        remote_ip_prefix: remote_ip_prefix
        id: 2
        direction: direction
        port_range_min: 9
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        direction:
          type: string
        ethertype:
          type: string
        id:
          type: integer
        port_range_max:
          type: integer
        port_range_min:
          type: integer
        protocol:
          type: string
        remote_ip_prefix:
          type: string
        status:
          type: string
      type: object
    Security_Group_Rule:
      example:
        message: message
        security_rule:
          protocol: protocol
          ethertype: ethertype
          created_at: 2000-01-23T04:56:07.000+00:00
          port_range_max: 6
          remote_ip_prefix: remote_ip_prefix
          id: 0
          direction: direction
          port_range_min: 1
          status: status
        status: true
      properties:
        message:
          type: string
        security_rule:
          $ref: '#/components/schemas/Security_Group_Rule_Fields'
        status:
          type: boolean
      type: object
    Security_Group_Rule_Fields:
      example:
        protocol: protocol
        ethertype: ethertype
        created_at: 2000-01-23T04:56:07.000+00:00
        port_range_max: 6
        remote_ip_prefix: remote_ip_prefix
        id: 0
        direction: direction
        port_range_min: 1
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        direction:
          type: string
        ethertype:
          type: string
        id:
          type: integer
        port_range_max:
          type: integer
        port_range_min:
          type: integer
        protocol:
          type: string
        remote_ip_prefix:
          type: string
        status:
          type: string
      type: object
    Security_Rules_Fields_for_Instance:
      example:
        protocol: protocol
        ethertype: ethertype
        created_at: 2000-01-23T04:56:07.000+00:00
        port_range_max: 1
        remote_ip_prefix: remote_ip_prefix
        id: 7
        direction: direction
        port_range_min: 1
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        direction:
          type: string
        ethertype:
          type: string
        id:
          type: integer
        port_range_max:
          type: integer
        port_range_min:
          type: integer
        protocol:
          type: string
        remote_ip_prefix:
          type: string
        status:
          type: string
      type: object
    Security_Rules_Protocol_Fields:
      example:
        message: message
        protocols:
        - protocols
        - protocols
        status: true
      properties:
        message:
          type: string
        protocols:
          items:
            type: string
          type: array
        status:
          type: boolean
      type: object
    ServerlessInferencedBillingHistoryDetailsResponseSchema:
      example:
        billing_history_serverless_inference_details:
          billing_history:
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          pagination:
            per_page: 5
            pages: 5
            page: 1
          org_id: 0
          total_count: 6
        message: message
        status: true
      properties:
        billing_history_serverless_inference_details:
          $ref: '#/components/schemas/billing_history_serverless_inference_details'
        message:
          description: ""
          type: string
        status:
          description: ""
          type: boolean
      type: object
    SnapshotFields:
      example:
        has_floating_ip: true
        vm_id: 7
        size: 2
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        region_id: 5
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        is_image: true
        id: 5
        labels:
        - labels
        - labels
        status: status
      properties:
        created_at:
          description: Creation timestamp
          format: date-time
          type: string
        description:
          description: Description of the snapshot
          type: string
        has_floating_ip:
          description: Indicates if the VM had a floating IP assigned
          type: boolean
        id:
          description: Snapshot ID
          type: integer
        is_image:
          description: Indicates if the snapshot is an image
          type: boolean
        labels:
          description: Labels associated with snapshot
          items:
            description: ""
            type: string
          type: array
        name:
          description: Snapshot name
          type: string
        region_id:
          description: Region where the snapshot will be available
          type: integer
        size:
          description: Size in GB of the snapshot
          type: integer
        status:
          description: Status of the snapshot
          type: string
        updated_at:
          description: Last update timestamp
          format: date-time
          type: string
        vm_id:
          description: ID of the VM from which the snapshot is created
          type: integer
      required:
      - created_at
      - description
      - id
      - is_image
      - name
      - region_id
      - size
      - status
      - updated_at
      - vm_id
      type: object
    SnapshotRestoreRequest:
      example:
        contract_id: 0
        new_vm_name: new_vm_name
      properties:
        contract_id:
          description: Contract ID to assign to the newly restored VM
          type: integer
        new_vm_name:
          description: The name of the newly restored VM
          type: string
      required:
      - new_vm_name
      type: object
    SnapshotRetrieve:
      example:
        message: message
        snapshot:
          volume_id: volume_id
          region_id: 6
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          volume_name: volume_name
          labels: labels
          vm_flavor: vm_flavor
          vm_keypair: vm_keypair
          has_floating_ip: true
          vm_id: 5
          vm_status: vm_status
          custom_image: custom_image
          size: 1
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_image: true
          vm_environment: vm_environment
          id: 0
          vm_image: vm_image
          region: region
          vm_name: vm_name
          status: status
        status: true
      properties:
        message:
          type: string
        snapshot:
          $ref: '#/components/schemas/SnapshotRetrieveFields'
        status:
          type: boolean
      type: object
    SnapshotRetrieveFields:
      example:
        volume_id: volume_id
        region_id: 6
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        volume_name: volume_name
        labels: labels
        vm_flavor: vm_flavor
        vm_keypair: vm_keypair
        has_floating_ip: true
        vm_id: 5
        vm_status: vm_status
        custom_image: custom_image
        size: 1
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        is_image: true
        vm_environment: vm_environment
        id: 0
        vm_image: vm_image
        region: region
        vm_name: vm_name
        status: status
      properties:
        created_at:
          description: Creation timestamp
          format: date-time
          type: string
        custom_image:
          description: ""
          type: string
        description:
          description: Description of the snapshot
          type: string
        has_floating_ip:
          description: Indicates if the VM had a floating IP assigned
          type: boolean
        id:
          description: Snapshot ID
          type: integer
        is_image:
          description: Indicates if the snapshot is an image
          type: boolean
        labels:
          description: ""
          type: string
        name:
          description: Snapshot name
          type: string
        region:
          description: ""
          type: string
        region_id:
          description: Region where the snapshot will be available
          type: integer
        size:
          description: Size in GB of the snapshot
          type: integer
        status:
          description: Status of the snapshot
          type: string
        updated_at:
          description: Last update timestamp
          format: date-time
          type: string
        vm_environment:
          description: ""
          type: string
        vm_flavor:
          description: ""
          type: string
        vm_id:
          description: ID of the VM from which the snapshot is created
          type: integer
        vm_image:
          description: ""
          type: string
        vm_keypair:
          description: ""
          type: string
        vm_name:
          description: ""
          type: string
        vm_status:
          description: ""
          type: string
        volume_id:
          description: ""
          type: string
        volume_name:
          description: ""
          type: string
      required:
      - created_at
      - description
      - id
      - is_image
      - name
      - region_id
      - size
      - status
      - updated_at
      - vm_id
      type: object
    Snapshots:
      example:
        snapshots:
        - has_floating_ip: true
          vm_id: 7
          size: 2
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          region_id: 5
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          is_image: true
          id: 5
          labels:
          - labels
          - labels
          status: status
        - has_floating_ip: true
          vm_id: 7
          size: 2
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          region_id: 5
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          is_image: true
          id: 5
          labels:
          - labels
          - labels
          status: status
        count: 0
        page: 6
        message: message
        page_size: 1
        status: true
      properties:
        count:
          type: integer
        message:
          type: string
        page:
          type: integer
        page_size:
          type: integer
        snapshots:
          items:
            $ref: '#/components/schemas/SnapshotFields'
          type: array
        status:
          type: boolean
      type: object
    Start_Deployment:
      example:
        message: message
        deployment:
          template: template
          variables: variables
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          status: status
        status: true
      properties:
        deployment:
          $ref: '#/components/schemas/Deployment_Fields_for_start_deployments'
        message:
          type: string
        status:
          type: boolean
      type: object
    Start_Deployment_Payload:
      properties:
        description:
          type: string
        name:
          type: string
        template_id:
          type: integer
        variables:
          additionalProperties:
            type: string
          type: object
      required:
      - description
      - name
      - template_id
      type: object
    SubResourceGraphBillingDetailsMetrics:
      example:
        cpu_incurred_bill_graph:
        - datetime: datetime
          value: 1.4658129805029452
        - datetime: datetime
          value: 1.4658129805029452
        disk_incurred_bill_graph:
        - datetime: datetime
          value: 1.4658129805029452
        - datetime: datetime
          value: 1.4658129805029452
        ram_incurred_bill: 2.3021358869347655
        cpu_incurred_bill: 0.8008281904610115
        disk_incurred_bill: 6.027456183070403
        ephemeral_incurred_bill: 1.4658129805029452
        gpu_incurred_bill: 5.962133916683182
        ram_incurred_bill_graph:
        - datetime: datetime
          value: 1.4658129805029452
        - datetime: datetime
          value: 1.4658129805029452
        ephemeral_incurred_bill_graph:
        - datetime: datetime
          value: 1.4658129805029452
        - datetime: datetime
          value: 1.4658129805029452
        publicip_incurred_bill: 5.637376656633329
        publicip_incurred_bill_graph:
        - datetime: datetime
          value: 1.4658129805029452
        - datetime: datetime
          value: 1.4658129805029452
        gpu_incurred_bill_graph:
        - datetime: datetime
          value: 1.4658129805029452
        - datetime: datetime
          value: 1.4658129805029452
      properties:
        cpu_incurred_bill:
          type: number
        cpu_incurred_bill_graph:
          items:
            $ref: '#/components/schemas/GraphDatetimeValueModel'
          type: array
        disk_incurred_bill:
          type: number
        disk_incurred_bill_graph:
          items:
            $ref: '#/components/schemas/GraphDatetimeValueModel'
          type: array
        ephemeral_incurred_bill:
          type: number
        ephemeral_incurred_bill_graph:
          items:
            $ref: '#/components/schemas/GraphDatetimeValueModel'
          type: array
        gpu_incurred_bill:
          type: number
        gpu_incurred_bill_graph:
          items:
            $ref: '#/components/schemas/GraphDatetimeValueModel'
          type: array
        publicip_incurred_bill:
          type: number
        publicip_incurred_bill_graph:
          items:
            $ref: '#/components/schemas/GraphDatetimeValueModel'
          type: array
        ram_incurred_bill:
          type: number
        ram_incurred_bill_graph:
          items:
            $ref: '#/components/schemas/GraphDatetimeValueModel'
          type: array
      type: object
    SubResourcesCostsResponseModel:
      example:
        billing_history:
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            cpu_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            disk_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            ram_incurred_bill: 2.3021358869347655
            cpu_incurred_bill: 0.8008281904610115
            disk_incurred_bill: 6.027456183070403
            ephemeral_incurred_bill: 1.4658129805029452
            gpu_incurred_bill: 5.962133916683182
            ram_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            ephemeral_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            publicip_incurred_bill: 5.637376656633329
            publicip_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            gpu_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
        - attributes:
            id: id
            infrahub_id: 0
            resource_name: resource_name
          metrics:
            cpu_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            disk_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            ram_incurred_bill: 2.3021358869347655
            cpu_incurred_bill: 0.8008281904610115
            disk_incurred_bill: 6.027456183070403
            ephemeral_incurred_bill: 1.4658129805029452
            gpu_incurred_bill: 5.962133916683182
            ram_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            ephemeral_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            publicip_incurred_bill: 5.637376656633329
            publicip_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
            gpu_incurred_bill_graph:
            - datetime: datetime
              value: 1.4658129805029452
            - datetime: datetime
              value: 1.4658129805029452
        granularity: 7
        org_id: 9
        total_count: 3
      properties:
        billing_history:
          items:
            $ref: '#/components/schemas/SubResourcesGraphBillingHistoryFields'
          type: array
        granularity:
          type: integer
        org_id:
          type: integer
        total_count:
          type: integer
      type: object
    SubResourcesGraphBillingHistoryFields:
      example:
        attributes:
          id: id
          infrahub_id: 0
          resource_name: resource_name
        metrics:
          cpu_incurred_bill_graph:
          - datetime: datetime
            value: 1.4658129805029452
          - datetime: datetime
            value: 1.4658129805029452
          disk_incurred_bill_graph:
          - datetime: datetime
            value: 1.4658129805029452
          - datetime: datetime
            value: 1.4658129805029452
          ram_incurred_bill: 2.3021358869347655
          cpu_incurred_bill: 0.8008281904610115
          disk_incurred_bill: 6.027456183070403
          ephemeral_incurred_bill: 1.4658129805029452
          gpu_incurred_bill: 5.962133916683182
          ram_incurred_bill_graph:
          - datetime: datetime
            value: 1.4658129805029452
          - datetime: datetime
            value: 1.4658129805029452
          ephemeral_incurred_bill_graph:
          - datetime: datetime
            value: 1.4658129805029452
          - datetime: datetime
            value: 1.4658129805029452
          publicip_incurred_bill: 5.637376656633329
          publicip_incurred_bill_graph:
          - datetime: datetime
            value: 1.4658129805029452
          - datetime: datetime
            value: 1.4658129805029452
          gpu_incurred_bill_graph:
          - datetime: datetime
            value: 1.4658129805029452
          - datetime: datetime
            value: 1.4658129805029452
      properties:
        attributes:
          $ref: '#/components/schemas/ResourceLevelBillingDetailsAttributes'
        metrics:
          $ref: '#/components/schemas/SubResourceGraphBillingDetailsMetrics'
      type: object
    SubResourcesGraphResponseModel:
      example:
        sub_resources_costs:
          billing_history:
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              cpu_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              disk_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              ram_incurred_bill: 2.3021358869347655
              cpu_incurred_bill: 0.8008281904610115
              disk_incurred_bill: 6.027456183070403
              ephemeral_incurred_bill: 1.4658129805029452
              gpu_incurred_bill: 5.962133916683182
              ram_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              ephemeral_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              publicip_incurred_bill: 5.637376656633329
              publicip_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              gpu_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
          - attributes:
              id: id
              infrahub_id: 0
              resource_name: resource_name
            metrics:
              cpu_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              disk_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              ram_incurred_bill: 2.3021358869347655
              cpu_incurred_bill: 0.8008281904610115
              disk_incurred_bill: 6.027456183070403
              ephemeral_incurred_bill: 1.4658129805029452
              gpu_incurred_bill: 5.962133916683182
              ram_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              ephemeral_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              publicip_incurred_bill: 5.637376656633329
              publicip_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
              gpu_incurred_bill_graph:
              - datetime: datetime
                value: 1.4658129805029452
              - datetime: datetime
                value: 1.4658129805029452
          granularity: 7
          org_id: 9
          total_count: 3
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        sub_resources_costs:
          $ref: '#/components/schemas/SubResourcesCostsResponseModel'
      type: object
    Subscribe_or_unsubscribe_update_payload:
      properties:
        subscribe:
          description: "`false` indicates that the user will no longer receive notifications\
            \ for this specific threshold, whereas `true` signifies that the user\
            \ will receive notification emails."
          type: boolean
      required:
      - subscribe
      type: object
    Template:
      example:
        template:
          is_public: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          content: content
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        template:
          $ref: '#/components/schemas/Template_Fields'
      type: object
    Template_Fields:
      example:
        is_public: true
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
        content: content
      properties:
        content:
          type: string
        created_at:
          format: date-time
          type: string
        description:
          type: string
        id:
          type: integer
        is_public:
          type: boolean
        name:
          type: string
      type: object
    Templates:
      example:
        templates:
        - is_public: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          content: content
        - is_public: true
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          content: content
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        templates:
          items:
            $ref: '#/components/schemas/Template_Fields'
          type: array
      type: object
    TokenBasedBillingHistoryResponse:
      example:
        success: true
        message: message
        billing_history_serverless_inference:
          billing_history:
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          pagination:
            per_page: 5
            pages: 5
            page: 1
          org_id: 6
          total_count: 2
      properties:
        billing_history_serverless_inference:
          $ref: '#/components/schemas/billing_history_serverless_inference'
        message:
          description: ""
          type: string
        success:
          description: ""
          type: boolean
      type: object
    URIs:
      example:
        console: console
        auth: auth
        api_uri: api_uri
        doc: doc
        landing_page: landing_page
        contact_us: contact_us
        api_doc: api_doc
      properties:
        api_doc:
          type: string
        api_uri:
          type: string
        auth:
          type: string
        console:
          type: string
        contact_us:
          type: string
        doc:
          type: string
        landing_page:
          type: string
      type: object
    UpdateOrganizationPayload:
      example:
        name: name
      properties:
        name:
          description: The new name for the organition
          maxLength: 50
          minLength: 3
          type: string
      required:
      - name
      type: object
    UpdateOrganizationResponseModel:
      example:
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
      type: object
    Update_Environment:
      properties:
        name:
          description: The new name of the environment.
          maxLength: 50
          type: string
      required:
      - name
      type: object
    Update_Keypair_Name:
      properties:
        name:
          description: The new key pair name.
          maxLength: 50
          type: string
      required:
      - name
      type: object
    Update_Keypair_name_response:
      example:
        keypair:
          public_key: public_key
          environment:
            features:
              green_status: GREEN
              network_optimised: true
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 0
            region: region
          fingerprint: fingerprint
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 6
        message: message
        status: true
      properties:
        keypair:
          $ref: '#/components/schemas/Keypair_Fields'
        message:
          type: string
        status:
          type: boolean
      type: object
    Update_Template:
      properties:
        description:
          type: string
        is_public:
          type: boolean
        name:
          type: string
      type: object
    Update_Volume_Attachment_Payload:
      properties:
        protected:
          type: boolean
      type: object
    Update_Volume_Payload:
      properties:
        environment_name:
          description: The name of the target environment to move the volume to. The
            target environment must be in the same region as the current environment.
          type: string
      required:
      - environment_name
      type: object
    Update_Volume_Response:
      example:
        volume:
          attachments:
          - instance_id: 5
            protected: true
            id: 5
            device: device
            status: status
          - instance_id: 5
            protected: true
            id: 5
            device: device
            status: status
          volume_type: volume_type
          os_image: os_image
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          bootable: true
          callback_url: callback_url
          environment:
            features: "{}"
            name: name
            region: region
          size: 1
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          image_id: 6
          status: status
        message: message
        updates: "{}"
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        updates:
          description: Summary of fields that were updated
          properties: {}
          type: object
        volume:
          $ref: '#/components/schemas/Volume_Fields'
      type: object
    UserDefaultChoiceForUserFields:
      example:
        flavor_id: 0
        image_id: 6
        keypair_id: 1
      properties:
        flavor_id:
          type: integer
        image_id:
          type: integer
        keypair_id:
          type: integer
      type: object
    UserDefaultChoicesForUserResponse:
      example:
        user_default_choices:
        - flavor_id: 0
          image_id: 6
          keypair_id: 1
        - flavor_id: 0
          image_id: 6
          keypair_id: 1
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        user_default_choices:
          items:
            $ref: '#/components/schemas/UserDefaultChoiceForUserFields'
          type: array
      type: object
    UserOrganizationsResponse:
      example:
        organizations:
        - total_volumes: 7
          total_containers: 5
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          total_clusters: 5
          threshold: 1
          id: 6
          credit: 0
          total_instances: 2
          users:
          - joined_at: 2000-01-23T04:56:07.000+00:00
            sub: sub
            role: role
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            rbac_roles:
            - name: name
            - name: name
            id: 9
            email: email
            username: username
          - joined_at: 2000-01-23T04:56:07.000+00:00
            sub: sub
            role: role
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            rbac_roles:
            - name: name
            - name: name
            id: 9
            email: email
            username: username
        - total_volumes: 7
          total_containers: 5
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          total_clusters: 5
          threshold: 1
          id: 6
          credit: 0
          total_instances: 2
          users:
          - joined_at: 2000-01-23T04:56:07.000+00:00
            sub: sub
            role: role
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            rbac_roles:
            - name: name
            - name: name
            id: 9
            email: email
            username: username
          - joined_at: 2000-01-23T04:56:07.000+00:00
            sub: sub
            role: role
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            rbac_roles:
            - name: name
            - name: name
            id: 9
            email: email
            username: username
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/OrganizationFields'
          type: array
      type: object
    UserPermissionFields:
      example:
        resource: resource
        permission: permission
        id: 0
      properties:
        id:
          type: integer
        permission:
          type: string
        resource:
          type: string
      type: object
    User_info_post_payload:
      properties:
        billing_address1:
          type: string
        billing_address2:
          type: string
        business:
          type: boolean
        company_name:
          type: string
        country:
          type: string
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        state:
          type: string
        vat_number:
          type: string
        zip_code:
          type: string
      required:
      - business
      - country
      - zip_code
      type: object
    UsersInfoFields:
      example:
        country: country
        business: true
        vat_number: vat_number
        stripe_user_id: stripe_user_id
        created_at: 2000-01-23T04:56:07.000+00:00
        zip_code: zip_code
        phone: phone
        company_name: company_name
        organization_id: 6
        name: name
        id: 0
        state: state
        billing_address1: billing_address1
        billing_address2: billing_address2
        email: email
      properties:
        billing_address1:
          type: string
        billing_address2:
          type: string
        business:
          type: boolean
        company_name:
          type: string
        country:
          type: string
        created_at:
          format: date-time
          type: string
        email:
          type: string
        id:
          type: integer
        name:
          type: string
        organization_id:
          type: integer
        phone:
          type: string
        state:
          type: string
        stripe_user_id:
          type: string
        vat_number:
          type: string
        zip_code:
          type: string
      type: object
    UsersInfoListResponse:
      example:
        users_info:
          country: country
          business: true
          vat_number: vat_number
          stripe_user_id: stripe_user_id
          created_at: 2000-01-23T04:56:07.000+00:00
          zip_code: zip_code
          phone: phone
          company_name: company_name
          organization_id: 6
          name: name
          id: 0
          state: state
          billing_address1: billing_address1
          billing_address2: billing_address2
          email: email
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        users_info:
          $ref: '#/components/schemas/UsersInfoFields'
      type: object
    VNC_URL:
      example:
        message: message
        status: true
        vnc_url:
          id: 0
          vnc_url: vnc_url
      properties:
        message:
          type: string
        status:
          type: boolean
        vnc_url:
          $ref: '#/components/schemas/VNC_URL_Fields'
      type: object
    VNC_URL_Fields:
      example:
        id: 0
        vnc_url: vnc_url
      properties:
        id:
          type: integer
        vnc_url:
          type: string
      type: object
    Volume:
      example:
        volume:
          attachments:
          - instance_id: 5
            protected: true
            id: 5
            device: device
            status: status
          - instance_id: 5
            protected: true
            id: 5
            device: device
            status: status
          volume_type: volume_type
          os_image: os_image
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          bootable: true
          callback_url: callback_url
          environment:
            features: "{}"
            name: name
            region: region
          size: 1
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          image_id: 6
          status: status
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        volume:
          $ref: '#/components/schemas/Volume_Fields'
      type: object
    Volume_Attachment_Fields:
      example:
        volume:
          volume_type: volume_type
          size: 7
          name: name
          description: description
          id: 6
          bootable: true
        protected: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 1
        device: device
        status: status
      properties:
        created_at:
          format: date-time
          type: string
        device:
          type: string
        id:
          type: integer
        protected:
          type: boolean
        status:
          type: string
        volume:
          $ref: '#/components/schemas/Volume_Fields_for_Instance'
      type: object
    Volume_Fields:
      example:
        attachments:
        - instance_id: 5
          protected: true
          id: 5
          device: device
          status: status
        - instance_id: 5
          protected: true
          id: 5
          device: device
          status: status
        volume_type: volume_type
        os_image: os_image
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        bootable: true
        callback_url: callback_url
        environment:
          features: "{}"
          name: name
          region: region
        size: 1
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 0
        image_id: 6
        status: status
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachments_Fields_for_Volume'
          type: array
        bootable:
          type: boolean
        callback_url:
          type: string
        created_at:
          format: date-time
          type: string
        description:
          type: string
        environment:
          $ref: '#/components/schemas/Environment_Fields_for_Volume'
        id:
          type: integer
        image_id:
          type: integer
        name:
          type: string
        os_image:
          type: string
        size:
          type: integer
        status:
          type: string
        updated_at:
          format: date-time
          type: string
        volume_type:
          type: string
      type: object
    Volume_Fields_for_Instance:
      example:
        volume_type: volume_type
        size: 7
        name: name
        description: description
        id: 6
        bootable: true
      properties:
        bootable:
          type: boolean
        description:
          type: string
        id:
          type: integer
        name:
          type: string
        size:
          type: integer
        volume_type:
          type: string
      type: object
    Volume_Overview_Fields:
      example:
        cost_per_hour: 4.145608029883936
        using: 1
        count: 7
      properties:
        cost_per_hour:
          type: number
        count:
          type: integer
        using:
          type: integer
      type: object
    Volume_Types:
      example:
        message: message
        status: true
        volume_types:
        - volume_types
        - volume_types
      properties:
        message:
          type: string
        status:
          type: boolean
        volume_types:
          items:
            type: string
          type: array
      type: object
    Volumes:
      example:
        count: 0
        volumes:
        - attachments:
          - instance_id: 5
            protected: true
            id: 5
            device: device
            status: status
          - instance_id: 5
            protected: true
            id: 5
            device: device
            status: status
          volume_type: volume_type
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          bootable: true
          callback_url: callback_url
          environment:
            features: "{}"
            name: name
            region: region
          size: 9
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 2
          image_id: 7
          status: status
        - attachments:
          - instance_id: 5
            protected: true
            id: 5
            device: device
            status: status
          - instance_id: 5
            protected: true
            id: 5
            device: device
            status: status
          volume_type: volume_type
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          bootable: true
          callback_url: callback_url
          environment:
            features: "{}"
            name: name
            region: region
          size: 9
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 2
          image_id: 7
          status: status
        page: 6
        message: message
        page_size: 1
        status: true
      properties:
        count:
          type: integer
        message:
          type: string
        page:
          type: integer
        page_size:
          type: integer
        status:
          type: boolean
        volumes:
          items:
            $ref: '#/components/schemas/Volumes_Fields'
          type: array
      type: object
    Volumes_Fields:
      example:
        attachments:
        - instance_id: 5
          protected: true
          id: 5
          device: device
          status: status
        - instance_id: 5
          protected: true
          id: 5
          device: device
          status: status
        volume_type: volume_type
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        bootable: true
        callback_url: callback_url
        environment:
          features: "{}"
          name: name
          region: region
        size: 9
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 2
        image_id: 7
        status: status
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachments_Fields_for_Volume'
          type: array
        bootable:
          type: boolean
        callback_url:
          type: string
        created_at:
          format: date-time
          type: string
        description:
          type: string
        environment:
          $ref: '#/components/schemas/Environment_Fields_for_Volume'
        id:
          type: integer
        image_id:
          type: integer
        name:
          type: string
        size:
          type: integer
        status:
          type: string
        updated_at:
          format: date-time
          type: string
        volume_type:
          type: string
      type: object
    WorkloadBillingHistoryResponse:
      example:
        success: true
        message: message
        billing_history_fine_tuning:
          billing_history:
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          - attributes:
              base_model: base_model
              base_model_display_name: base_model_display_name
              lora_adapter: lora_adapter
              infrahub_id: 0
              resource_name: resource_name
              status: status
            metrics: "{}"
          pagination:
            per_page: 5
            pages: 5
            page: 1
          org_id: 0
          total_count: 6
      properties:
        billing_history_fine_tuning:
          $ref: '#/components/schemas/billing_history_fine_tuning'
        message:
          description: ""
          type: string
        success:
          description: ""
          type: boolean
      type: object
    attributes:
      example:
        base_model: base_model
        base_model_display_name: base_model_display_name
        lora_adapter: lora_adapter
        infrahub_id: 0
        resource_name: resource_name
        status: status
      properties:
        base_model:
          description: ""
          type: string
        base_model_display_name:
          description: ""
          type: string
        infrahub_id:
          description: ""
          type: integer
        lora_adapter:
          description: ""
          type: string
        resource_name:
          description: ""
          type: string
        status:
          description: ""
          type: string
      type: object
    billing_history:
      example:
        attributes:
          base_model: base_model
          base_model_display_name: base_model_display_name
          lora_adapter: lora_adapter
          infrahub_id: 0
          resource_name: resource_name
          status: status
        metrics: "{}"
      properties:
        attributes:
          $ref: '#/components/schemas/attributes'
        metrics:
          type: object
      type: object
    billing_history_data_synthesis_details:
      example:
        billing_history:
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        pagination:
          per_page: 5
          pages: 5
          page: 1
        org_id: 0
        total_count: 6
      properties:
        billing_history:
          description: ""
          items:
            $ref: '#/components/schemas/billing_history'
          type: array
        org_id:
          description: ""
          type: integer
        pagination:
          $ref: '#/components/schemas/pagination'
        total_count:
          description: ""
          type: integer
      type: object
    billing_history_fine_tuning:
      example:
        billing_history:
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        pagination:
          per_page: 5
          pages: 5
          page: 1
        org_id: 0
        total_count: 6
      properties:
        billing_history:
          description: ""
          items:
            $ref: '#/components/schemas/billing_history'
          type: array
        org_id:
          description: ""
          type: integer
        pagination:
          $ref: '#/components/schemas/pagination'
        total_count:
          description: ""
          type: integer
      type: object
    billing_history_model_evalutation_details:
      example:
        billing_history:
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        pagination:
          per_page: 5
          pages: 5
          page: 1
        org_id: 0
        total_count: 6
      properties:
        billing_history:
          description: ""
          items:
            $ref: '#/components/schemas/billing_history'
          type: array
        org_id:
          description: ""
          type: integer
        pagination:
          $ref: '#/components/schemas/pagination'
        total_count:
          description: ""
          type: integer
      type: object
    billing_history_serverless_inference:
      example:
        billing_history:
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        pagination:
          per_page: 5
          pages: 5
          page: 1
        org_id: 6
        total_count: 2
      properties:
        billing_history:
          description: ""
          items:
            $ref: '#/components/schemas/billing_history'
          type: array
        org_id:
          description: ""
          type: integer
        pagination:
          $ref: '#/components/schemas/pagination'
        total_count:
          description: ""
          type: integer
      type: object
    billing_history_serverless_inference_details:
      example:
        billing_history:
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        - attributes:
            base_model: base_model
            base_model_display_name: base_model_display_name
            lora_adapter: lora_adapter
            infrahub_id: 0
            resource_name: resource_name
            status: status
          metrics: "{}"
        pagination:
          per_page: 5
          pages: 5
          page: 1
        org_id: 0
        total_count: 6
      properties:
        billing_history:
          description: ""
          items:
            $ref: '#/components/schemas/billing_history'
          type: array
        org_id:
          description: ""
          type: integer
        pagination:
          $ref: '#/components/schemas/pagination'
        total_count:
          description: ""
          type: integer
      type: object
    image:
      type: object
    metrics:
      type: object
    pagination:
      example:
        per_page: 5
        pages: 5
        page: 1
      properties:
        page:
          description: ""
          type: integer
        pages:
          description: ""
          type: integer
        per_page:
          description: ""
          type: integer
      type: object
    region:
      type: object
    RbacRoleDetailResponseModelFixed:
      example:
        roles:
          permissions:
          - resource: resource
            permission: permission
            id: 6
          - resource: resource
            permission: permission
            id: 6
          name: name
          policies:
          - name: name
            description: description
            id: 1
          - name: name
            description: description
            id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        roles:
          $ref: '#/components/schemas/RbacRoleFields'
      type: object
    Create_template_request:
      properties:
        content:
          description: YAML file is required
          format: binary
          type: string
        description:
          description: description is required
          type: string
        is_public:
          description: is_public is required
          type: string
        name:
          description: name is required
          type: string
      required:
      - content
      - description
      - is_public
      - name
      type: object
  securitySchemes:
    apiKey:
      description: Send it as api_key in header
      in: header
      name: api_key
      type: apiKey
x-original-swagger-version: "2.0"
