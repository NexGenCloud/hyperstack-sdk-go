/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ResourceBillingEventsHistoryMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceBillingEventsHistoryMetrics{}

// ResourceBillingEventsHistoryMetrics struct for ResourceBillingEventsHistoryMetrics
type ResourceBillingEventsHistoryMetrics struct {
	Event         *string  `json:"event,omitempty"`
	EventDuration *float32 `json:"event_duration,omitempty"`
	PricePerHour  *float32 `json:"price_per_hour,omitempty"`
	Start         *string  `json:"start,omitempty"`
	TotalCost     *float32 `json:"total_cost,omitempty"`
}

// NewResourceBillingEventsHistoryMetrics instantiates a new ResourceBillingEventsHistoryMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceBillingEventsHistoryMetrics() *ResourceBillingEventsHistoryMetrics {
	this := ResourceBillingEventsHistoryMetrics{}
	return &this
}

// NewResourceBillingEventsHistoryMetricsWithDefaults instantiates a new ResourceBillingEventsHistoryMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceBillingEventsHistoryMetricsWithDefaults() *ResourceBillingEventsHistoryMetrics {
	this := ResourceBillingEventsHistoryMetrics{}
	return &this
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *ResourceBillingEventsHistoryMetrics) GetEvent() string {
	if o == nil || IsNil(o.Event) {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceBillingEventsHistoryMetrics) GetEventOk() (*string, bool) {
	if o == nil || IsNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *ResourceBillingEventsHistoryMetrics) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *ResourceBillingEventsHistoryMetrics) SetEvent(v string) {
	o.Event = &v
}

// GetEventDuration returns the EventDuration field value if set, zero value otherwise.
func (o *ResourceBillingEventsHistoryMetrics) GetEventDuration() float32 {
	if o == nil || IsNil(o.EventDuration) {
		var ret float32
		return ret
	}
	return *o.EventDuration
}

// GetEventDurationOk returns a tuple with the EventDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceBillingEventsHistoryMetrics) GetEventDurationOk() (*float32, bool) {
	if o == nil || IsNil(o.EventDuration) {
		return nil, false
	}
	return o.EventDuration, true
}

// HasEventDuration returns a boolean if a field has been set.
func (o *ResourceBillingEventsHistoryMetrics) HasEventDuration() bool {
	if o != nil && !IsNil(o.EventDuration) {
		return true
	}

	return false
}

// SetEventDuration gets a reference to the given float32 and assigns it to the EventDuration field.
func (o *ResourceBillingEventsHistoryMetrics) SetEventDuration(v float32) {
	o.EventDuration = &v
}

// GetPricePerHour returns the PricePerHour field value if set, zero value otherwise.
func (o *ResourceBillingEventsHistoryMetrics) GetPricePerHour() float32 {
	if o == nil || IsNil(o.PricePerHour) {
		var ret float32
		return ret
	}
	return *o.PricePerHour
}

// GetPricePerHourOk returns a tuple with the PricePerHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceBillingEventsHistoryMetrics) GetPricePerHourOk() (*float32, bool) {
	if o == nil || IsNil(o.PricePerHour) {
		return nil, false
	}
	return o.PricePerHour, true
}

// HasPricePerHour returns a boolean if a field has been set.
func (o *ResourceBillingEventsHistoryMetrics) HasPricePerHour() bool {
	if o != nil && !IsNil(o.PricePerHour) {
		return true
	}

	return false
}

// SetPricePerHour gets a reference to the given float32 and assigns it to the PricePerHour field.
func (o *ResourceBillingEventsHistoryMetrics) SetPricePerHour(v float32) {
	o.PricePerHour = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *ResourceBillingEventsHistoryMetrics) GetStart() string {
	if o == nil || IsNil(o.Start) {
		var ret string
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceBillingEventsHistoryMetrics) GetStartOk() (*string, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *ResourceBillingEventsHistoryMetrics) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given string and assigns it to the Start field.
func (o *ResourceBillingEventsHistoryMetrics) SetStart(v string) {
	o.Start = &v
}

// GetTotalCost returns the TotalCost field value if set, zero value otherwise.
func (o *ResourceBillingEventsHistoryMetrics) GetTotalCost() float32 {
	if o == nil || IsNil(o.TotalCost) {
		var ret float32
		return ret
	}
	return *o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceBillingEventsHistoryMetrics) GetTotalCostOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCost) {
		return nil, false
	}
	return o.TotalCost, true
}

// HasTotalCost returns a boolean if a field has been set.
func (o *ResourceBillingEventsHistoryMetrics) HasTotalCost() bool {
	if o != nil && !IsNil(o.TotalCost) {
		return true
	}

	return false
}

// SetTotalCost gets a reference to the given float32 and assigns it to the TotalCost field.
func (o *ResourceBillingEventsHistoryMetrics) SetTotalCost(v float32) {
	o.TotalCost = &v
}

func (o ResourceBillingEventsHistoryMetrics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceBillingEventsHistoryMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	if !IsNil(o.EventDuration) {
		toSerialize["event_duration"] = o.EventDuration
	}
	if !IsNil(o.PricePerHour) {
		toSerialize["price_per_hour"] = o.PricePerHour
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.TotalCost) {
		toSerialize["total_cost"] = o.TotalCost
	}
	return toSerialize, nil
}

type NullableResourceBillingEventsHistoryMetrics struct {
	value *ResourceBillingEventsHistoryMetrics
	isSet bool
}

func (v NullableResourceBillingEventsHistoryMetrics) Get() *ResourceBillingEventsHistoryMetrics {
	return v.value
}

func (v *NullableResourceBillingEventsHistoryMetrics) Set(val *ResourceBillingEventsHistoryMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceBillingEventsHistoryMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceBillingEventsHistoryMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceBillingEventsHistoryMetrics(val *ResourceBillingEventsHistoryMetrics) *NullableResourceBillingEventsHistoryMetrics {
	return &NullableResourceBillingEventsHistoryMetrics{value: val, isSet: true}
}

func (v NullableResourceBillingEventsHistoryMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceBillingEventsHistoryMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
