/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ResourceLevelGraphBillingDetailsVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceLevelGraphBillingDetailsVM{}

// ResourceLevelGraphBillingDetailsVM struct for ResourceLevelGraphBillingDetailsVM
type ResourceLevelGraphBillingDetailsVM struct {
	BillingHistory []ResourceLevelGraphBillingVMDetailsResources `json:"billing_history,omitempty"`
	Granularity    *int32                                        `json:"granularity,omitempty"`
	OrgId          *int32                                        `json:"org_id,omitempty"`
	TotalCount     *int32                                        `json:"total_count,omitempty"`
}

// NewResourceLevelGraphBillingDetailsVM instantiates a new ResourceLevelGraphBillingDetailsVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceLevelGraphBillingDetailsVM() *ResourceLevelGraphBillingDetailsVM {
	this := ResourceLevelGraphBillingDetailsVM{}
	return &this
}

// NewResourceLevelGraphBillingDetailsVMWithDefaults instantiates a new ResourceLevelGraphBillingDetailsVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceLevelGraphBillingDetailsVMWithDefaults() *ResourceLevelGraphBillingDetailsVM {
	this := ResourceLevelGraphBillingDetailsVM{}
	return &this
}

// GetBillingHistory returns the BillingHistory field value if set, zero value otherwise.
func (o *ResourceLevelGraphBillingDetailsVM) GetBillingHistory() []ResourceLevelGraphBillingVMDetailsResources {
	if o == nil || IsNil(o.BillingHistory) {
		var ret []ResourceLevelGraphBillingVMDetailsResources
		return ret
	}
	return o.BillingHistory
}

// GetBillingHistoryOk returns a tuple with the BillingHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelGraphBillingDetailsVM) GetBillingHistoryOk() ([]ResourceLevelGraphBillingVMDetailsResources, bool) {
	if o == nil || IsNil(o.BillingHistory) {
		return nil, false
	}
	return o.BillingHistory, true
}

// HasBillingHistory returns a boolean if a field has been set.
func (o *ResourceLevelGraphBillingDetailsVM) HasBillingHistory() bool {
	if o != nil && !IsNil(o.BillingHistory) {
		return true
	}

	return false
}

// SetBillingHistory gets a reference to the given []ResourceLevelGraphBillingVMDetailsResources and assigns it to the BillingHistory field.
func (o *ResourceLevelGraphBillingDetailsVM) SetBillingHistory(v []ResourceLevelGraphBillingVMDetailsResources) {
	o.BillingHistory = v
}

// GetGranularity returns the Granularity field value if set, zero value otherwise.
func (o *ResourceLevelGraphBillingDetailsVM) GetGranularity() int32 {
	if o == nil || IsNil(o.Granularity) {
		var ret int32
		return ret
	}
	return *o.Granularity
}

// GetGranularityOk returns a tuple with the Granularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelGraphBillingDetailsVM) GetGranularityOk() (*int32, bool) {
	if o == nil || IsNil(o.Granularity) {
		return nil, false
	}
	return o.Granularity, true
}

// HasGranularity returns a boolean if a field has been set.
func (o *ResourceLevelGraphBillingDetailsVM) HasGranularity() bool {
	if o != nil && !IsNil(o.Granularity) {
		return true
	}

	return false
}

// SetGranularity gets a reference to the given int32 and assigns it to the Granularity field.
func (o *ResourceLevelGraphBillingDetailsVM) SetGranularity(v int32) {
	o.Granularity = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ResourceLevelGraphBillingDetailsVM) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelGraphBillingDetailsVM) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ResourceLevelGraphBillingDetailsVM) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *ResourceLevelGraphBillingDetailsVM) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *ResourceLevelGraphBillingDetailsVM) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelGraphBillingDetailsVM) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *ResourceLevelGraphBillingDetailsVM) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *ResourceLevelGraphBillingDetailsVM) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o ResourceLevelGraphBillingDetailsVM) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceLevelGraphBillingDetailsVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingHistory) {
		toSerialize["billing_history"] = o.BillingHistory
	}
	if !IsNil(o.Granularity) {
		toSerialize["granularity"] = o.Granularity
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableResourceLevelGraphBillingDetailsVM struct {
	value *ResourceLevelGraphBillingDetailsVM
	isSet bool
}

func (v NullableResourceLevelGraphBillingDetailsVM) Get() *ResourceLevelGraphBillingDetailsVM {
	return v.value
}

func (v *NullableResourceLevelGraphBillingDetailsVM) Set(val *ResourceLevelGraphBillingDetailsVM) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceLevelGraphBillingDetailsVM) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceLevelGraphBillingDetailsVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceLevelGraphBillingDetailsVM(val *ResourceLevelGraphBillingDetailsVM) *NullableResourceLevelGraphBillingDetailsVM {
	return &NullableResourceLevelGraphBillingDetailsVM{value: val, isSet: true}
}

func (v NullableResourceLevelGraphBillingDetailsVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceLevelGraphBillingDetailsVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
