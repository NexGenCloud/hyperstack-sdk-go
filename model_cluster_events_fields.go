/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ClusterEventsFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterEventsFields{}

// ClusterEventsFields struct for ClusterEventsFields
type ClusterEventsFields struct {
	ClusterId *int32      `json:"cluster_id,omitempty"`
	Id        *int32      `json:"id,omitempty"`
	Message   *string     `json:"message,omitempty"`
	Object    *string     `json:"object,omitempty"`
	OrgId     *int32      `json:"org_id,omitempty"`
	Reason    *string     `json:"reason,omitempty"`
	Time      *CustomTime `json:"time,omitempty"`
	Type      *string     `json:"type,omitempty"`
	UserId    *int32      `json:"user_id,omitempty"`
}

// NewClusterEventsFields instantiates a new ClusterEventsFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterEventsFields() *ClusterEventsFields {
	this := ClusterEventsFields{}
	return &this
}

// NewClusterEventsFieldsWithDefaults instantiates a new ClusterEventsFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterEventsFieldsWithDefaults() *ClusterEventsFields {
	this := ClusterEventsFields{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *ClusterEventsFields) GetClusterId() int32 {
	if o == nil || IsNil(o.ClusterId) {
		var ret int32
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEventsFields) GetClusterIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *ClusterEventsFields) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int32 and assigns it to the ClusterId field.
func (o *ClusterEventsFields) SetClusterId(v int32) {
	o.ClusterId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterEventsFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEventsFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterEventsFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ClusterEventsFields) SetId(v int32) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ClusterEventsFields) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEventsFields) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ClusterEventsFields) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ClusterEventsFields) SetMessage(v string) {
	o.Message = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ClusterEventsFields) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEventsFields) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ClusterEventsFields) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *ClusterEventsFields) SetObject(v string) {
	o.Object = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ClusterEventsFields) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEventsFields) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ClusterEventsFields) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *ClusterEventsFields) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ClusterEventsFields) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEventsFields) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ClusterEventsFields) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ClusterEventsFields) SetReason(v string) {
	o.Reason = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ClusterEventsFields) GetTime() CustomTime {
	if o == nil || IsNil(o.Time) {
		var ret CustomTime
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEventsFields) GetTimeOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ClusterEventsFields) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given CustomTime and assigns it to the Time field.
func (o *ClusterEventsFields) SetTime(v CustomTime) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClusterEventsFields) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEventsFields) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ClusterEventsFields) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ClusterEventsFields) SetType(v string) {
	o.Type = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ClusterEventsFields) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEventsFields) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ClusterEventsFields) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ClusterEventsFields) SetUserId(v int32) {
	o.UserId = &v
}

func (o ClusterEventsFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterEventsFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableClusterEventsFields struct {
	value *ClusterEventsFields
	isSet bool
}

func (v NullableClusterEventsFields) Get() *ClusterEventsFields {
	return v.value
}

func (v *NullableClusterEventsFields) Set(val *ClusterEventsFields) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterEventsFields) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterEventsFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterEventsFields(val *ClusterEventsFields) *NullableClusterEventsFields {
	return &NullableClusterEventsFields{value: val, isSet: true}
}

func (v NullableClusterEventsFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterEventsFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
