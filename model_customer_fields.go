/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the CustomerFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerFields{}

// CustomerFields struct for CustomerFields
type CustomerFields struct {
	Id       *int32  `json:"id,omitempty"`
	PlanType *string `json:"plan_type,omitempty"`
}

// NewCustomerFields instantiates a new CustomerFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerFields() *CustomerFields {
	this := CustomerFields{}
	return &this
}

// NewCustomerFieldsWithDefaults instantiates a new CustomerFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerFieldsWithDefaults() *CustomerFields {
	this := CustomerFields{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomerFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomerFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CustomerFields) SetId(v int32) {
	o.Id = &v
}

// GetPlanType returns the PlanType field value if set, zero value otherwise.
func (o *CustomerFields) GetPlanType() string {
	if o == nil || IsNil(o.PlanType) {
		var ret string
		return ret
	}
	return *o.PlanType
}

// GetPlanTypeOk returns a tuple with the PlanType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerFields) GetPlanTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PlanType) {
		return nil, false
	}
	return o.PlanType, true
}

// HasPlanType returns a boolean if a field has been set.
func (o *CustomerFields) HasPlanType() bool {
	if o != nil && !IsNil(o.PlanType) {
		return true
	}

	return false
}

// SetPlanType gets a reference to the given string and assigns it to the PlanType field.
func (o *CustomerFields) SetPlanType(v string) {
	o.PlanType = &v
}

func (o CustomerFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PlanType) {
		toSerialize["plan_type"] = o.PlanType
	}
	return toSerialize, nil
}

type NullableCustomerFields struct {
	value *CustomerFields
	isSet bool
}

func (v NullableCustomerFields) Get() *CustomerFields {
	return v.value
}

func (v *NullableCustomerFields) Set(val *CustomerFields) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerFields) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerFields(val *CustomerFields) *NullableCustomerFields {
	return &NullableCustomerFields{value: val, isSet: true}
}

func (v NullableCustomerFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
