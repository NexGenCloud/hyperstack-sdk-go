/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateUpdateRbacRolePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUpdateRbacRolePayload{}

// CreateUpdateRbacRolePayload struct for CreateUpdateRbacRolePayload
type CreateUpdateRbacRolePayload struct {
	// Description of the role.
	Description string `json:"description"`
	// Name of the RBAC role.
	Name        string  `json:"name"`
	Permissions []int32 `json:"permissions,omitempty"`
	Policies    []int32 `json:"policies,omitempty"`
}

type _CreateUpdateRbacRolePayload CreateUpdateRbacRolePayload

// NewCreateUpdateRbacRolePayload instantiates a new CreateUpdateRbacRolePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUpdateRbacRolePayload(description string, name string) *CreateUpdateRbacRolePayload {
	this := CreateUpdateRbacRolePayload{}
	this.Description = description
	this.Name = name
	return &this
}

// NewCreateUpdateRbacRolePayloadWithDefaults instantiates a new CreateUpdateRbacRolePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUpdateRbacRolePayloadWithDefaults() *CreateUpdateRbacRolePayload {
	this := CreateUpdateRbacRolePayload{}
	return &this
}

// GetDescription returns the Description field value
func (o *CreateUpdateRbacRolePayload) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateUpdateRbacRolePayload) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateUpdateRbacRolePayload) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *CreateUpdateRbacRolePayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateUpdateRbacRolePayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateUpdateRbacRolePayload) SetName(v string) {
	o.Name = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *CreateUpdateRbacRolePayload) GetPermissions() []int32 {
	if o == nil || IsNil(o.Permissions) {
		var ret []int32
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateRbacRolePayload) GetPermissionsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *CreateUpdateRbacRolePayload) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []int32 and assigns it to the Permissions field.
func (o *CreateUpdateRbacRolePayload) SetPermissions(v []int32) {
	o.Permissions = v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *CreateUpdateRbacRolePayload) GetPolicies() []int32 {
	if o == nil || IsNil(o.Policies) {
		var ret []int32
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateRbacRolePayload) GetPoliciesOk() ([]int32, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *CreateUpdateRbacRolePayload) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []int32 and assigns it to the Policies field.
func (o *CreateUpdateRbacRolePayload) SetPolicies(v []int32) {
	o.Policies = v
}

func (o CreateUpdateRbacRolePayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUpdateRbacRolePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["name"] = o.Name
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

func (o *CreateUpdateRbacRolePayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUpdateRbacRolePayload := _CreateUpdateRbacRolePayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUpdateRbacRolePayload)

	if err != nil {
		return err
	}

	*o = CreateUpdateRbacRolePayload(varCreateUpdateRbacRolePayload)

	return err
}

type NullableCreateUpdateRbacRolePayload struct {
	value *CreateUpdateRbacRolePayload
	isSet bool
}

func (v NullableCreateUpdateRbacRolePayload) Get() *CreateUpdateRbacRolePayload {
	return v.value
}

func (v *NullableCreateUpdateRbacRolePayload) Set(val *CreateUpdateRbacRolePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUpdateRbacRolePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUpdateRbacRolePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUpdateRbacRolePayload(val *CreateUpdateRbacRolePayload) *NullableCreateUpdateRbacRolePayload {
	return &NullableCreateUpdateRbacRolePayload{value: val, isSet: true}
}

func (v NullableCreateUpdateRbacRolePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUpdateRbacRolePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
