/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the PaymentInitiatePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentInitiatePayload{}

// PaymentInitiatePayload struct for PaymentInitiatePayload
type PaymentInitiatePayload struct {
	Amount *float32 `json:"amount,omitempty"`
}

// NewPaymentInitiatePayload instantiates a new PaymentInitiatePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentInitiatePayload() *PaymentInitiatePayload {
	this := PaymentInitiatePayload{}
	return &this
}

// NewPaymentInitiatePayloadWithDefaults instantiates a new PaymentInitiatePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentInitiatePayloadWithDefaults() *PaymentInitiatePayload {
	this := PaymentInitiatePayload{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentInitiatePayload) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInitiatePayload) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentInitiatePayload) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *PaymentInitiatePayload) SetAmount(v float32) {
	o.Amount = &v
}

func (o PaymentInitiatePayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentInitiatePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullablePaymentInitiatePayload struct {
	value *PaymentInitiatePayload
	isSet bool
}

func (v NullablePaymentInitiatePayload) Get() *PaymentInitiatePayload {
	return v.value
}

func (v *NullablePaymentInitiatePayload) Set(val *PaymentInitiatePayload) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentInitiatePayload) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentInitiatePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentInitiatePayload(val *PaymentInitiatePayload) *NullablePaymentInitiatePayload {
	return &NullablePaymentInitiatePayload{value: val, isSet: true}
}

func (v NullablePaymentInitiatePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentInitiatePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
