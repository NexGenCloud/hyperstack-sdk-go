/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the FlavorItemGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlavorItemGetResponse{}

// FlavorItemGetResponse struct for FlavorItemGetResponse
type FlavorItemGetResponse struct {
	Flavors    []FlavorFields `json:"flavors,omitempty"`
	Gpu        *string        `json:"gpu,omitempty"`
	RegionName *string        `json:"region_name,omitempty"`
}

// NewFlavorItemGetResponse instantiates a new FlavorItemGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlavorItemGetResponse() *FlavorItemGetResponse {
	this := FlavorItemGetResponse{}
	return &this
}

// NewFlavorItemGetResponseWithDefaults instantiates a new FlavorItemGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlavorItemGetResponseWithDefaults() *FlavorItemGetResponse {
	this := FlavorItemGetResponse{}
	return &this
}

// GetFlavors returns the Flavors field value if set, zero value otherwise.
func (o *FlavorItemGetResponse) GetFlavors() []FlavorFields {
	if o == nil || IsNil(o.Flavors) {
		var ret []FlavorFields
		return ret
	}
	return o.Flavors
}

// GetFlavorsOk returns a tuple with the Flavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlavorItemGetResponse) GetFlavorsOk() ([]FlavorFields, bool) {
	if o == nil || IsNil(o.Flavors) {
		return nil, false
	}
	return o.Flavors, true
}

// HasFlavors returns a boolean if a field has been set.
func (o *FlavorItemGetResponse) HasFlavors() bool {
	if o != nil && !IsNil(o.Flavors) {
		return true
	}

	return false
}

// SetFlavors gets a reference to the given []FlavorFields and assigns it to the Flavors field.
func (o *FlavorItemGetResponse) SetFlavors(v []FlavorFields) {
	o.Flavors = v
}

// GetGpu returns the Gpu field value if set, zero value otherwise.
func (o *FlavorItemGetResponse) GetGpu() string {
	if o == nil || IsNil(o.Gpu) {
		var ret string
		return ret
	}
	return *o.Gpu
}

// GetGpuOk returns a tuple with the Gpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlavorItemGetResponse) GetGpuOk() (*string, bool) {
	if o == nil || IsNil(o.Gpu) {
		return nil, false
	}
	return o.Gpu, true
}

// HasGpu returns a boolean if a field has been set.
func (o *FlavorItemGetResponse) HasGpu() bool {
	if o != nil && !IsNil(o.Gpu) {
		return true
	}

	return false
}

// SetGpu gets a reference to the given string and assigns it to the Gpu field.
func (o *FlavorItemGetResponse) SetGpu(v string) {
	o.Gpu = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *FlavorItemGetResponse) GetRegionName() string {
	if o == nil || IsNil(o.RegionName) {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlavorItemGetResponse) GetRegionNameOk() (*string, bool) {
	if o == nil || IsNil(o.RegionName) {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *FlavorItemGetResponse) HasRegionName() bool {
	if o != nil && !IsNil(o.RegionName) {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *FlavorItemGetResponse) SetRegionName(v string) {
	o.RegionName = &v
}

func (o FlavorItemGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlavorItemGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Flavors) {
		toSerialize["flavors"] = o.Flavors
	}
	if !IsNil(o.Gpu) {
		toSerialize["gpu"] = o.Gpu
	}
	if !IsNil(o.RegionName) {
		toSerialize["region_name"] = o.RegionName
	}
	return toSerialize, nil
}

type NullableFlavorItemGetResponse struct {
	value *FlavorItemGetResponse
	isSet bool
}

func (v NullableFlavorItemGetResponse) Get() *FlavorItemGetResponse {
	return v.value
}

func (v *NullableFlavorItemGetResponse) Set(val *FlavorItemGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFlavorItemGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFlavorItemGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlavorItemGetResponse(val *FlavorItemGetResponse) *NullableFlavorItemGetResponse {
	return &NullableFlavorItemGetResponse{value: val, isSet: true}
}

func (v NullableFlavorItemGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlavorItemGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
