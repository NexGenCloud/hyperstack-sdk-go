/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateOrganizationPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationPayload{}

// UpdateOrganizationPayload struct for UpdateOrganizationPayload
type UpdateOrganizationPayload struct {
	// The new name for the organition
	Name string `json:"name"`
}

type _UpdateOrganizationPayload UpdateOrganizationPayload

// NewUpdateOrganizationPayload instantiates a new UpdateOrganizationPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationPayload(name string) *UpdateOrganizationPayload {
	this := UpdateOrganizationPayload{}
	this.Name = name
	return &this
}

// NewUpdateOrganizationPayloadWithDefaults instantiates a new UpdateOrganizationPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationPayloadWithDefaults() *UpdateOrganizationPayload {
	this := UpdateOrganizationPayload{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateOrganizationPayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationPayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateOrganizationPayload) SetName(v string) {
	o.Name = v
}

func (o UpdateOrganizationPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *UpdateOrganizationPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateOrganizationPayload := _UpdateOrganizationPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateOrganizationPayload)

	if err != nil {
		return err
	}

	*o = UpdateOrganizationPayload(varUpdateOrganizationPayload)

	return err
}

type NullableUpdateOrganizationPayload struct {
	value *UpdateOrganizationPayload
	isSet bool
}

func (v NullableUpdateOrganizationPayload) Get() *UpdateOrganizationPayload {
	return v.value
}

func (v *NullableUpdateOrganizationPayload) Set(val *UpdateOrganizationPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationPayload(val *UpdateOrganizationPayload) *NullableUpdateOrganizationPayload {
	return &NullableUpdateOrganizationPayload{value: val, isSet: true}
}

func (v NullableUpdateOrganizationPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
