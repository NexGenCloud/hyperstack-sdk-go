/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the InstanceFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceFields{}

// InstanceFields struct for InstanceFields
type InstanceFields struct {
	CallbackUrl             *string                          `json:"callback_url,omitempty"`
	ContractId              *int32                           `json:"contract_id,omitempty"`
	CreatedAt               *CustomTime                      `json:"created_at,omitempty"`
	Environment             *InstanceEnvironmentFields       `json:"environment,omitempty"`
	Features                map[string]interface{}           `json:"features,omitempty"`
	FixedIp                 *string                          `json:"fixed_ip,omitempty"`
	Flavor                  *InstanceFlavorFields            `json:"flavor,omitempty"`
	FloatingIp              *string                          `json:"floating_ip,omitempty"`
	FloatingIpStatus        *string                          `json:"floating_ip_status,omitempty"`
	Id                      *int32                           `json:"id,omitempty"`
	Image                   *InstanceImageFields             `json:"image,omitempty"`
	Keypair                 *InstanceKeypairFields           `json:"keypair,omitempty"`
	Labels                  []string                         `json:"labels,omitempty"`
	Locked                  *bool                            `json:"locked,omitempty"`
	Name                    *string                          `json:"name,omitempty"`
	Os                      *string                          `json:"os,omitempty"`
	PortRandomization       *bool                            `json:"port_randomization,omitempty"`
	PortRandomizationStatus *string                          `json:"port_randomization_status,omitempty"`
	PowerState              *string                          `json:"power_state,omitempty"`
	RequiresPublicIp        *bool                            `json:"requires_public_ip,omitempty"`
	SecurityRules           []SecurityRulesFieldsForInstance `json:"security_rules,omitempty"`
	Status                  *string                          `json:"status,omitempty"`
	VmState                 *string                          `json:"vm_state,omitempty"`
	VolumeAttachments       []VolumeAttachmentFields         `json:"volume_attachments,omitempty"`
}

// NewInstanceFields instantiates a new InstanceFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceFields() *InstanceFields {
	this := InstanceFields{}
	return &this
}

// NewInstanceFieldsWithDefaults instantiates a new InstanceFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceFieldsWithDefaults() *InstanceFields {
	this := InstanceFields{}
	return &this
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *InstanceFields) GetCallbackUrl() string {
	if o == nil || IsNil(o.CallbackUrl) {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetCallbackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CallbackUrl) {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *InstanceFields) HasCallbackUrl() bool {
	if o != nil && !IsNil(o.CallbackUrl) {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *InstanceFields) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *InstanceFields) GetContractId() int32 {
	if o == nil || IsNil(o.ContractId) {
		var ret int32
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetContractIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *InstanceFields) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given int32 and assigns it to the ContractId field.
func (o *InstanceFields) SetContractId(v int32) {
	o.ContractId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InstanceFields) GetCreatedAt() CustomTime {
	if o == nil || IsNil(o.CreatedAt) {
		var ret CustomTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetCreatedAtOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InstanceFields) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given CustomTime and assigns it to the CreatedAt field.
func (o *InstanceFields) SetCreatedAt(v CustomTime) {
	o.CreatedAt = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *InstanceFields) GetEnvironment() InstanceEnvironmentFields {
	if o == nil || IsNil(o.Environment) {
		var ret InstanceEnvironmentFields
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetEnvironmentOk() (*InstanceEnvironmentFields, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *InstanceFields) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given InstanceEnvironmentFields and assigns it to the Environment field.
func (o *InstanceFields) SetEnvironment(v InstanceEnvironmentFields) {
	o.Environment = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *InstanceFields) GetFeatures() map[string]interface{} {
	if o == nil || IsNil(o.Features) {
		var ret map[string]interface{}
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetFeaturesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Features) {
		return map[string]interface{}{}, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *InstanceFields) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given map[string]interface{} and assigns it to the Features field.
func (o *InstanceFields) SetFeatures(v map[string]interface{}) {
	o.Features = v
}

// GetFixedIp returns the FixedIp field value if set, zero value otherwise.
func (o *InstanceFields) GetFixedIp() string {
	if o == nil || IsNil(o.FixedIp) {
		var ret string
		return ret
	}
	return *o.FixedIp
}

// GetFixedIpOk returns a tuple with the FixedIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetFixedIpOk() (*string, bool) {
	if o == nil || IsNil(o.FixedIp) {
		return nil, false
	}
	return o.FixedIp, true
}

// HasFixedIp returns a boolean if a field has been set.
func (o *InstanceFields) HasFixedIp() bool {
	if o != nil && !IsNil(o.FixedIp) {
		return true
	}

	return false
}

// SetFixedIp gets a reference to the given string and assigns it to the FixedIp field.
func (o *InstanceFields) SetFixedIp(v string) {
	o.FixedIp = &v
}

// GetFlavor returns the Flavor field value if set, zero value otherwise.
func (o *InstanceFields) GetFlavor() InstanceFlavorFields {
	if o == nil || IsNil(o.Flavor) {
		var ret InstanceFlavorFields
		return ret
	}
	return *o.Flavor
}

// GetFlavorOk returns a tuple with the Flavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetFlavorOk() (*InstanceFlavorFields, bool) {
	if o == nil || IsNil(o.Flavor) {
		return nil, false
	}
	return o.Flavor, true
}

// HasFlavor returns a boolean if a field has been set.
func (o *InstanceFields) HasFlavor() bool {
	if o != nil && !IsNil(o.Flavor) {
		return true
	}

	return false
}

// SetFlavor gets a reference to the given InstanceFlavorFields and assigns it to the Flavor field.
func (o *InstanceFields) SetFlavor(v InstanceFlavorFields) {
	o.Flavor = &v
}

// GetFloatingIp returns the FloatingIp field value if set, zero value otherwise.
func (o *InstanceFields) GetFloatingIp() string {
	if o == nil || IsNil(o.FloatingIp) {
		var ret string
		return ret
	}
	return *o.FloatingIp
}

// GetFloatingIpOk returns a tuple with the FloatingIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetFloatingIpOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingIp) {
		return nil, false
	}
	return o.FloatingIp, true
}

// HasFloatingIp returns a boolean if a field has been set.
func (o *InstanceFields) HasFloatingIp() bool {
	if o != nil && !IsNil(o.FloatingIp) {
		return true
	}

	return false
}

// SetFloatingIp gets a reference to the given string and assigns it to the FloatingIp field.
func (o *InstanceFields) SetFloatingIp(v string) {
	o.FloatingIp = &v
}

// GetFloatingIpStatus returns the FloatingIpStatus field value if set, zero value otherwise.
func (o *InstanceFields) GetFloatingIpStatus() string {
	if o == nil || IsNil(o.FloatingIpStatus) {
		var ret string
		return ret
	}
	return *o.FloatingIpStatus
}

// GetFloatingIpStatusOk returns a tuple with the FloatingIpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetFloatingIpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingIpStatus) {
		return nil, false
	}
	return o.FloatingIpStatus, true
}

// HasFloatingIpStatus returns a boolean if a field has been set.
func (o *InstanceFields) HasFloatingIpStatus() bool {
	if o != nil && !IsNil(o.FloatingIpStatus) {
		return true
	}

	return false
}

// SetFloatingIpStatus gets a reference to the given string and assigns it to the FloatingIpStatus field.
func (o *InstanceFields) SetFloatingIpStatus(v string) {
	o.FloatingIpStatus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InstanceFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InstanceFields) SetId(v int32) {
	o.Id = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *InstanceFields) GetImage() InstanceImageFields {
	if o == nil || IsNil(o.Image) {
		var ret InstanceImageFields
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetImageOk() (*InstanceImageFields, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *InstanceFields) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given InstanceImageFields and assigns it to the Image field.
func (o *InstanceFields) SetImage(v InstanceImageFields) {
	o.Image = &v
}

// GetKeypair returns the Keypair field value if set, zero value otherwise.
func (o *InstanceFields) GetKeypair() InstanceKeypairFields {
	if o == nil || IsNil(o.Keypair) {
		var ret InstanceKeypairFields
		return ret
	}
	return *o.Keypair
}

// GetKeypairOk returns a tuple with the Keypair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetKeypairOk() (*InstanceKeypairFields, bool) {
	if o == nil || IsNil(o.Keypair) {
		return nil, false
	}
	return o.Keypair, true
}

// HasKeypair returns a boolean if a field has been set.
func (o *InstanceFields) HasKeypair() bool {
	if o != nil && !IsNil(o.Keypair) {
		return true
	}

	return false
}

// SetKeypair gets a reference to the given InstanceKeypairFields and assigns it to the Keypair field.
func (o *InstanceFields) SetKeypair(v InstanceKeypairFields) {
	o.Keypair = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *InstanceFields) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *InstanceFields) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *InstanceFields) SetLabels(v []string) {
	o.Labels = v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *InstanceFields) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *InstanceFields) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *InstanceFields) SetLocked(v bool) {
	o.Locked = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InstanceFields) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InstanceFields) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InstanceFields) SetName(v string) {
	o.Name = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *InstanceFields) GetOs() string {
	if o == nil || IsNil(o.Os) {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetOsOk() (*string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *InstanceFields) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *InstanceFields) SetOs(v string) {
	o.Os = &v
}

// GetPortRandomization returns the PortRandomization field value if set, zero value otherwise.
func (o *InstanceFields) GetPortRandomization() bool {
	if o == nil || IsNil(o.PortRandomization) {
		var ret bool
		return ret
	}
	return *o.PortRandomization
}

// GetPortRandomizationOk returns a tuple with the PortRandomization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetPortRandomizationOk() (*bool, bool) {
	if o == nil || IsNil(o.PortRandomization) {
		return nil, false
	}
	return o.PortRandomization, true
}

// HasPortRandomization returns a boolean if a field has been set.
func (o *InstanceFields) HasPortRandomization() bool {
	if o != nil && !IsNil(o.PortRandomization) {
		return true
	}

	return false
}

// SetPortRandomization gets a reference to the given bool and assigns it to the PortRandomization field.
func (o *InstanceFields) SetPortRandomization(v bool) {
	o.PortRandomization = &v
}

// GetPortRandomizationStatus returns the PortRandomizationStatus field value if set, zero value otherwise.
func (o *InstanceFields) GetPortRandomizationStatus() string {
	if o == nil || IsNil(o.PortRandomizationStatus) {
		var ret string
		return ret
	}
	return *o.PortRandomizationStatus
}

// GetPortRandomizationStatusOk returns a tuple with the PortRandomizationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetPortRandomizationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PortRandomizationStatus) {
		return nil, false
	}
	return o.PortRandomizationStatus, true
}

// HasPortRandomizationStatus returns a boolean if a field has been set.
func (o *InstanceFields) HasPortRandomizationStatus() bool {
	if o != nil && !IsNil(o.PortRandomizationStatus) {
		return true
	}

	return false
}

// SetPortRandomizationStatus gets a reference to the given string and assigns it to the PortRandomizationStatus field.
func (o *InstanceFields) SetPortRandomizationStatus(v string) {
	o.PortRandomizationStatus = &v
}

// GetPowerState returns the PowerState field value if set, zero value otherwise.
func (o *InstanceFields) GetPowerState() string {
	if o == nil || IsNil(o.PowerState) {
		var ret string
		return ret
	}
	return *o.PowerState
}

// GetPowerStateOk returns a tuple with the PowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetPowerStateOk() (*string, bool) {
	if o == nil || IsNil(o.PowerState) {
		return nil, false
	}
	return o.PowerState, true
}

// HasPowerState returns a boolean if a field has been set.
func (o *InstanceFields) HasPowerState() bool {
	if o != nil && !IsNil(o.PowerState) {
		return true
	}

	return false
}

// SetPowerState gets a reference to the given string and assigns it to the PowerState field.
func (o *InstanceFields) SetPowerState(v string) {
	o.PowerState = &v
}

// GetRequiresPublicIp returns the RequiresPublicIp field value if set, zero value otherwise.
func (o *InstanceFields) GetRequiresPublicIp() bool {
	if o == nil || IsNil(o.RequiresPublicIp) {
		var ret bool
		return ret
	}
	return *o.RequiresPublicIp
}

// GetRequiresPublicIpOk returns a tuple with the RequiresPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetRequiresPublicIpOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresPublicIp) {
		return nil, false
	}
	return o.RequiresPublicIp, true
}

// HasRequiresPublicIp returns a boolean if a field has been set.
func (o *InstanceFields) HasRequiresPublicIp() bool {
	if o != nil && !IsNil(o.RequiresPublicIp) {
		return true
	}

	return false
}

// SetRequiresPublicIp gets a reference to the given bool and assigns it to the RequiresPublicIp field.
func (o *InstanceFields) SetRequiresPublicIp(v bool) {
	o.RequiresPublicIp = &v
}

// GetSecurityRules returns the SecurityRules field value if set, zero value otherwise.
func (o *InstanceFields) GetSecurityRules() []SecurityRulesFieldsForInstance {
	if o == nil || IsNil(o.SecurityRules) {
		var ret []SecurityRulesFieldsForInstance
		return ret
	}
	return o.SecurityRules
}

// GetSecurityRulesOk returns a tuple with the SecurityRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetSecurityRulesOk() ([]SecurityRulesFieldsForInstance, bool) {
	if o == nil || IsNil(o.SecurityRules) {
		return nil, false
	}
	return o.SecurityRules, true
}

// HasSecurityRules returns a boolean if a field has been set.
func (o *InstanceFields) HasSecurityRules() bool {
	if o != nil && !IsNil(o.SecurityRules) {
		return true
	}

	return false
}

// SetSecurityRules gets a reference to the given []SecurityRulesFieldsForInstance and assigns it to the SecurityRules field.
func (o *InstanceFields) SetSecurityRules(v []SecurityRulesFieldsForInstance) {
	o.SecurityRules = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InstanceFields) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InstanceFields) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InstanceFields) SetStatus(v string) {
	o.Status = &v
}

// GetVmState returns the VmState field value if set, zero value otherwise.
func (o *InstanceFields) GetVmState() string {
	if o == nil || IsNil(o.VmState) {
		var ret string
		return ret
	}
	return *o.VmState
}

// GetVmStateOk returns a tuple with the VmState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetVmStateOk() (*string, bool) {
	if o == nil || IsNil(o.VmState) {
		return nil, false
	}
	return o.VmState, true
}

// HasVmState returns a boolean if a field has been set.
func (o *InstanceFields) HasVmState() bool {
	if o != nil && !IsNil(o.VmState) {
		return true
	}

	return false
}

// SetVmState gets a reference to the given string and assigns it to the VmState field.
func (o *InstanceFields) SetVmState(v string) {
	o.VmState = &v
}

// GetVolumeAttachments returns the VolumeAttachments field value if set, zero value otherwise.
func (o *InstanceFields) GetVolumeAttachments() []VolumeAttachmentFields {
	if o == nil || IsNil(o.VolumeAttachments) {
		var ret []VolumeAttachmentFields
		return ret
	}
	return o.VolumeAttachments
}

// GetVolumeAttachmentsOk returns a tuple with the VolumeAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFields) GetVolumeAttachmentsOk() ([]VolumeAttachmentFields, bool) {
	if o == nil || IsNil(o.VolumeAttachments) {
		return nil, false
	}
	return o.VolumeAttachments, true
}

// HasVolumeAttachments returns a boolean if a field has been set.
func (o *InstanceFields) HasVolumeAttachments() bool {
	if o != nil && !IsNil(o.VolumeAttachments) {
		return true
	}

	return false
}

// SetVolumeAttachments gets a reference to the given []VolumeAttachmentFields and assigns it to the VolumeAttachments field.
func (o *InstanceFields) SetVolumeAttachments(v []VolumeAttachmentFields) {
	o.VolumeAttachments = v
}

func (o InstanceFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallbackUrl) {
		toSerialize["callback_url"] = o.CallbackUrl
	}
	if !IsNil(o.ContractId) {
		toSerialize["contract_id"] = o.ContractId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.FixedIp) {
		toSerialize["fixed_ip"] = o.FixedIp
	}
	if !IsNil(o.Flavor) {
		toSerialize["flavor"] = o.Flavor
	}
	if !IsNil(o.FloatingIp) {
		toSerialize["floating_ip"] = o.FloatingIp
	}
	if !IsNil(o.FloatingIpStatus) {
		toSerialize["floating_ip_status"] = o.FloatingIpStatus
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Keypair) {
		toSerialize["keypair"] = o.Keypair
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.PortRandomization) {
		toSerialize["port_randomization"] = o.PortRandomization
	}
	if !IsNil(o.PortRandomizationStatus) {
		toSerialize["port_randomization_status"] = o.PortRandomizationStatus
	}
	if !IsNil(o.PowerState) {
		toSerialize["power_state"] = o.PowerState
	}
	if !IsNil(o.RequiresPublicIp) {
		toSerialize["requires_public_ip"] = o.RequiresPublicIp
	}
	if !IsNil(o.SecurityRules) {
		toSerialize["security_rules"] = o.SecurityRules
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.VmState) {
		toSerialize["vm_state"] = o.VmState
	}
	if !IsNil(o.VolumeAttachments) {
		toSerialize["volume_attachments"] = o.VolumeAttachments
	}
	return toSerialize, nil
}

type NullableInstanceFields struct {
	value *InstanceFields
	isSet bool
}

func (v NullableInstanceFields) Get() *InstanceFields {
	return v.value
}

func (v *NullableInstanceFields) Set(val *InstanceFields) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceFields) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceFields(val *InstanceFields) *NullableInstanceFields {
	return &NullableInstanceFields{value: val, isSet: true}
}

func (v NullableInstanceFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
