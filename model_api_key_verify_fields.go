/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ApiKeyVerifyFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiKeyVerifyFields{}

// ApiKeyVerifyFields struct for ApiKeyVerifyFields
type ApiKeyVerifyFields struct {
	OrgId    *int32  `json:"org_id,omitempty"`
	Sub      *string `json:"sub,omitempty"`
	UserId   *int32  `json:"user_id,omitempty"`
	UserRole *string `json:"user_role,omitempty"`
}

// NewApiKeyVerifyFields instantiates a new ApiKeyVerifyFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyVerifyFields() *ApiKeyVerifyFields {
	this := ApiKeyVerifyFields{}
	return &this
}

// NewApiKeyVerifyFieldsWithDefaults instantiates a new ApiKeyVerifyFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyVerifyFieldsWithDefaults() *ApiKeyVerifyFields {
	this := ApiKeyVerifyFields{}
	return &this
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ApiKeyVerifyFields) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyVerifyFields) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ApiKeyVerifyFields) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *ApiKeyVerifyFields) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetSub returns the Sub field value if set, zero value otherwise.
func (o *ApiKeyVerifyFields) GetSub() string {
	if o == nil || IsNil(o.Sub) {
		var ret string
		return ret
	}
	return *o.Sub
}

// GetSubOk returns a tuple with the Sub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyVerifyFields) GetSubOk() (*string, bool) {
	if o == nil || IsNil(o.Sub) {
		return nil, false
	}
	return o.Sub, true
}

// HasSub returns a boolean if a field has been set.
func (o *ApiKeyVerifyFields) HasSub() bool {
	if o != nil && !IsNil(o.Sub) {
		return true
	}

	return false
}

// SetSub gets a reference to the given string and assigns it to the Sub field.
func (o *ApiKeyVerifyFields) SetSub(v string) {
	o.Sub = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ApiKeyVerifyFields) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyVerifyFields) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ApiKeyVerifyFields) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ApiKeyVerifyFields) SetUserId(v int32) {
	o.UserId = &v
}

// GetUserRole returns the UserRole field value if set, zero value otherwise.
func (o *ApiKeyVerifyFields) GetUserRole() string {
	if o == nil || IsNil(o.UserRole) {
		var ret string
		return ret
	}
	return *o.UserRole
}

// GetUserRoleOk returns a tuple with the UserRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyVerifyFields) GetUserRoleOk() (*string, bool) {
	if o == nil || IsNil(o.UserRole) {
		return nil, false
	}
	return o.UserRole, true
}

// HasUserRole returns a boolean if a field has been set.
func (o *ApiKeyVerifyFields) HasUserRole() bool {
	if o != nil && !IsNil(o.UserRole) {
		return true
	}

	return false
}

// SetUserRole gets a reference to the given string and assigns it to the UserRole field.
func (o *ApiKeyVerifyFields) SetUserRole(v string) {
	o.UserRole = &v
}

func (o ApiKeyVerifyFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiKeyVerifyFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Sub) {
		toSerialize["sub"] = o.Sub
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.UserRole) {
		toSerialize["user_role"] = o.UserRole
	}
	return toSerialize, nil
}

type NullableApiKeyVerifyFields struct {
	value *ApiKeyVerifyFields
	isSet bool
}

func (v NullableApiKeyVerifyFields) Get() *ApiKeyVerifyFields {
	return v.value
}

func (v *NullableApiKeyVerifyFields) Set(val *ApiKeyVerifyFields) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyVerifyFields) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyVerifyFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyVerifyFields(val *ApiKeyVerifyFields) *NullableApiKeyVerifyFields {
	return &NullableApiKeyVerifyFields{value: val, isSet: true}
}

func (v NullableApiKeyVerifyFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyVerifyFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
