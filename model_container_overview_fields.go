/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ContainerOverviewFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerOverviewFields{}

// ContainerOverviewFields struct for ContainerOverviewFields
type ContainerOverviewFields struct {
	CostPerHour *float32 `json:"cost_per_hour,omitempty"`
	Count       *int32   `json:"count,omitempty"`
	Gpus        *int32   `json:"gpus,omitempty"`
	Ram         *float32 `json:"ram,omitempty"`
	Vcpus       *int32   `json:"vcpus,omitempty"`
}

// NewContainerOverviewFields instantiates a new ContainerOverviewFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerOverviewFields() *ContainerOverviewFields {
	this := ContainerOverviewFields{}
	return &this
}

// NewContainerOverviewFieldsWithDefaults instantiates a new ContainerOverviewFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerOverviewFieldsWithDefaults() *ContainerOverviewFields {
	this := ContainerOverviewFields{}
	return &this
}

// GetCostPerHour returns the CostPerHour field value if set, zero value otherwise.
func (o *ContainerOverviewFields) GetCostPerHour() float32 {
	if o == nil || IsNil(o.CostPerHour) {
		var ret float32
		return ret
	}
	return *o.CostPerHour
}

// GetCostPerHourOk returns a tuple with the CostPerHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOverviewFields) GetCostPerHourOk() (*float32, bool) {
	if o == nil || IsNil(o.CostPerHour) {
		return nil, false
	}
	return o.CostPerHour, true
}

// HasCostPerHour returns a boolean if a field has been set.
func (o *ContainerOverviewFields) HasCostPerHour() bool {
	if o != nil && !IsNil(o.CostPerHour) {
		return true
	}

	return false
}

// SetCostPerHour gets a reference to the given float32 and assigns it to the CostPerHour field.
func (o *ContainerOverviewFields) SetCostPerHour(v float32) {
	o.CostPerHour = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ContainerOverviewFields) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOverviewFields) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ContainerOverviewFields) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ContainerOverviewFields) SetCount(v int32) {
	o.Count = &v
}

// GetGpus returns the Gpus field value if set, zero value otherwise.
func (o *ContainerOverviewFields) GetGpus() int32 {
	if o == nil || IsNil(o.Gpus) {
		var ret int32
		return ret
	}
	return *o.Gpus
}

// GetGpusOk returns a tuple with the Gpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOverviewFields) GetGpusOk() (*int32, bool) {
	if o == nil || IsNil(o.Gpus) {
		return nil, false
	}
	return o.Gpus, true
}

// HasGpus returns a boolean if a field has been set.
func (o *ContainerOverviewFields) HasGpus() bool {
	if o != nil && !IsNil(o.Gpus) {
		return true
	}

	return false
}

// SetGpus gets a reference to the given int32 and assigns it to the Gpus field.
func (o *ContainerOverviewFields) SetGpus(v int32) {
	o.Gpus = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *ContainerOverviewFields) GetRam() float32 {
	if o == nil || IsNil(o.Ram) {
		var ret float32
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOverviewFields) GetRamOk() (*float32, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *ContainerOverviewFields) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given float32 and assigns it to the Ram field.
func (o *ContainerOverviewFields) SetRam(v float32) {
	o.Ram = &v
}

// GetVcpus returns the Vcpus field value if set, zero value otherwise.
func (o *ContainerOverviewFields) GetVcpus() int32 {
	if o == nil || IsNil(o.Vcpus) {
		var ret int32
		return ret
	}
	return *o.Vcpus
}

// GetVcpusOk returns a tuple with the Vcpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOverviewFields) GetVcpusOk() (*int32, bool) {
	if o == nil || IsNil(o.Vcpus) {
		return nil, false
	}
	return o.Vcpus, true
}

// HasVcpus returns a boolean if a field has been set.
func (o *ContainerOverviewFields) HasVcpus() bool {
	if o != nil && !IsNil(o.Vcpus) {
		return true
	}

	return false
}

// SetVcpus gets a reference to the given int32 and assigns it to the Vcpus field.
func (o *ContainerOverviewFields) SetVcpus(v int32) {
	o.Vcpus = &v
}

func (o ContainerOverviewFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerOverviewFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CostPerHour) {
		toSerialize["cost_per_hour"] = o.CostPerHour
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Gpus) {
		toSerialize["gpus"] = o.Gpus
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	if !IsNil(o.Vcpus) {
		toSerialize["vcpus"] = o.Vcpus
	}
	return toSerialize, nil
}

type NullableContainerOverviewFields struct {
	value *ContainerOverviewFields
	isSet bool
}

func (v NullableContainerOverviewFields) Get() *ContainerOverviewFields {
	return v.value
}

func (v *NullableContainerOverviewFields) Set(val *ContainerOverviewFields) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerOverviewFields) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerOverviewFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerOverviewFields(val *ContainerOverviewFields) *NullableContainerOverviewFields {
	return &NullableContainerOverviewFields{value: val, isSet: true}
}

func (v NullableContainerOverviewFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerOverviewFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
