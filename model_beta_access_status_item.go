/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the BetaAccessStatusItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BetaAccessStatusItem{}

// BetaAccessStatusItem struct for BetaAccessStatusItem
type BetaAccessStatusItem struct {
	// Name of the beta program
	ProgramName *string `json:"program_name,omitempty"`
	// When the request was made
	RequestDate *CustomTime `json:"request_date,omitempty"`
	// Status of the request (requested, approved, denied, revoked)
	Status *string `json:"status,omitempty"`
}

// NewBetaAccessStatusItem instantiates a new BetaAccessStatusItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBetaAccessStatusItem() *BetaAccessStatusItem {
	this := BetaAccessStatusItem{}
	return &this
}

// NewBetaAccessStatusItemWithDefaults instantiates a new BetaAccessStatusItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBetaAccessStatusItemWithDefaults() *BetaAccessStatusItem {
	this := BetaAccessStatusItem{}
	return &this
}

// GetProgramName returns the ProgramName field value if set, zero value otherwise.
func (o *BetaAccessStatusItem) GetProgramName() string {
	if o == nil || IsNil(o.ProgramName) {
		var ret string
		return ret
	}
	return *o.ProgramName
}

// GetProgramNameOk returns a tuple with the ProgramName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaAccessStatusItem) GetProgramNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProgramName) {
		return nil, false
	}
	return o.ProgramName, true
}

// HasProgramName returns a boolean if a field has been set.
func (o *BetaAccessStatusItem) HasProgramName() bool {
	if o != nil && !IsNil(o.ProgramName) {
		return true
	}

	return false
}

// SetProgramName gets a reference to the given string and assigns it to the ProgramName field.
func (o *BetaAccessStatusItem) SetProgramName(v string) {
	o.ProgramName = &v
}

// GetRequestDate returns the RequestDate field value if set, zero value otherwise.
func (o *BetaAccessStatusItem) GetRequestDate() CustomTime {
	if o == nil || IsNil(o.RequestDate) {
		var ret CustomTime
		return ret
	}
	return *o.RequestDate
}

// GetRequestDateOk returns a tuple with the RequestDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaAccessStatusItem) GetRequestDateOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.RequestDate) {
		return nil, false
	}
	return o.RequestDate, true
}

// HasRequestDate returns a boolean if a field has been set.
func (o *BetaAccessStatusItem) HasRequestDate() bool {
	if o != nil && !IsNil(o.RequestDate) {
		return true
	}

	return false
}

// SetRequestDate gets a reference to the given CustomTime and assigns it to the RequestDate field.
func (o *BetaAccessStatusItem) SetRequestDate(v CustomTime) {
	o.RequestDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BetaAccessStatusItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaAccessStatusItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BetaAccessStatusItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BetaAccessStatusItem) SetStatus(v string) {
	o.Status = &v
}

func (o BetaAccessStatusItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BetaAccessStatusItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProgramName) {
		toSerialize["program_name"] = o.ProgramName
	}
	if !IsNil(o.RequestDate) {
		toSerialize["request_date"] = o.RequestDate
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableBetaAccessStatusItem struct {
	value *BetaAccessStatusItem
	isSet bool
}

func (v NullableBetaAccessStatusItem) Get() *BetaAccessStatusItem {
	return v.value
}

func (v *NullableBetaAccessStatusItem) Set(val *BetaAccessStatusItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBetaAccessStatusItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBetaAccessStatusItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBetaAccessStatusItem(val *BetaAccessStatusItem) *NullableBetaAccessStatusItem {
	return &NullableBetaAccessStatusItem{value: val, isSet: true}
}

func (v NullableBetaAccessStatusItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBetaAccessStatusItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
