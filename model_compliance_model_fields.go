/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ComplianceModelFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComplianceModelFields{}

// ComplianceModelFields struct for ComplianceModelFields
type ComplianceModelFields struct {
	BaseValue     *int32  `json:"base_value,omitempty"`
	GpuModel      *string `json:"gpu_model,omitempty"`
	Id            *int32  `json:"id,omitempty"`
	ResourceType  *string `json:"resource_type,omitempty"`
	VariationMax  *int32  `json:"variation_max,omitempty"`
	VariationMin  *int32  `json:"variation_min,omitempty"`
	VariationUnit *int32  `json:"variation_unit,omitempty"`
}

// NewComplianceModelFields instantiates a new ComplianceModelFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComplianceModelFields() *ComplianceModelFields {
	this := ComplianceModelFields{}
	return &this
}

// NewComplianceModelFieldsWithDefaults instantiates a new ComplianceModelFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComplianceModelFieldsWithDefaults() *ComplianceModelFields {
	this := ComplianceModelFields{}
	return &this
}

// GetBaseValue returns the BaseValue field value if set, zero value otherwise.
func (o *ComplianceModelFields) GetBaseValue() int32 {
	if o == nil || IsNil(o.BaseValue) {
		var ret int32
		return ret
	}
	return *o.BaseValue
}

// GetBaseValueOk returns a tuple with the BaseValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceModelFields) GetBaseValueOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseValue) {
		return nil, false
	}
	return o.BaseValue, true
}

// HasBaseValue returns a boolean if a field has been set.
func (o *ComplianceModelFields) HasBaseValue() bool {
	if o != nil && !IsNil(o.BaseValue) {
		return true
	}

	return false
}

// SetBaseValue gets a reference to the given int32 and assigns it to the BaseValue field.
func (o *ComplianceModelFields) SetBaseValue(v int32) {
	o.BaseValue = &v
}

// GetGpuModel returns the GpuModel field value if set, zero value otherwise.
func (o *ComplianceModelFields) GetGpuModel() string {
	if o == nil || IsNil(o.GpuModel) {
		var ret string
		return ret
	}
	return *o.GpuModel
}

// GetGpuModelOk returns a tuple with the GpuModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceModelFields) GetGpuModelOk() (*string, bool) {
	if o == nil || IsNil(o.GpuModel) {
		return nil, false
	}
	return o.GpuModel, true
}

// HasGpuModel returns a boolean if a field has been set.
func (o *ComplianceModelFields) HasGpuModel() bool {
	if o != nil && !IsNil(o.GpuModel) {
		return true
	}

	return false
}

// SetGpuModel gets a reference to the given string and assigns it to the GpuModel field.
func (o *ComplianceModelFields) SetGpuModel(v string) {
	o.GpuModel = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ComplianceModelFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceModelFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ComplianceModelFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ComplianceModelFields) SetId(v int32) {
	o.Id = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ComplianceModelFields) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceModelFields) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *ComplianceModelFields) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *ComplianceModelFields) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetVariationMax returns the VariationMax field value if set, zero value otherwise.
func (o *ComplianceModelFields) GetVariationMax() int32 {
	if o == nil || IsNil(o.VariationMax) {
		var ret int32
		return ret
	}
	return *o.VariationMax
}

// GetVariationMaxOk returns a tuple with the VariationMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceModelFields) GetVariationMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.VariationMax) {
		return nil, false
	}
	return o.VariationMax, true
}

// HasVariationMax returns a boolean if a field has been set.
func (o *ComplianceModelFields) HasVariationMax() bool {
	if o != nil && !IsNil(o.VariationMax) {
		return true
	}

	return false
}

// SetVariationMax gets a reference to the given int32 and assigns it to the VariationMax field.
func (o *ComplianceModelFields) SetVariationMax(v int32) {
	o.VariationMax = &v
}

// GetVariationMin returns the VariationMin field value if set, zero value otherwise.
func (o *ComplianceModelFields) GetVariationMin() int32 {
	if o == nil || IsNil(o.VariationMin) {
		var ret int32
		return ret
	}
	return *o.VariationMin
}

// GetVariationMinOk returns a tuple with the VariationMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceModelFields) GetVariationMinOk() (*int32, bool) {
	if o == nil || IsNil(o.VariationMin) {
		return nil, false
	}
	return o.VariationMin, true
}

// HasVariationMin returns a boolean if a field has been set.
func (o *ComplianceModelFields) HasVariationMin() bool {
	if o != nil && !IsNil(o.VariationMin) {
		return true
	}

	return false
}

// SetVariationMin gets a reference to the given int32 and assigns it to the VariationMin field.
func (o *ComplianceModelFields) SetVariationMin(v int32) {
	o.VariationMin = &v
}

// GetVariationUnit returns the VariationUnit field value if set, zero value otherwise.
func (o *ComplianceModelFields) GetVariationUnit() int32 {
	if o == nil || IsNil(o.VariationUnit) {
		var ret int32
		return ret
	}
	return *o.VariationUnit
}

// GetVariationUnitOk returns a tuple with the VariationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceModelFields) GetVariationUnitOk() (*int32, bool) {
	if o == nil || IsNil(o.VariationUnit) {
		return nil, false
	}
	return o.VariationUnit, true
}

// HasVariationUnit returns a boolean if a field has been set.
func (o *ComplianceModelFields) HasVariationUnit() bool {
	if o != nil && !IsNil(o.VariationUnit) {
		return true
	}

	return false
}

// SetVariationUnit gets a reference to the given int32 and assigns it to the VariationUnit field.
func (o *ComplianceModelFields) SetVariationUnit(v int32) {
	o.VariationUnit = &v
}

func (o ComplianceModelFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComplianceModelFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseValue) {
		toSerialize["base_value"] = o.BaseValue
	}
	if !IsNil(o.GpuModel) {
		toSerialize["gpu_model"] = o.GpuModel
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resource_type"] = o.ResourceType
	}
	if !IsNil(o.VariationMax) {
		toSerialize["variation_max"] = o.VariationMax
	}
	if !IsNil(o.VariationMin) {
		toSerialize["variation_min"] = o.VariationMin
	}
	if !IsNil(o.VariationUnit) {
		toSerialize["variation_unit"] = o.VariationUnit
	}
	return toSerialize, nil
}

type NullableComplianceModelFields struct {
	value *ComplianceModelFields
	isSet bool
}

func (v NullableComplianceModelFields) Get() *ComplianceModelFields {
	return v.value
}

func (v *NullableComplianceModelFields) Set(val *ComplianceModelFields) {
	v.value = val
	v.isSet = true
}

func (v NullableComplianceModelFields) IsSet() bool {
	return v.isSet
}

func (v *NullableComplianceModelFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComplianceModelFields(val *ComplianceModelFields) *NullableComplianceModelFields {
	return &NullableComplianceModelFields{value: val, isSet: true}
}

func (v NullableComplianceModelFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComplianceModelFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
