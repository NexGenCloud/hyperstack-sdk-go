/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UserInfoPostPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserInfoPostPayload{}

// UserInfoPostPayload struct for UserInfoPostPayload
type UserInfoPostPayload struct {
	BillingAddress1 *string `json:"billing_address1,omitempty"`
	BillingAddress2 *string `json:"billing_address2,omitempty"`
	Business        bool    `json:"business"`
	CompanyName     *string `json:"company_name,omitempty"`
	Country         string  `json:"country"`
	Email           *string `json:"email,omitempty"`
	Name            *string `json:"name,omitempty"`
	Phone           *string `json:"phone,omitempty"`
	State           *string `json:"state,omitempty"`
	VatNumber       *string `json:"vat_number,omitempty"`
	ZipCode         string  `json:"zip_code"`
}

type _UserInfoPostPayload UserInfoPostPayload

// NewUserInfoPostPayload instantiates a new UserInfoPostPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserInfoPostPayload(business bool, country string, zipCode string) *UserInfoPostPayload {
	this := UserInfoPostPayload{}
	this.Business = business
	this.Country = country
	this.ZipCode = zipCode
	return &this
}

// NewUserInfoPostPayloadWithDefaults instantiates a new UserInfoPostPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserInfoPostPayloadWithDefaults() *UserInfoPostPayload {
	this := UserInfoPostPayload{}
	return &this
}

// GetBillingAddress1 returns the BillingAddress1 field value if set, zero value otherwise.
func (o *UserInfoPostPayload) GetBillingAddress1() string {
	if o == nil || IsNil(o.BillingAddress1) {
		var ret string
		return ret
	}
	return *o.BillingAddress1
}

// GetBillingAddress1Ok returns a tuple with the BillingAddress1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetBillingAddress1Ok() (*string, bool) {
	if o == nil || IsNil(o.BillingAddress1) {
		return nil, false
	}
	return o.BillingAddress1, true
}

// HasBillingAddress1 returns a boolean if a field has been set.
func (o *UserInfoPostPayload) HasBillingAddress1() bool {
	if o != nil && !IsNil(o.BillingAddress1) {
		return true
	}

	return false
}

// SetBillingAddress1 gets a reference to the given string and assigns it to the BillingAddress1 field.
func (o *UserInfoPostPayload) SetBillingAddress1(v string) {
	o.BillingAddress1 = &v
}

// GetBillingAddress2 returns the BillingAddress2 field value if set, zero value otherwise.
func (o *UserInfoPostPayload) GetBillingAddress2() string {
	if o == nil || IsNil(o.BillingAddress2) {
		var ret string
		return ret
	}
	return *o.BillingAddress2
}

// GetBillingAddress2Ok returns a tuple with the BillingAddress2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetBillingAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.BillingAddress2) {
		return nil, false
	}
	return o.BillingAddress2, true
}

// HasBillingAddress2 returns a boolean if a field has been set.
func (o *UserInfoPostPayload) HasBillingAddress2() bool {
	if o != nil && !IsNil(o.BillingAddress2) {
		return true
	}

	return false
}

// SetBillingAddress2 gets a reference to the given string and assigns it to the BillingAddress2 field.
func (o *UserInfoPostPayload) SetBillingAddress2(v string) {
	o.BillingAddress2 = &v
}

// GetBusiness returns the Business field value
func (o *UserInfoPostPayload) GetBusiness() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Business
}

// GetBusinessOk returns a tuple with the Business field value
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetBusinessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Business, true
}

// SetBusiness sets field value
func (o *UserInfoPostPayload) SetBusiness(v bool) {
	o.Business = v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *UserInfoPostPayload) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *UserInfoPostPayload) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *UserInfoPostPayload) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCountry returns the Country field value
func (o *UserInfoPostPayload) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *UserInfoPostPayload) SetCountry(v string) {
	o.Country = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserInfoPostPayload) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserInfoPostPayload) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserInfoPostPayload) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserInfoPostPayload) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserInfoPostPayload) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserInfoPostPayload) SetName(v string) {
	o.Name = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *UserInfoPostPayload) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *UserInfoPostPayload) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *UserInfoPostPayload) SetPhone(v string) {
	o.Phone = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *UserInfoPostPayload) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *UserInfoPostPayload) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *UserInfoPostPayload) SetState(v string) {
	o.State = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *UserInfoPostPayload) GetVatNumber() string {
	if o == nil || IsNil(o.VatNumber) {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetVatNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VatNumber) {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *UserInfoPostPayload) HasVatNumber() bool {
	if o != nil && !IsNil(o.VatNumber) {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *UserInfoPostPayload) SetVatNumber(v string) {
	o.VatNumber = &v
}

// GetZipCode returns the ZipCode field value
func (o *UserInfoPostPayload) GetZipCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value
// and a boolean to check if the value has been set.
func (o *UserInfoPostPayload) GetZipCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZipCode, true
}

// SetZipCode sets field value
func (o *UserInfoPostPayload) SetZipCode(v string) {
	o.ZipCode = v
}

func (o UserInfoPostPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserInfoPostPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingAddress1) {
		toSerialize["billing_address1"] = o.BillingAddress1
	}
	if !IsNil(o.BillingAddress2) {
		toSerialize["billing_address2"] = o.BillingAddress2
	}
	toSerialize["business"] = o.Business
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	toSerialize["country"] = o.Country
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.VatNumber) {
		toSerialize["vat_number"] = o.VatNumber
	}
	toSerialize["zip_code"] = o.ZipCode
	return toSerialize, nil
}

func (o *UserInfoPostPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"business",
		"country",
		"zip_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserInfoPostPayload := _UserInfoPostPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserInfoPostPayload)

	if err != nil {
		return err
	}

	*o = UserInfoPostPayload(varUserInfoPostPayload)

	return err
}

type NullableUserInfoPostPayload struct {
	value *UserInfoPostPayload
	isSet bool
}

func (v NullableUserInfoPostPayload) Get() *UserInfoPostPayload {
	return v.value
}

func (v *NullableUserInfoPostPayload) Set(val *UserInfoPostPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUserInfoPostPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUserInfoPostPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserInfoPostPayload(val *UserInfoPostPayload) *NullableUserInfoPostPayload {
	return &NullableUserInfoPostPayload{value: val, isSet: true}
}

func (v NullableUserInfoPostPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserInfoPostPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
