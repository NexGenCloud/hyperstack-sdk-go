/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateDiscountsPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDiscountsPayload{}

// UpdateDiscountsPayload struct for UpdateDiscountsPayload
type UpdateDiscountsPayload struct {
	DiscountResources []DiscountResourcePayload `json:"discount_resources"`
	DiscountStatus    string                    `json:"discount_status"`
	EndDate           *CustomTime               `json:"end_date,omitempty"`
	StartDate         *CustomTime               `json:"start_date,omitempty"`
}

type _UpdateDiscountsPayload UpdateDiscountsPayload

// NewUpdateDiscountsPayload instantiates a new UpdateDiscountsPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDiscountsPayload(discountResources []DiscountResourcePayload, discountStatus string) *UpdateDiscountsPayload {
	this := UpdateDiscountsPayload{}
	this.DiscountResources = discountResources
	this.DiscountStatus = discountStatus
	return &this
}

// NewUpdateDiscountsPayloadWithDefaults instantiates a new UpdateDiscountsPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDiscountsPayloadWithDefaults() *UpdateDiscountsPayload {
	this := UpdateDiscountsPayload{}
	return &this
}

// GetDiscountResources returns the DiscountResources field value
func (o *UpdateDiscountsPayload) GetDiscountResources() []DiscountResourcePayload {
	if o == nil {
		var ret []DiscountResourcePayload
		return ret
	}

	return o.DiscountResources
}

// GetDiscountResourcesOk returns a tuple with the DiscountResources field value
// and a boolean to check if the value has been set.
func (o *UpdateDiscountsPayload) GetDiscountResourcesOk() ([]DiscountResourcePayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscountResources, true
}

// SetDiscountResources sets field value
func (o *UpdateDiscountsPayload) SetDiscountResources(v []DiscountResourcePayload) {
	o.DiscountResources = v
}

// GetDiscountStatus returns the DiscountStatus field value
func (o *UpdateDiscountsPayload) GetDiscountStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiscountStatus
}

// GetDiscountStatusOk returns a tuple with the DiscountStatus field value
// and a boolean to check if the value has been set.
func (o *UpdateDiscountsPayload) GetDiscountStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountStatus, true
}

// SetDiscountStatus sets field value
func (o *UpdateDiscountsPayload) SetDiscountStatus(v string) {
	o.DiscountStatus = v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *UpdateDiscountsPayload) GetEndDate() CustomTime {
	if o == nil || IsNil(o.EndDate) {
		var ret CustomTime
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDiscountsPayload) GetEndDateOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *UpdateDiscountsPayload) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given CustomTime and assigns it to the EndDate field.
func (o *UpdateDiscountsPayload) SetEndDate(v CustomTime) {
	o.EndDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *UpdateDiscountsPayload) GetStartDate() CustomTime {
	if o == nil || IsNil(o.StartDate) {
		var ret CustomTime
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDiscountsPayload) GetStartDateOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *UpdateDiscountsPayload) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given CustomTime and assigns it to the StartDate field.
func (o *UpdateDiscountsPayload) SetStartDate(v CustomTime) {
	o.StartDate = &v
}

func (o UpdateDiscountsPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDiscountsPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["discount_resources"] = o.DiscountResources
	toSerialize["discount_status"] = o.DiscountStatus
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	return toSerialize, nil
}

func (o *UpdateDiscountsPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"discount_resources",
		"discount_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateDiscountsPayload := _UpdateDiscountsPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateDiscountsPayload)

	if err != nil {
		return err
	}

	*o = UpdateDiscountsPayload(varUpdateDiscountsPayload)

	return err
}

type NullableUpdateDiscountsPayload struct {
	value *UpdateDiscountsPayload
	isSet bool
}

func (v NullableUpdateDiscountsPayload) Get() *UpdateDiscountsPayload {
	return v.value
}

func (v *NullableUpdateDiscountsPayload) Set(val *UpdateDiscountsPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDiscountsPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDiscountsPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDiscountsPayload(val *UpdateDiscountsPayload) *NullableUpdateDiscountsPayload {
	return &NullableUpdateDiscountsPayload{value: val, isSet: true}
}

func (v NullableUpdateDiscountsPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDiscountsPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
