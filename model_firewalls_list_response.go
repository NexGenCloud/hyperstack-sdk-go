/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the FirewallsListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallsListResponse{}

// FirewallsListResponse struct for FirewallsListResponse
type FirewallsListResponse struct {
	Count     *int32                 `json:"count,omitempty"`
	Firewalls []FirewallDetailFields `json:"firewalls,omitempty"`
	Message   *string                `json:"message,omitempty"`
	Page      *int32                 `json:"page,omitempty"`
	PageSize  *int32                 `json:"page_size,omitempty"`
	Status    *bool                  `json:"status,omitempty"`
}

// NewFirewallsListResponse instantiates a new FirewallsListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallsListResponse() *FirewallsListResponse {
	this := FirewallsListResponse{}
	return &this
}

// NewFirewallsListResponseWithDefaults instantiates a new FirewallsListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallsListResponseWithDefaults() *FirewallsListResponse {
	this := FirewallsListResponse{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *FirewallsListResponse) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallsListResponse) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *FirewallsListResponse) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *FirewallsListResponse) SetCount(v int32) {
	o.Count = &v
}

// GetFirewalls returns the Firewalls field value if set, zero value otherwise.
func (o *FirewallsListResponse) GetFirewalls() []FirewallDetailFields {
	if o == nil || IsNil(o.Firewalls) {
		var ret []FirewallDetailFields
		return ret
	}
	return o.Firewalls
}

// GetFirewallsOk returns a tuple with the Firewalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallsListResponse) GetFirewallsOk() ([]FirewallDetailFields, bool) {
	if o == nil || IsNil(o.Firewalls) {
		return nil, false
	}
	return o.Firewalls, true
}

// HasFirewalls returns a boolean if a field has been set.
func (o *FirewallsListResponse) HasFirewalls() bool {
	if o != nil && !IsNil(o.Firewalls) {
		return true
	}

	return false
}

// SetFirewalls gets a reference to the given []FirewallDetailFields and assigns it to the Firewalls field.
func (o *FirewallsListResponse) SetFirewalls(v []FirewallDetailFields) {
	o.Firewalls = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *FirewallsListResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallsListResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *FirewallsListResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *FirewallsListResponse) SetMessage(v string) {
	o.Message = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *FirewallsListResponse) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallsListResponse) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *FirewallsListResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *FirewallsListResponse) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *FirewallsListResponse) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallsListResponse) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *FirewallsListResponse) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *FirewallsListResponse) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FirewallsListResponse) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallsListResponse) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FirewallsListResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *FirewallsListResponse) SetStatus(v bool) {
	o.Status = &v
}

func (o FirewallsListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallsListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Firewalls) {
		toSerialize["firewalls"] = o.Firewalls
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableFirewallsListResponse struct {
	value *FirewallsListResponse
	isSet bool
}

func (v NullableFirewallsListResponse) Get() *FirewallsListResponse {
	return v.value
}

func (v *NullableFirewallsListResponse) Set(val *FirewallsListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallsListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallsListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallsListResponse(val *FirewallsListResponse) *NullableFirewallsListResponse {
	return &NullableFirewallsListResponse{value: val, isSet: true}
}

func (v NullableFirewallsListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallsListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
