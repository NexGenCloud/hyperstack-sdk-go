/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the Attributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Attributes{}

// Attributes struct for Attributes
type Attributes struct {
	//
	BaseModel *string `json:"base_model,omitempty"`
	//
	BaseModelDisplayName *string `json:"base_model_display_name,omitempty"`
	//
	InfrahubId *int32 `json:"infrahub_id,omitempty"`
	//
	LoraAdapter *string `json:"lora_adapter,omitempty"`
	//
	ResourceName *string `json:"resource_name,omitempty"`
	//
	Status *string `json:"status,omitempty"`
}

// NewAttributes instantiates a new Attributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributes() *Attributes {
	this := Attributes{}
	return &this
}

// NewAttributesWithDefaults instantiates a new Attributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributesWithDefaults() *Attributes {
	this := Attributes{}
	return &this
}

// GetBaseModel returns the BaseModel field value if set, zero value otherwise.
func (o *Attributes) GetBaseModel() string {
	if o == nil || IsNil(o.BaseModel) {
		var ret string
		return ret
	}
	return *o.BaseModel
}

// GetBaseModelOk returns a tuple with the BaseModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attributes) GetBaseModelOk() (*string, bool) {
	if o == nil || IsNil(o.BaseModel) {
		return nil, false
	}
	return o.BaseModel, true
}

// HasBaseModel returns a boolean if a field has been set.
func (o *Attributes) HasBaseModel() bool {
	if o != nil && !IsNil(o.BaseModel) {
		return true
	}

	return false
}

// SetBaseModel gets a reference to the given string and assigns it to the BaseModel field.
func (o *Attributes) SetBaseModel(v string) {
	o.BaseModel = &v
}

// GetBaseModelDisplayName returns the BaseModelDisplayName field value if set, zero value otherwise.
func (o *Attributes) GetBaseModelDisplayName() string {
	if o == nil || IsNil(o.BaseModelDisplayName) {
		var ret string
		return ret
	}
	return *o.BaseModelDisplayName
}

// GetBaseModelDisplayNameOk returns a tuple with the BaseModelDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attributes) GetBaseModelDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.BaseModelDisplayName) {
		return nil, false
	}
	return o.BaseModelDisplayName, true
}

// HasBaseModelDisplayName returns a boolean if a field has been set.
func (o *Attributes) HasBaseModelDisplayName() bool {
	if o != nil && !IsNil(o.BaseModelDisplayName) {
		return true
	}

	return false
}

// SetBaseModelDisplayName gets a reference to the given string and assigns it to the BaseModelDisplayName field.
func (o *Attributes) SetBaseModelDisplayName(v string) {
	o.BaseModelDisplayName = &v
}

// GetInfrahubId returns the InfrahubId field value if set, zero value otherwise.
func (o *Attributes) GetInfrahubId() int32 {
	if o == nil || IsNil(o.InfrahubId) {
		var ret int32
		return ret
	}
	return *o.InfrahubId
}

// GetInfrahubIdOk returns a tuple with the InfrahubId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attributes) GetInfrahubIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InfrahubId) {
		return nil, false
	}
	return o.InfrahubId, true
}

// HasInfrahubId returns a boolean if a field has been set.
func (o *Attributes) HasInfrahubId() bool {
	if o != nil && !IsNil(o.InfrahubId) {
		return true
	}

	return false
}

// SetInfrahubId gets a reference to the given int32 and assigns it to the InfrahubId field.
func (o *Attributes) SetInfrahubId(v int32) {
	o.InfrahubId = &v
}

// GetLoraAdapter returns the LoraAdapter field value if set, zero value otherwise.
func (o *Attributes) GetLoraAdapter() string {
	if o == nil || IsNil(o.LoraAdapter) {
		var ret string
		return ret
	}
	return *o.LoraAdapter
}

// GetLoraAdapterOk returns a tuple with the LoraAdapter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attributes) GetLoraAdapterOk() (*string, bool) {
	if o == nil || IsNil(o.LoraAdapter) {
		return nil, false
	}
	return o.LoraAdapter, true
}

// HasLoraAdapter returns a boolean if a field has been set.
func (o *Attributes) HasLoraAdapter() bool {
	if o != nil && !IsNil(o.LoraAdapter) {
		return true
	}

	return false
}

// SetLoraAdapter gets a reference to the given string and assigns it to the LoraAdapter field.
func (o *Attributes) SetLoraAdapter(v string) {
	o.LoraAdapter = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *Attributes) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attributes) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *Attributes) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *Attributes) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Attributes) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attributes) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Attributes) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Attributes) SetStatus(v string) {
	o.Status = &v
}

func (o Attributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Attributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseModel) {
		toSerialize["base_model"] = o.BaseModel
	}
	if !IsNil(o.BaseModelDisplayName) {
		toSerialize["base_model_display_name"] = o.BaseModelDisplayName
	}
	if !IsNil(o.InfrahubId) {
		toSerialize["infrahub_id"] = o.InfrahubId
	}
	if !IsNil(o.LoraAdapter) {
		toSerialize["lora_adapter"] = o.LoraAdapter
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resource_name"] = o.ResourceName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableAttributes struct {
	value *Attributes
	isSet bool
}

func (v NullableAttributes) Get() *Attributes {
	return v.value
}

func (v *NullableAttributes) Set(val *Attributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributes(val *Attributes) *NullableAttributes {
	return &NullableAttributes{value: val, isSet: true}
}

func (v NullableAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
