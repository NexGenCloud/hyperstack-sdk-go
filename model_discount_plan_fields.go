/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the DiscountPlanFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscountPlanFields{}

// DiscountPlanFields struct for DiscountPlanFields
type DiscountPlanFields struct {
	DiscountAmount  *float32    `json:"discount_amount,omitempty"`
	DiscountCode    *string     `json:"discount_code,omitempty"`
	DiscountPercent *float32    `json:"discount_percent,omitempty"`
	DiscountStatus  *string     `json:"discount_status,omitempty"`
	DiscountType    *string     `json:"discount_type,omitempty"`
	EndDate         *CustomTime `json:"end_date,omitempty"`
	Id              *int32      `json:"id,omitempty"`
	Resource        *string     `json:"resource,omitempty"`
	StartDate       *CustomTime `json:"start_date,omitempty"`
	ValidityDays    *int32      `json:"validity_days,omitempty"`
	VmId            *int32      `json:"vm_id,omitempty"`
}

// NewDiscountPlanFields instantiates a new DiscountPlanFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscountPlanFields() *DiscountPlanFields {
	this := DiscountPlanFields{}
	return &this
}

// NewDiscountPlanFieldsWithDefaults instantiates a new DiscountPlanFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscountPlanFieldsWithDefaults() *DiscountPlanFields {
	this := DiscountPlanFields{}
	return &this
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetDiscountAmount() float32 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float32 and assigns it to the DiscountAmount field.
func (o *DiscountPlanFields) SetDiscountAmount(v float32) {
	o.DiscountAmount = &v
}

// GetDiscountCode returns the DiscountCode field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetDiscountCode() string {
	if o == nil || IsNil(o.DiscountCode) {
		var ret string
		return ret
	}
	return *o.DiscountCode
}

// GetDiscountCodeOk returns a tuple with the DiscountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetDiscountCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountCode) {
		return nil, false
	}
	return o.DiscountCode, true
}

// HasDiscountCode returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasDiscountCode() bool {
	if o != nil && !IsNil(o.DiscountCode) {
		return true
	}

	return false
}

// SetDiscountCode gets a reference to the given string and assigns it to the DiscountCode field.
func (o *DiscountPlanFields) SetDiscountCode(v string) {
	o.DiscountCode = &v
}

// GetDiscountPercent returns the DiscountPercent field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetDiscountPercent() float32 {
	if o == nil || IsNil(o.DiscountPercent) {
		var ret float32
		return ret
	}
	return *o.DiscountPercent
}

// GetDiscountPercentOk returns a tuple with the DiscountPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetDiscountPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountPercent) {
		return nil, false
	}
	return o.DiscountPercent, true
}

// HasDiscountPercent returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasDiscountPercent() bool {
	if o != nil && !IsNil(o.DiscountPercent) {
		return true
	}

	return false
}

// SetDiscountPercent gets a reference to the given float32 and assigns it to the DiscountPercent field.
func (o *DiscountPlanFields) SetDiscountPercent(v float32) {
	o.DiscountPercent = &v
}

// GetDiscountStatus returns the DiscountStatus field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetDiscountStatus() string {
	if o == nil || IsNil(o.DiscountStatus) {
		var ret string
		return ret
	}
	return *o.DiscountStatus
}

// GetDiscountStatusOk returns a tuple with the DiscountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetDiscountStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountStatus) {
		return nil, false
	}
	return o.DiscountStatus, true
}

// HasDiscountStatus returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasDiscountStatus() bool {
	if o != nil && !IsNil(o.DiscountStatus) {
		return true
	}

	return false
}

// SetDiscountStatus gets a reference to the given string and assigns it to the DiscountStatus field.
func (o *DiscountPlanFields) SetDiscountStatus(v string) {
	o.DiscountStatus = &v
}

// GetDiscountType returns the DiscountType field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetDiscountType() string {
	if o == nil || IsNil(o.DiscountType) {
		var ret string
		return ret
	}
	return *o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetDiscountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountType) {
		return nil, false
	}
	return o.DiscountType, true
}

// HasDiscountType returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasDiscountType() bool {
	if o != nil && !IsNil(o.DiscountType) {
		return true
	}

	return false
}

// SetDiscountType gets a reference to the given string and assigns it to the DiscountType field.
func (o *DiscountPlanFields) SetDiscountType(v string) {
	o.DiscountType = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetEndDate() CustomTime {
	if o == nil || IsNil(o.EndDate) {
		var ret CustomTime
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetEndDateOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given CustomTime and assigns it to the EndDate field.
func (o *DiscountPlanFields) SetEndDate(v CustomTime) {
	o.EndDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DiscountPlanFields) SetId(v int32) {
	o.Id = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *DiscountPlanFields) SetResource(v string) {
	o.Resource = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetStartDate() CustomTime {
	if o == nil || IsNil(o.StartDate) {
		var ret CustomTime
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetStartDateOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given CustomTime and assigns it to the StartDate field.
func (o *DiscountPlanFields) SetStartDate(v CustomTime) {
	o.StartDate = &v
}

// GetValidityDays returns the ValidityDays field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetValidityDays() int32 {
	if o == nil || IsNil(o.ValidityDays) {
		var ret int32
		return ret
	}
	return *o.ValidityDays
}

// GetValidityDaysOk returns a tuple with the ValidityDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetValidityDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.ValidityDays) {
		return nil, false
	}
	return o.ValidityDays, true
}

// HasValidityDays returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasValidityDays() bool {
	if o != nil && !IsNil(o.ValidityDays) {
		return true
	}

	return false
}

// SetValidityDays gets a reference to the given int32 and assigns it to the ValidityDays field.
func (o *DiscountPlanFields) SetValidityDays(v int32) {
	o.ValidityDays = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *DiscountPlanFields) GetVmId() int32 {
	if o == nil || IsNil(o.VmId) {
		var ret int32
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscountPlanFields) GetVmIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VmId) {
		return nil, false
	}
	return o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *DiscountPlanFields) HasVmId() bool {
	if o != nil && !IsNil(o.VmId) {
		return true
	}

	return false
}

// SetVmId gets a reference to the given int32 and assigns it to the VmId field.
func (o *DiscountPlanFields) SetVmId(v int32) {
	o.VmId = &v
}

func (o DiscountPlanFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscountPlanFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discount_amount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountCode) {
		toSerialize["discount_code"] = o.DiscountCode
	}
	if !IsNil(o.DiscountPercent) {
		toSerialize["discount_percent"] = o.DiscountPercent
	}
	if !IsNil(o.DiscountStatus) {
		toSerialize["discount_status"] = o.DiscountStatus
	}
	if !IsNil(o.DiscountType) {
		toSerialize["discount_type"] = o.DiscountType
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.ValidityDays) {
		toSerialize["validity_days"] = o.ValidityDays
	}
	if !IsNil(o.VmId) {
		toSerialize["vm_id"] = o.VmId
	}
	return toSerialize, nil
}

type NullableDiscountPlanFields struct {
	value *DiscountPlanFields
	isSet bool
}

func (v NullableDiscountPlanFields) Get() *DiscountPlanFields {
	return v.value
}

func (v *NullableDiscountPlanFields) Set(val *DiscountPlanFields) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscountPlanFields) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscountPlanFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscountPlanFields(val *DiscountPlanFields) *NullableDiscountPlanFields {
	return &NullableDiscountPlanFields{value: val, isSet: true}
}

func (v NullableDiscountPlanFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscountPlanFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
