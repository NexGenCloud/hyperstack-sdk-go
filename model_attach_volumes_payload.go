/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the AttachVolumesPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachVolumesPayload{}

// AttachVolumesPayload struct for AttachVolumesPayload
type AttachVolumesPayload struct {
	VolumeIds []int32 `json:"volume_ids,omitempty"`
}

// NewAttachVolumesPayload instantiates a new AttachVolumesPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachVolumesPayload() *AttachVolumesPayload {
	this := AttachVolumesPayload{}
	return &this
}

// NewAttachVolumesPayloadWithDefaults instantiates a new AttachVolumesPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachVolumesPayloadWithDefaults() *AttachVolumesPayload {
	this := AttachVolumesPayload{}
	return &this
}

// GetVolumeIds returns the VolumeIds field value if set, zero value otherwise.
func (o *AttachVolumesPayload) GetVolumeIds() []int32 {
	if o == nil || IsNil(o.VolumeIds) {
		var ret []int32
		return ret
	}
	return o.VolumeIds
}

// GetVolumeIdsOk returns a tuple with the VolumeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachVolumesPayload) GetVolumeIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.VolumeIds) {
		return nil, false
	}
	return o.VolumeIds, true
}

// HasVolumeIds returns a boolean if a field has been set.
func (o *AttachVolumesPayload) HasVolumeIds() bool {
	if o != nil && !IsNil(o.VolumeIds) {
		return true
	}

	return false
}

// SetVolumeIds gets a reference to the given []int32 and assigns it to the VolumeIds field.
func (o *AttachVolumesPayload) SetVolumeIds(v []int32) {
	o.VolumeIds = v
}

func (o AttachVolumesPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachVolumesPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VolumeIds) {
		toSerialize["volume_ids"] = o.VolumeIds
	}
	return toSerialize, nil
}

type NullableAttachVolumesPayload struct {
	value *AttachVolumesPayload
	isSet bool
}

func (v NullableAttachVolumesPayload) Get() *AttachVolumesPayload {
	return v.value
}

func (v *NullableAttachVolumesPayload) Set(val *AttachVolumesPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachVolumesPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachVolumesPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachVolumesPayload(val *AttachVolumesPayload) *NullableAttachVolumesPayload {
	return &NullableAttachVolumesPayload{value: val, isSet: true}
}

func (v NullableAttachVolumesPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachVolumesPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
