/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ContractEligibleInstanceFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractEligibleInstanceFields{}

// ContractEligibleInstanceFields struct for ContractEligibleInstanceFields
type ContractEligibleInstanceFields struct {
	ContractId  *int32  `json:"contract_id,omitempty"`
	Host        *string `json:"host,omitempty"`
	Id          *int32  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	OpenstackId *string `json:"openstack_id,omitempty"`
	PublicIp    *string `json:"public_ip,omitempty"`
	Status      *string `json:"status,omitempty"`
}

// NewContractEligibleInstanceFields instantiates a new ContractEligibleInstanceFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractEligibleInstanceFields() *ContractEligibleInstanceFields {
	this := ContractEligibleInstanceFields{}
	return &this
}

// NewContractEligibleInstanceFieldsWithDefaults instantiates a new ContractEligibleInstanceFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractEligibleInstanceFieldsWithDefaults() *ContractEligibleInstanceFields {
	this := ContractEligibleInstanceFields{}
	return &this
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *ContractEligibleInstanceFields) GetContractId() int32 {
	if o == nil || IsNil(o.ContractId) {
		var ret int32
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractEligibleInstanceFields) GetContractIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *ContractEligibleInstanceFields) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given int32 and assigns it to the ContractId field.
func (o *ContractEligibleInstanceFields) SetContractId(v int32) {
	o.ContractId = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *ContractEligibleInstanceFields) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractEligibleInstanceFields) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *ContractEligibleInstanceFields) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *ContractEligibleInstanceFields) SetHost(v string) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContractEligibleInstanceFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractEligibleInstanceFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContractEligibleInstanceFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ContractEligibleInstanceFields) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ContractEligibleInstanceFields) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractEligibleInstanceFields) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ContractEligibleInstanceFields) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ContractEligibleInstanceFields) SetName(v string) {
	o.Name = &v
}

// GetOpenstackId returns the OpenstackId field value if set, zero value otherwise.
func (o *ContractEligibleInstanceFields) GetOpenstackId() string {
	if o == nil || IsNil(o.OpenstackId) {
		var ret string
		return ret
	}
	return *o.OpenstackId
}

// GetOpenstackIdOk returns a tuple with the OpenstackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractEligibleInstanceFields) GetOpenstackIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenstackId) {
		return nil, false
	}
	return o.OpenstackId, true
}

// HasOpenstackId returns a boolean if a field has been set.
func (o *ContractEligibleInstanceFields) HasOpenstackId() bool {
	if o != nil && !IsNil(o.OpenstackId) {
		return true
	}

	return false
}

// SetOpenstackId gets a reference to the given string and assigns it to the OpenstackId field.
func (o *ContractEligibleInstanceFields) SetOpenstackId(v string) {
	o.OpenstackId = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *ContractEligibleInstanceFields) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractEligibleInstanceFields) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *ContractEligibleInstanceFields) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *ContractEligibleInstanceFields) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ContractEligibleInstanceFields) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractEligibleInstanceFields) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ContractEligibleInstanceFields) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ContractEligibleInstanceFields) SetStatus(v string) {
	o.Status = &v
}

func (o ContractEligibleInstanceFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractEligibleInstanceFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractId) {
		toSerialize["contract_id"] = o.ContractId
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OpenstackId) {
		toSerialize["openstack_id"] = o.OpenstackId
	}
	if !IsNil(o.PublicIp) {
		toSerialize["public_ip"] = o.PublicIp
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableContractEligibleInstanceFields struct {
	value *ContractEligibleInstanceFields
	isSet bool
}

func (v NullableContractEligibleInstanceFields) Get() *ContractEligibleInstanceFields {
	return v.value
}

func (v *NullableContractEligibleInstanceFields) Set(val *ContractEligibleInstanceFields) {
	v.value = val
	v.isSet = true
}

func (v NullableContractEligibleInstanceFields) IsSet() bool {
	return v.isSet
}

func (v *NullableContractEligibleInstanceFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractEligibleInstanceFields(val *ContractEligibleInstanceFields) *NullableContractEligibleInstanceFields {
	return &NullableContractEligibleInstanceFields{value: val, isSet: true}
}

func (v NullableContractEligibleInstanceFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractEligibleInstanceFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
