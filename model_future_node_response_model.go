/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the FutureNodeResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FutureNodeResponseModel{}

// FutureNodeResponseModel struct for FutureNodeResponseModel
type FutureNodeResponseModel struct {
	Nodes  []FutureNodeModel `json:"nodes,omitempty"`
	Region *string           `json:"region,omitempty"`
}

// NewFutureNodeResponseModel instantiates a new FutureNodeResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFutureNodeResponseModel() *FutureNodeResponseModel {
	this := FutureNodeResponseModel{}
	return &this
}

// NewFutureNodeResponseModelWithDefaults instantiates a new FutureNodeResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFutureNodeResponseModelWithDefaults() *FutureNodeResponseModel {
	this := FutureNodeResponseModel{}
	return &this
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *FutureNodeResponseModel) GetNodes() []FutureNodeModel {
	if o == nil || IsNil(o.Nodes) {
		var ret []FutureNodeModel
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FutureNodeResponseModel) GetNodesOk() ([]FutureNodeModel, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *FutureNodeResponseModel) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []FutureNodeModel and assigns it to the Nodes field.
func (o *FutureNodeResponseModel) SetNodes(v []FutureNodeModel) {
	o.Nodes = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *FutureNodeResponseModel) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FutureNodeResponseModel) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *FutureNodeResponseModel) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *FutureNodeResponseModel) SetRegion(v string) {
	o.Region = &v
}

func (o FutureNodeResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FutureNodeResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableFutureNodeResponseModel struct {
	value *FutureNodeResponseModel
	isSet bool
}

func (v NullableFutureNodeResponseModel) Get() *FutureNodeResponseModel {
	return v.value
}

func (v *NullableFutureNodeResponseModel) Set(val *FutureNodeResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFutureNodeResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFutureNodeResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFutureNodeResponseModel(val *FutureNodeResponseModel) *NullableFutureNodeResponseModel {
	return &NullableFutureNodeResponseModel{value: val, isSet: true}
}

func (v NullableFutureNodeResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFutureNodeResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
