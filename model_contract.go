/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the Contract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Contract{}

// Contract struct for Contract
type Contract struct {
	AllocatedGpuCountGraph []AllocatedGPUCountGraph `json:"allocated_gpu_count_graph,omitempty"`
	Granularity            *int32                   `json:"granularity,omitempty"`
	Id                     *string                  `json:"id,omitempty"`
	OrgId                  *int32                   `json:"org_id,omitempty"`
	Status                 *string                  `json:"status,omitempty"`
	TotalGpuAllocation     *int32                   `json:"total_gpu_allocation,omitempty"`
}

// NewContract instantiates a new Contract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContract() *Contract {
	this := Contract{}
	return &this
}

// NewContractWithDefaults instantiates a new Contract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractWithDefaults() *Contract {
	this := Contract{}
	return &this
}

// GetAllocatedGpuCountGraph returns the AllocatedGpuCountGraph field value if set, zero value otherwise.
func (o *Contract) GetAllocatedGpuCountGraph() []AllocatedGPUCountGraph {
	if o == nil || IsNil(o.AllocatedGpuCountGraph) {
		var ret []AllocatedGPUCountGraph
		return ret
	}
	return o.AllocatedGpuCountGraph
}

// GetAllocatedGpuCountGraphOk returns a tuple with the AllocatedGpuCountGraph field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetAllocatedGpuCountGraphOk() ([]AllocatedGPUCountGraph, bool) {
	if o == nil || IsNil(o.AllocatedGpuCountGraph) {
		return nil, false
	}
	return o.AllocatedGpuCountGraph, true
}

// HasAllocatedGpuCountGraph returns a boolean if a field has been set.
func (o *Contract) HasAllocatedGpuCountGraph() bool {
	if o != nil && !IsNil(o.AllocatedGpuCountGraph) {
		return true
	}

	return false
}

// SetAllocatedGpuCountGraph gets a reference to the given []AllocatedGPUCountGraph and assigns it to the AllocatedGpuCountGraph field.
func (o *Contract) SetAllocatedGpuCountGraph(v []AllocatedGPUCountGraph) {
	o.AllocatedGpuCountGraph = v
}

// GetGranularity returns the Granularity field value if set, zero value otherwise.
func (o *Contract) GetGranularity() int32 {
	if o == nil || IsNil(o.Granularity) {
		var ret int32
		return ret
	}
	return *o.Granularity
}

// GetGranularityOk returns a tuple with the Granularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetGranularityOk() (*int32, bool) {
	if o == nil || IsNil(o.Granularity) {
		return nil, false
	}
	return o.Granularity, true
}

// HasGranularity returns a boolean if a field has been set.
func (o *Contract) HasGranularity() bool {
	if o != nil && !IsNil(o.Granularity) {
		return true
	}

	return false
}

// SetGranularity gets a reference to the given int32 and assigns it to the Granularity field.
func (o *Contract) SetGranularity(v int32) {
	o.Granularity = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Contract) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Contract) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Contract) SetId(v string) {
	o.Id = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *Contract) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *Contract) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *Contract) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Contract) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Contract) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Contract) SetStatus(v string) {
	o.Status = &v
}

// GetTotalGpuAllocation returns the TotalGpuAllocation field value if set, zero value otherwise.
func (o *Contract) GetTotalGpuAllocation() int32 {
	if o == nil || IsNil(o.TotalGpuAllocation) {
		var ret int32
		return ret
	}
	return *o.TotalGpuAllocation
}

// GetTotalGpuAllocationOk returns a tuple with the TotalGpuAllocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contract) GetTotalGpuAllocationOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalGpuAllocation) {
		return nil, false
	}
	return o.TotalGpuAllocation, true
}

// HasTotalGpuAllocation returns a boolean if a field has been set.
func (o *Contract) HasTotalGpuAllocation() bool {
	if o != nil && !IsNil(o.TotalGpuAllocation) {
		return true
	}

	return false
}

// SetTotalGpuAllocation gets a reference to the given int32 and assigns it to the TotalGpuAllocation field.
func (o *Contract) SetTotalGpuAllocation(v int32) {
	o.TotalGpuAllocation = &v
}

func (o Contract) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Contract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllocatedGpuCountGraph) {
		toSerialize["allocated_gpu_count_graph"] = o.AllocatedGpuCountGraph
	}
	if !IsNil(o.Granularity) {
		toSerialize["granularity"] = o.Granularity
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TotalGpuAllocation) {
		toSerialize["total_gpu_allocation"] = o.TotalGpuAllocation
	}
	return toSerialize, nil
}

type NullableContract struct {
	value *Contract
	isSet bool
}

func (v NullableContract) Get() *Contract {
	return v.value
}

func (v *NullableContract) Set(val *Contract) {
	v.value = val
	v.isSet = true
}

func (v NullableContract) IsSet() bool {
	return v.isSet
}

func (v *NullableContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContract(val *Contract) *NullableContract {
	return &NullableContract{value: val, isSet: true}
}

func (v NullableContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
