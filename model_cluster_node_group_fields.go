/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ClusterNodeGroupFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterNodeGroupFields{}

// ClusterNodeGroupFields struct for ClusterNodeGroupFields
type ClusterNodeGroupFields struct {
	Count     *int32        `json:"count,omitempty"`
	CreatedAt *CustomTime   `json:"created_at,omitempty"`
	Flavor    *FlavorFields `json:"flavor,omitempty"`
	Id        *int32        `json:"id,omitempty"`
	Name      *string       `json:"name,omitempty"`
	Role      *string       `json:"role,omitempty"`
	UpdatedAt *CustomTime   `json:"updated_at,omitempty"`
}

// NewClusterNodeGroupFields instantiates a new ClusterNodeGroupFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterNodeGroupFields() *ClusterNodeGroupFields {
	this := ClusterNodeGroupFields{}
	return &this
}

// NewClusterNodeGroupFieldsWithDefaults instantiates a new ClusterNodeGroupFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterNodeGroupFieldsWithDefaults() *ClusterNodeGroupFields {
	this := ClusterNodeGroupFields{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ClusterNodeGroupFields) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeGroupFields) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ClusterNodeGroupFields) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ClusterNodeGroupFields) SetCount(v int32) {
	o.Count = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ClusterNodeGroupFields) GetCreatedAt() CustomTime {
	if o == nil || IsNil(o.CreatedAt) {
		var ret CustomTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeGroupFields) GetCreatedAtOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ClusterNodeGroupFields) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given CustomTime and assigns it to the CreatedAt field.
func (o *ClusterNodeGroupFields) SetCreatedAt(v CustomTime) {
	o.CreatedAt = &v
}

// GetFlavor returns the Flavor field value if set, zero value otherwise.
func (o *ClusterNodeGroupFields) GetFlavor() FlavorFields {
	if o == nil || IsNil(o.Flavor) {
		var ret FlavorFields
		return ret
	}
	return *o.Flavor
}

// GetFlavorOk returns a tuple with the Flavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeGroupFields) GetFlavorOk() (*FlavorFields, bool) {
	if o == nil || IsNil(o.Flavor) {
		return nil, false
	}
	return o.Flavor, true
}

// HasFlavor returns a boolean if a field has been set.
func (o *ClusterNodeGroupFields) HasFlavor() bool {
	if o != nil && !IsNil(o.Flavor) {
		return true
	}

	return false
}

// SetFlavor gets a reference to the given FlavorFields and assigns it to the Flavor field.
func (o *ClusterNodeGroupFields) SetFlavor(v FlavorFields) {
	o.Flavor = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterNodeGroupFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeGroupFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterNodeGroupFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ClusterNodeGroupFields) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterNodeGroupFields) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeGroupFields) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterNodeGroupFields) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterNodeGroupFields) SetName(v string) {
	o.Name = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ClusterNodeGroupFields) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeGroupFields) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ClusterNodeGroupFields) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ClusterNodeGroupFields) SetRole(v string) {
	o.Role = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ClusterNodeGroupFields) GetUpdatedAt() CustomTime {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret CustomTime
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeGroupFields) GetUpdatedAtOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ClusterNodeGroupFields) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given CustomTime and assigns it to the UpdatedAt field.
func (o *ClusterNodeGroupFields) SetUpdatedAt(v CustomTime) {
	o.UpdatedAt = &v
}

func (o ClusterNodeGroupFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterNodeGroupFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Flavor) {
		toSerialize["flavor"] = o.Flavor
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableClusterNodeGroupFields struct {
	value *ClusterNodeGroupFields
	isSet bool
}

func (v NullableClusterNodeGroupFields) Get() *ClusterNodeGroupFields {
	return v.value
}

func (v *NullableClusterNodeGroupFields) Set(val *ClusterNodeGroupFields) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterNodeGroupFields) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterNodeGroupFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterNodeGroupFields(val *ClusterNodeGroupFields) *NullableClusterNodeGroupFields {
	return &NullableClusterNodeGroupFields{value: val, isSet: true}
}

func (v NullableClusterNodeGroupFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterNodeGroupFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
