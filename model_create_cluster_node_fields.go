/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the CreateClusterNodeFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateClusterNodeFields{}

// CreateClusterNodeFields struct for CreateClusterNodeFields
type CreateClusterNodeFields struct {
	Count     *int32  `json:"count,omitempty"`
	NodeGroup *string `json:"node_group,omitempty"`
	Role      *string `json:"role,omitempty"`
}

// NewCreateClusterNodeFields instantiates a new CreateClusterNodeFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterNodeFields() *CreateClusterNodeFields {
	this := CreateClusterNodeFields{}
	return &this
}

// NewCreateClusterNodeFieldsWithDefaults instantiates a new CreateClusterNodeFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterNodeFieldsWithDefaults() *CreateClusterNodeFields {
	this := CreateClusterNodeFields{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *CreateClusterNodeFields) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterNodeFields) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *CreateClusterNodeFields) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *CreateClusterNodeFields) SetCount(v int32) {
	o.Count = &v
}

// GetNodeGroup returns the NodeGroup field value if set, zero value otherwise.
func (o *CreateClusterNodeFields) GetNodeGroup() string {
	if o == nil || IsNil(o.NodeGroup) {
		var ret string
		return ret
	}
	return *o.NodeGroup
}

// GetNodeGroupOk returns a tuple with the NodeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterNodeFields) GetNodeGroupOk() (*string, bool) {
	if o == nil || IsNil(o.NodeGroup) {
		return nil, false
	}
	return o.NodeGroup, true
}

// HasNodeGroup returns a boolean if a field has been set.
func (o *CreateClusterNodeFields) HasNodeGroup() bool {
	if o != nil && !IsNil(o.NodeGroup) {
		return true
	}

	return false
}

// SetNodeGroup gets a reference to the given string and assigns it to the NodeGroup field.
func (o *CreateClusterNodeFields) SetNodeGroup(v string) {
	o.NodeGroup = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *CreateClusterNodeFields) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterNodeFields) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *CreateClusterNodeFields) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *CreateClusterNodeFields) SetRole(v string) {
	o.Role = &v
}

func (o CreateClusterNodeFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateClusterNodeFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.NodeGroup) {
		toSerialize["node_group"] = o.NodeGroup
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableCreateClusterNodeFields struct {
	value *CreateClusterNodeFields
	isSet bool
}

func (v NullableCreateClusterNodeFields) Get() *CreateClusterNodeFields {
	return v.value
}

func (v *NullableCreateClusterNodeFields) Set(val *CreateClusterNodeFields) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClusterNodeFields) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClusterNodeFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClusterNodeFields(val *CreateClusterNodeFields) *NullableCreateClusterNodeFields {
	return &NullableCreateClusterNodeFields{value: val, isSet: true}
}

func (v NullableCreateClusterNodeFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClusterNodeFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
