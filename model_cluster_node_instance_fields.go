/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ClusterNodeInstanceFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterNodeInstanceFields{}

// ClusterNodeInstanceFields struct for ClusterNodeInstanceFields
type ClusterNodeInstanceFields struct {
	ContractId       *int32  `json:"contract_id,omitempty"`
	FixedIp          *string `json:"fixed_ip,omitempty"`
	FloatingIp       *string `json:"floating_ip,omitempty"`
	FloatingIpStatus *string `json:"floating_ip_status,omitempty"`
	Id               *int32  `json:"id,omitempty"`
	ImageId          *int32  `json:"image_id,omitempty"`
	Name             *string `json:"name,omitempty"`
	Status           *string `json:"status,omitempty"`
}

// NewClusterNodeInstanceFields instantiates a new ClusterNodeInstanceFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterNodeInstanceFields() *ClusterNodeInstanceFields {
	this := ClusterNodeInstanceFields{}
	return &this
}

// NewClusterNodeInstanceFieldsWithDefaults instantiates a new ClusterNodeInstanceFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterNodeInstanceFieldsWithDefaults() *ClusterNodeInstanceFields {
	this := ClusterNodeInstanceFields{}
	return &this
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *ClusterNodeInstanceFields) GetContractId() int32 {
	if o == nil || IsNil(o.ContractId) {
		var ret int32
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeInstanceFields) GetContractIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *ClusterNodeInstanceFields) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given int32 and assigns it to the ContractId field.
func (o *ClusterNodeInstanceFields) SetContractId(v int32) {
	o.ContractId = &v
}

// GetFixedIp returns the FixedIp field value if set, zero value otherwise.
func (o *ClusterNodeInstanceFields) GetFixedIp() string {
	if o == nil || IsNil(o.FixedIp) {
		var ret string
		return ret
	}
	return *o.FixedIp
}

// GetFixedIpOk returns a tuple with the FixedIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeInstanceFields) GetFixedIpOk() (*string, bool) {
	if o == nil || IsNil(o.FixedIp) {
		return nil, false
	}
	return o.FixedIp, true
}

// HasFixedIp returns a boolean if a field has been set.
func (o *ClusterNodeInstanceFields) HasFixedIp() bool {
	if o != nil && !IsNil(o.FixedIp) {
		return true
	}

	return false
}

// SetFixedIp gets a reference to the given string and assigns it to the FixedIp field.
func (o *ClusterNodeInstanceFields) SetFixedIp(v string) {
	o.FixedIp = &v
}

// GetFloatingIp returns the FloatingIp field value if set, zero value otherwise.
func (o *ClusterNodeInstanceFields) GetFloatingIp() string {
	if o == nil || IsNil(o.FloatingIp) {
		var ret string
		return ret
	}
	return *o.FloatingIp
}

// GetFloatingIpOk returns a tuple with the FloatingIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeInstanceFields) GetFloatingIpOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingIp) {
		return nil, false
	}
	return o.FloatingIp, true
}

// HasFloatingIp returns a boolean if a field has been set.
func (o *ClusterNodeInstanceFields) HasFloatingIp() bool {
	if o != nil && !IsNil(o.FloatingIp) {
		return true
	}

	return false
}

// SetFloatingIp gets a reference to the given string and assigns it to the FloatingIp field.
func (o *ClusterNodeInstanceFields) SetFloatingIp(v string) {
	o.FloatingIp = &v
}

// GetFloatingIpStatus returns the FloatingIpStatus field value if set, zero value otherwise.
func (o *ClusterNodeInstanceFields) GetFloatingIpStatus() string {
	if o == nil || IsNil(o.FloatingIpStatus) {
		var ret string
		return ret
	}
	return *o.FloatingIpStatus
}

// GetFloatingIpStatusOk returns a tuple with the FloatingIpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeInstanceFields) GetFloatingIpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingIpStatus) {
		return nil, false
	}
	return o.FloatingIpStatus, true
}

// HasFloatingIpStatus returns a boolean if a field has been set.
func (o *ClusterNodeInstanceFields) HasFloatingIpStatus() bool {
	if o != nil && !IsNil(o.FloatingIpStatus) {
		return true
	}

	return false
}

// SetFloatingIpStatus gets a reference to the given string and assigns it to the FloatingIpStatus field.
func (o *ClusterNodeInstanceFields) SetFloatingIpStatus(v string) {
	o.FloatingIpStatus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterNodeInstanceFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeInstanceFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterNodeInstanceFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ClusterNodeInstanceFields) SetId(v int32) {
	o.Id = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *ClusterNodeInstanceFields) GetImageId() int32 {
	if o == nil || IsNil(o.ImageId) {
		var ret int32
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeInstanceFields) GetImageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *ClusterNodeInstanceFields) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given int32 and assigns it to the ImageId field.
func (o *ClusterNodeInstanceFields) SetImageId(v int32) {
	o.ImageId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterNodeInstanceFields) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeInstanceFields) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterNodeInstanceFields) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterNodeInstanceFields) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterNodeInstanceFields) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterNodeInstanceFields) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterNodeInstanceFields) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ClusterNodeInstanceFields) SetStatus(v string) {
	o.Status = &v
}

func (o ClusterNodeInstanceFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterNodeInstanceFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractId) {
		toSerialize["contract_id"] = o.ContractId
	}
	if !IsNil(o.FixedIp) {
		toSerialize["fixed_ip"] = o.FixedIp
	}
	if !IsNil(o.FloatingIp) {
		toSerialize["floating_ip"] = o.FloatingIp
	}
	if !IsNil(o.FloatingIpStatus) {
		toSerialize["floating_ip_status"] = o.FloatingIpStatus
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ImageId) {
		toSerialize["image_id"] = o.ImageId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableClusterNodeInstanceFields struct {
	value *ClusterNodeInstanceFields
	isSet bool
}

func (v NullableClusterNodeInstanceFields) Get() *ClusterNodeInstanceFields {
	return v.value
}

func (v *NullableClusterNodeInstanceFields) Set(val *ClusterNodeInstanceFields) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterNodeInstanceFields) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterNodeInstanceFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterNodeInstanceFields(val *ClusterNodeInstanceFields) *NullableClusterNodeInstanceFields {
	return &NullableClusterNodeInstanceFields{value: val, isSet: true}
}

func (v NullableClusterNodeInstanceFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterNodeInstanceFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
