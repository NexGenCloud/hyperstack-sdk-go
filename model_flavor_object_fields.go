/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the FlavorObjectFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlavorObjectFields{}

// FlavorObjectFields struct for FlavorObjectFields
type FlavorObjectFields struct {
	Cpu      *int32   `json:"cpu,omitempty"`
	Disk     *int32   `json:"disk,omitempty"`
	Gpu      *string  `json:"gpu,omitempty"`
	GpuCount *int32   `json:"gpu_count,omitempty"`
	Ram      *float32 `json:"ram,omitempty"`
}

// NewFlavorObjectFields instantiates a new FlavorObjectFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlavorObjectFields() *FlavorObjectFields {
	this := FlavorObjectFields{}
	return &this
}

// NewFlavorObjectFieldsWithDefaults instantiates a new FlavorObjectFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlavorObjectFieldsWithDefaults() *FlavorObjectFields {
	this := FlavorObjectFields{}
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *FlavorObjectFields) GetCpu() int32 {
	if o == nil || IsNil(o.Cpu) {
		var ret int32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlavorObjectFields) GetCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *FlavorObjectFields) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given int32 and assigns it to the Cpu field.
func (o *FlavorObjectFields) SetCpu(v int32) {
	o.Cpu = &v
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *FlavorObjectFields) GetDisk() int32 {
	if o == nil || IsNil(o.Disk) {
		var ret int32
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlavorObjectFields) GetDiskOk() (*int32, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *FlavorObjectFields) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given int32 and assigns it to the Disk field.
func (o *FlavorObjectFields) SetDisk(v int32) {
	o.Disk = &v
}

// GetGpu returns the Gpu field value if set, zero value otherwise.
func (o *FlavorObjectFields) GetGpu() string {
	if o == nil || IsNil(o.Gpu) {
		var ret string
		return ret
	}
	return *o.Gpu
}

// GetGpuOk returns a tuple with the Gpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlavorObjectFields) GetGpuOk() (*string, bool) {
	if o == nil || IsNil(o.Gpu) {
		return nil, false
	}
	return o.Gpu, true
}

// HasGpu returns a boolean if a field has been set.
func (o *FlavorObjectFields) HasGpu() bool {
	if o != nil && !IsNil(o.Gpu) {
		return true
	}

	return false
}

// SetGpu gets a reference to the given string and assigns it to the Gpu field.
func (o *FlavorObjectFields) SetGpu(v string) {
	o.Gpu = &v
}

// GetGpuCount returns the GpuCount field value if set, zero value otherwise.
func (o *FlavorObjectFields) GetGpuCount() int32 {
	if o == nil || IsNil(o.GpuCount) {
		var ret int32
		return ret
	}
	return *o.GpuCount
}

// GetGpuCountOk returns a tuple with the GpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlavorObjectFields) GetGpuCountOk() (*int32, bool) {
	if o == nil || IsNil(o.GpuCount) {
		return nil, false
	}
	return o.GpuCount, true
}

// HasGpuCount returns a boolean if a field has been set.
func (o *FlavorObjectFields) HasGpuCount() bool {
	if o != nil && !IsNil(o.GpuCount) {
		return true
	}

	return false
}

// SetGpuCount gets a reference to the given int32 and assigns it to the GpuCount field.
func (o *FlavorObjectFields) SetGpuCount(v int32) {
	o.GpuCount = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *FlavorObjectFields) GetRam() float32 {
	if o == nil || IsNil(o.Ram) {
		var ret float32
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlavorObjectFields) GetRamOk() (*float32, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *FlavorObjectFields) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given float32 and assigns it to the Ram field.
func (o *FlavorObjectFields) SetRam(v float32) {
	o.Ram = &v
}

func (o FlavorObjectFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlavorObjectFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.Gpu) {
		toSerialize["gpu"] = o.Gpu
	}
	if !IsNil(o.GpuCount) {
		toSerialize["gpu_count"] = o.GpuCount
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	return toSerialize, nil
}

type NullableFlavorObjectFields struct {
	value *FlavorObjectFields
	isSet bool
}

func (v NullableFlavorObjectFields) Get() *FlavorObjectFields {
	return v.value
}

func (v *NullableFlavorObjectFields) Set(val *FlavorObjectFields) {
	v.value = val
	v.isSet = true
}

func (v NullableFlavorObjectFields) IsSet() bool {
	return v.isSet
}

func (v *NullableFlavorObjectFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlavorObjectFields(val *FlavorObjectFields) *NullableFlavorObjectFields {
	return &NullableFlavorObjectFields{value: val, isSet: true}
}

func (v NullableFlavorObjectFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlavorObjectFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
