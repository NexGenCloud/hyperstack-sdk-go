/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ImageLogos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageLogos{}

// ImageLogos struct for ImageLogos
type ImageLogos struct {
	Logos   []LogoGetResponse `json:"logos,omitempty"`
	Message *string           `json:"message,omitempty"`
	Status  *bool             `json:"status,omitempty"`
}

// NewImageLogos instantiates a new ImageLogos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageLogos() *ImageLogos {
	this := ImageLogos{}
	return &this
}

// NewImageLogosWithDefaults instantiates a new ImageLogos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageLogosWithDefaults() *ImageLogos {
	this := ImageLogos{}
	return &this
}

// GetLogos returns the Logos field value if set, zero value otherwise.
func (o *ImageLogos) GetLogos() []LogoGetResponse {
	if o == nil || IsNil(o.Logos) {
		var ret []LogoGetResponse
		return ret
	}
	return o.Logos
}

// GetLogosOk returns a tuple with the Logos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageLogos) GetLogosOk() ([]LogoGetResponse, bool) {
	if o == nil || IsNil(o.Logos) {
		return nil, false
	}
	return o.Logos, true
}

// HasLogos returns a boolean if a field has been set.
func (o *ImageLogos) HasLogos() bool {
	if o != nil && !IsNil(o.Logos) {
		return true
	}

	return false
}

// SetLogos gets a reference to the given []LogoGetResponse and assigns it to the Logos field.
func (o *ImageLogos) SetLogos(v []LogoGetResponse) {
	o.Logos = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ImageLogos) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageLogos) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ImageLogos) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ImageLogos) SetMessage(v string) {
	o.Message = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ImageLogos) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageLogos) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ImageLogos) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *ImageLogos) SetStatus(v bool) {
	o.Status = &v
}

func (o ImageLogos) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageLogos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Logos) {
		toSerialize["logos"] = o.Logos
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableImageLogos struct {
	value *ImageLogos
	isSet bool
}

func (v NullableImageLogos) Get() *ImageLogos {
	return v.value
}

func (v *NullableImageLogos) Set(val *ImageLogos) {
	v.value = val
	v.isSet = true
}

func (v NullableImageLogos) IsSet() bool {
	return v.isSet
}

func (v *NullableImageLogos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageLogos(val *ImageLogos) *NullableImageLogos {
	return &NullableImageLogos{value: val, isSet: true}
}

func (v NullableImageLogos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageLogos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
