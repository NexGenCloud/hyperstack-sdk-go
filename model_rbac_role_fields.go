/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the RbacRoleFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RbacRoleFields{}

// RbacRoleFields struct for RbacRoleFields
type RbacRoleFields struct {
	CreatedAt   *CustomTime            `json:"created_at,omitempty"`
	Description *string                `json:"description,omitempty"`
	Id          *int32                 `json:"id,omitempty"`
	Name        *string                `json:"name,omitempty"`
	Permissions []RolePermissionFields `json:"permissions,omitempty"`
	Policies    []RolePolicyFields     `json:"policies,omitempty"`
}

// NewRbacRoleFields instantiates a new RbacRoleFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRbacRoleFields() *RbacRoleFields {
	this := RbacRoleFields{}
	return &this
}

// NewRbacRoleFieldsWithDefaults instantiates a new RbacRoleFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRbacRoleFieldsWithDefaults() *RbacRoleFields {
	this := RbacRoleFields{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RbacRoleFields) GetCreatedAt() CustomTime {
	if o == nil || IsNil(o.CreatedAt) {
		var ret CustomTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RbacRoleFields) GetCreatedAtOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RbacRoleFields) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given CustomTime and assigns it to the CreatedAt field.
func (o *RbacRoleFields) SetCreatedAt(v CustomTime) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RbacRoleFields) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RbacRoleFields) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RbacRoleFields) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RbacRoleFields) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RbacRoleFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RbacRoleFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RbacRoleFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RbacRoleFields) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RbacRoleFields) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RbacRoleFields) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RbacRoleFields) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RbacRoleFields) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *RbacRoleFields) GetPermissions() []RolePermissionFields {
	if o == nil || IsNil(o.Permissions) {
		var ret []RolePermissionFields
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RbacRoleFields) GetPermissionsOk() ([]RolePermissionFields, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *RbacRoleFields) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []RolePermissionFields and assigns it to the Permissions field.
func (o *RbacRoleFields) SetPermissions(v []RolePermissionFields) {
	o.Permissions = v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *RbacRoleFields) GetPolicies() []RolePolicyFields {
	if o == nil || IsNil(o.Policies) {
		var ret []RolePolicyFields
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RbacRoleFields) GetPoliciesOk() ([]RolePolicyFields, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *RbacRoleFields) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []RolePolicyFields and assigns it to the Policies field.
func (o *RbacRoleFields) SetPolicies(v []RolePolicyFields) {
	o.Policies = v
}

func (o RbacRoleFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RbacRoleFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

type NullableRbacRoleFields struct {
	value *RbacRoleFields
	isSet bool
}

func (v NullableRbacRoleFields) Get() *RbacRoleFields {
	return v.value
}

func (v *NullableRbacRoleFields) Set(val *RbacRoleFields) {
	v.value = val
	v.isSet = true
}

func (v NullableRbacRoleFields) IsSet() bool {
	return v.isSet
}

func (v *NullableRbacRoleFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRbacRoleFields(val *RbacRoleFields) *NullableRbacRoleFields {
	return &NullableRbacRoleFields{value: val, isSet: true}
}

func (v NullableRbacRoleFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRbacRoleFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
