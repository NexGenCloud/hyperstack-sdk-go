/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the URIs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &URIs{}

// URIs struct for URIs
type URIs struct {
	ApiDoc      *string `json:"api_doc,omitempty"`
	ApiUri      *string `json:"api_uri,omitempty"`
	Auth        *string `json:"auth,omitempty"`
	Console     *string `json:"console,omitempty"`
	ContactUs   *string `json:"contact_us,omitempty"`
	Doc         *string `json:"doc,omitempty"`
	LandingPage *string `json:"landing_page,omitempty"`
}

// NewURIs instantiates a new URIs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewURIs() *URIs {
	this := URIs{}
	return &this
}

// NewURIsWithDefaults instantiates a new URIs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewURIsWithDefaults() *URIs {
	this := URIs{}
	return &this
}

// GetApiDoc returns the ApiDoc field value if set, zero value otherwise.
func (o *URIs) GetApiDoc() string {
	if o == nil || IsNil(o.ApiDoc) {
		var ret string
		return ret
	}
	return *o.ApiDoc
}

// GetApiDocOk returns a tuple with the ApiDoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URIs) GetApiDocOk() (*string, bool) {
	if o == nil || IsNil(o.ApiDoc) {
		return nil, false
	}
	return o.ApiDoc, true
}

// HasApiDoc returns a boolean if a field has been set.
func (o *URIs) HasApiDoc() bool {
	if o != nil && !IsNil(o.ApiDoc) {
		return true
	}

	return false
}

// SetApiDoc gets a reference to the given string and assigns it to the ApiDoc field.
func (o *URIs) SetApiDoc(v string) {
	o.ApiDoc = &v
}

// GetApiUri returns the ApiUri field value if set, zero value otherwise.
func (o *URIs) GetApiUri() string {
	if o == nil || IsNil(o.ApiUri) {
		var ret string
		return ret
	}
	return *o.ApiUri
}

// GetApiUriOk returns a tuple with the ApiUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URIs) GetApiUriOk() (*string, bool) {
	if o == nil || IsNil(o.ApiUri) {
		return nil, false
	}
	return o.ApiUri, true
}

// HasApiUri returns a boolean if a field has been set.
func (o *URIs) HasApiUri() bool {
	if o != nil && !IsNil(o.ApiUri) {
		return true
	}

	return false
}

// SetApiUri gets a reference to the given string and assigns it to the ApiUri field.
func (o *URIs) SetApiUri(v string) {
	o.ApiUri = &v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *URIs) GetAuth() string {
	if o == nil || IsNil(o.Auth) {
		var ret string
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URIs) GetAuthOk() (*string, bool) {
	if o == nil || IsNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *URIs) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given string and assigns it to the Auth field.
func (o *URIs) SetAuth(v string) {
	o.Auth = &v
}

// GetConsole returns the Console field value if set, zero value otherwise.
func (o *URIs) GetConsole() string {
	if o == nil || IsNil(o.Console) {
		var ret string
		return ret
	}
	return *o.Console
}

// GetConsoleOk returns a tuple with the Console field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URIs) GetConsoleOk() (*string, bool) {
	if o == nil || IsNil(o.Console) {
		return nil, false
	}
	return o.Console, true
}

// HasConsole returns a boolean if a field has been set.
func (o *URIs) HasConsole() bool {
	if o != nil && !IsNil(o.Console) {
		return true
	}

	return false
}

// SetConsole gets a reference to the given string and assigns it to the Console field.
func (o *URIs) SetConsole(v string) {
	o.Console = &v
}

// GetContactUs returns the ContactUs field value if set, zero value otherwise.
func (o *URIs) GetContactUs() string {
	if o == nil || IsNil(o.ContactUs) {
		var ret string
		return ret
	}
	return *o.ContactUs
}

// GetContactUsOk returns a tuple with the ContactUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URIs) GetContactUsOk() (*string, bool) {
	if o == nil || IsNil(o.ContactUs) {
		return nil, false
	}
	return o.ContactUs, true
}

// HasContactUs returns a boolean if a field has been set.
func (o *URIs) HasContactUs() bool {
	if o != nil && !IsNil(o.ContactUs) {
		return true
	}

	return false
}

// SetContactUs gets a reference to the given string and assigns it to the ContactUs field.
func (o *URIs) SetContactUs(v string) {
	o.ContactUs = &v
}

// GetDoc returns the Doc field value if set, zero value otherwise.
func (o *URIs) GetDoc() string {
	if o == nil || IsNil(o.Doc) {
		var ret string
		return ret
	}
	return *o.Doc
}

// GetDocOk returns a tuple with the Doc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URIs) GetDocOk() (*string, bool) {
	if o == nil || IsNil(o.Doc) {
		return nil, false
	}
	return o.Doc, true
}

// HasDoc returns a boolean if a field has been set.
func (o *URIs) HasDoc() bool {
	if o != nil && !IsNil(o.Doc) {
		return true
	}

	return false
}

// SetDoc gets a reference to the given string and assigns it to the Doc field.
func (o *URIs) SetDoc(v string) {
	o.Doc = &v
}

// GetLandingPage returns the LandingPage field value if set, zero value otherwise.
func (o *URIs) GetLandingPage() string {
	if o == nil || IsNil(o.LandingPage) {
		var ret string
		return ret
	}
	return *o.LandingPage
}

// GetLandingPageOk returns a tuple with the LandingPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *URIs) GetLandingPageOk() (*string, bool) {
	if o == nil || IsNil(o.LandingPage) {
		return nil, false
	}
	return o.LandingPage, true
}

// HasLandingPage returns a boolean if a field has been set.
func (o *URIs) HasLandingPage() bool {
	if o != nil && !IsNil(o.LandingPage) {
		return true
	}

	return false
}

// SetLandingPage gets a reference to the given string and assigns it to the LandingPage field.
func (o *URIs) SetLandingPage(v string) {
	o.LandingPage = &v
}

func (o URIs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o URIs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiDoc) {
		toSerialize["api_doc"] = o.ApiDoc
	}
	if !IsNil(o.ApiUri) {
		toSerialize["api_uri"] = o.ApiUri
	}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !IsNil(o.Console) {
		toSerialize["console"] = o.Console
	}
	if !IsNil(o.ContactUs) {
		toSerialize["contact_us"] = o.ContactUs
	}
	if !IsNil(o.Doc) {
		toSerialize["doc"] = o.Doc
	}
	if !IsNil(o.LandingPage) {
		toSerialize["landing_page"] = o.LandingPage
	}
	return toSerialize, nil
}

type NullableURIs struct {
	value *URIs
	isSet bool
}

func (v NullableURIs) Get() *URIs {
	return v.value
}

func (v *NullableURIs) Set(val *URIs) {
	v.value = val
	v.isSet = true
}

func (v NullableURIs) IsSet() bool {
	return v.isSet
}

func (v *NullableURIs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableURIs(val *URIs) *NullableURIs {
	return &NullableURIs{value: val, isSet: true}
}

func (v NullableURIs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableURIs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
