/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the PaymentDetailsFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentDetailsFields{}

// PaymentDetailsFields struct for PaymentDetailsFields
type PaymentDetailsFields struct {
	Amount          *float32    `json:"amount,omitempty"`
	CreatedAt       *CustomTime `json:"created_at,omitempty"`
	Currency        *string     `json:"currency,omitempty"`
	Description     *string     `json:"description,omitempty"`
	GatewayResponse *string     `json:"gateway_response,omitempty"`
	PaidFrom        *string     `json:"paid_from,omitempty"`
	PaymentId       *string     `json:"payment_id,omitempty"`
	Status          *string     `json:"status,omitempty"`
	TransactionId   *string     `json:"transaction_id,omitempty"`
	UpdatedAt       *CustomTime `json:"updated_at,omitempty"`
}

// NewPaymentDetailsFields instantiates a new PaymentDetailsFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentDetailsFields() *PaymentDetailsFields {
	this := PaymentDetailsFields{}
	return &this
}

// NewPaymentDetailsFieldsWithDefaults instantiates a new PaymentDetailsFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentDetailsFieldsWithDefaults() *PaymentDetailsFields {
	this := PaymentDetailsFields{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *PaymentDetailsFields) SetAmount(v float32) {
	o.Amount = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetCreatedAt() CustomTime {
	if o == nil || IsNil(o.CreatedAt) {
		var ret CustomTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetCreatedAtOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given CustomTime and assigns it to the CreatedAt field.
func (o *PaymentDetailsFields) SetCreatedAt(v CustomTime) {
	o.CreatedAt = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PaymentDetailsFields) SetCurrency(v string) {
	o.Currency = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PaymentDetailsFields) SetDescription(v string) {
	o.Description = &v
}

// GetGatewayResponse returns the GatewayResponse field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetGatewayResponse() string {
	if o == nil || IsNil(o.GatewayResponse) {
		var ret string
		return ret
	}
	return *o.GatewayResponse
}

// GetGatewayResponseOk returns a tuple with the GatewayResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetGatewayResponseOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayResponse) {
		return nil, false
	}
	return o.GatewayResponse, true
}

// HasGatewayResponse returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasGatewayResponse() bool {
	if o != nil && !IsNil(o.GatewayResponse) {
		return true
	}

	return false
}

// SetGatewayResponse gets a reference to the given string and assigns it to the GatewayResponse field.
func (o *PaymentDetailsFields) SetGatewayResponse(v string) {
	o.GatewayResponse = &v
}

// GetPaidFrom returns the PaidFrom field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetPaidFrom() string {
	if o == nil || IsNil(o.PaidFrom) {
		var ret string
		return ret
	}
	return *o.PaidFrom
}

// GetPaidFromOk returns a tuple with the PaidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetPaidFromOk() (*string, bool) {
	if o == nil || IsNil(o.PaidFrom) {
		return nil, false
	}
	return o.PaidFrom, true
}

// HasPaidFrom returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasPaidFrom() bool {
	if o != nil && !IsNil(o.PaidFrom) {
		return true
	}

	return false
}

// SetPaidFrom gets a reference to the given string and assigns it to the PaidFrom field.
func (o *PaymentDetailsFields) SetPaidFrom(v string) {
	o.PaidFrom = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *PaymentDetailsFields) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentDetailsFields) SetStatus(v string) {
	o.Status = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *PaymentDetailsFields) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PaymentDetailsFields) GetUpdatedAt() CustomTime {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret CustomTime
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsFields) GetUpdatedAtOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PaymentDetailsFields) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given CustomTime and assigns it to the UpdatedAt field.
func (o *PaymentDetailsFields) SetUpdatedAt(v CustomTime) {
	o.UpdatedAt = &v
}

func (o PaymentDetailsFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentDetailsFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GatewayResponse) {
		toSerialize["gateway_response"] = o.GatewayResponse
	}
	if !IsNil(o.PaidFrom) {
		toSerialize["paid_from"] = o.PaidFrom
	}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullablePaymentDetailsFields struct {
	value *PaymentDetailsFields
	isSet bool
}

func (v NullablePaymentDetailsFields) Get() *PaymentDetailsFields {
	return v.value
}

func (v *NullablePaymentDetailsFields) Set(val *PaymentDetailsFields) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentDetailsFields) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentDetailsFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentDetailsFields(val *PaymentDetailsFields) *NullablePaymentDetailsFields {
	return &NullablePaymentDetailsFields{value: val, isSet: true}
}

func (v NullablePaymentDetailsFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentDetailsFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
