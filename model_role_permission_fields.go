/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the RolePermissionFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RolePermissionFields{}

// RolePermissionFields struct for RolePermissionFields
type RolePermissionFields struct {
	Id         *int32  `json:"id,omitempty"`
	Permission *string `json:"permission,omitempty"`
	Resource   *string `json:"resource,omitempty"`
}

// NewRolePermissionFields instantiates a new RolePermissionFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolePermissionFields() *RolePermissionFields {
	this := RolePermissionFields{}
	return &this
}

// NewRolePermissionFieldsWithDefaults instantiates a new RolePermissionFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolePermissionFieldsWithDefaults() *RolePermissionFields {
	this := RolePermissionFields{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RolePermissionFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RolePermissionFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RolePermissionFields) SetId(v int32) {
	o.Id = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *RolePermissionFields) GetPermission() string {
	if o == nil || IsNil(o.Permission) {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionFields) GetPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *RolePermissionFields) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *RolePermissionFields) SetPermission(v string) {
	o.Permission = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *RolePermissionFields) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolePermissionFields) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *RolePermissionFields) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *RolePermissionFields) SetResource(v string) {
	o.Resource = &v
}

func (o RolePermissionFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RolePermissionFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	return toSerialize, nil
}

type NullableRolePermissionFields struct {
	value *RolePermissionFields
	isSet bool
}

func (v NullableRolePermissionFields) Get() *RolePermissionFields {
	return v.value
}

func (v *NullableRolePermissionFields) Set(val *RolePermissionFields) {
	v.value = val
	v.isSet = true
}

func (v NullableRolePermissionFields) IsSet() bool {
	return v.isSet
}

func (v *NullableRolePermissionFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolePermissionFields(val *RolePermissionFields) *NullableRolePermissionFields {
	return &NullableRolePermissionFields{value: val, isSet: true}
}

func (v NullableRolePermissionFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolePermissionFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
