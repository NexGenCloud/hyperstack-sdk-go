/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GenerateUpdateApiKeyPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateUpdateApiKeyPayload{}

// GenerateUpdateApiKeyPayload struct for GenerateUpdateApiKeyPayload
type GenerateUpdateApiKeyPayload struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

type _GenerateUpdateApiKeyPayload GenerateUpdateApiKeyPayload

// NewGenerateUpdateApiKeyPayload instantiates a new GenerateUpdateApiKeyPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateUpdateApiKeyPayload(name string) *GenerateUpdateApiKeyPayload {
	this := GenerateUpdateApiKeyPayload{}
	this.Name = name
	return &this
}

// NewGenerateUpdateApiKeyPayloadWithDefaults instantiates a new GenerateUpdateApiKeyPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateUpdateApiKeyPayloadWithDefaults() *GenerateUpdateApiKeyPayload {
	this := GenerateUpdateApiKeyPayload{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GenerateUpdateApiKeyPayload) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUpdateApiKeyPayload) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GenerateUpdateApiKeyPayload) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GenerateUpdateApiKeyPayload) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *GenerateUpdateApiKeyPayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GenerateUpdateApiKeyPayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GenerateUpdateApiKeyPayload) SetName(v string) {
	o.Name = v
}

func (o GenerateUpdateApiKeyPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateUpdateApiKeyPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *GenerateUpdateApiKeyPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenerateUpdateApiKeyPayload := _GenerateUpdateApiKeyPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenerateUpdateApiKeyPayload)

	if err != nil {
		return err
	}

	*o = GenerateUpdateApiKeyPayload(varGenerateUpdateApiKeyPayload)

	return err
}

type NullableGenerateUpdateApiKeyPayload struct {
	value *GenerateUpdateApiKeyPayload
	isSet bool
}

func (v NullableGenerateUpdateApiKeyPayload) Get() *GenerateUpdateApiKeyPayload {
	return v.value
}

func (v *NullableGenerateUpdateApiKeyPayload) Set(val *GenerateUpdateApiKeyPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateUpdateApiKeyPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateUpdateApiKeyPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateUpdateApiKeyPayload(val *GenerateUpdateApiKeyPayload) *NullableGenerateUpdateApiKeyPayload {
	return &NullableGenerateUpdateApiKeyPayload{value: val, isSet: true}
}

func (v NullableGenerateUpdateApiKeyPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateUpdateApiKeyPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
