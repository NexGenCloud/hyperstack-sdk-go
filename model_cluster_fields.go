/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ClusterFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterFields{}

// ClusterFields struct for ClusterFields
type ClusterFields struct {
	ApiAddress        *string               `json:"api_address,omitempty"`
	CreatedAt         *CustomTime           `json:"created_at,omitempty"`
	EnvironmentName   *string               `json:"environment_name,omitempty"`
	Id                *int32                `json:"id,omitempty"`
	KeypairName       *string               `json:"keypair_name,omitempty"`
	KubeConfig        *string               `json:"kube_config,omitempty"`
	KubernetesVersion *string               `json:"kubernetes_version,omitempty"`
	Name              *string               `json:"name,omitempty"`
	NodeCount         *int32                `json:"node_count,omitempty"`
	NodeFlavor        *InstanceFlavorFields `json:"node_flavor,omitempty"`
	Status            *string               `json:"status,omitempty"`
	StatusReason      *string               `json:"status_reason,omitempty"`
}

// NewClusterFields instantiates a new ClusterFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterFields() *ClusterFields {
	this := ClusterFields{}
	return &this
}

// NewClusterFieldsWithDefaults instantiates a new ClusterFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterFieldsWithDefaults() *ClusterFields {
	this := ClusterFields{}
	return &this
}

// GetApiAddress returns the ApiAddress field value if set, zero value otherwise.
func (o *ClusterFields) GetApiAddress() string {
	if o == nil || IsNil(o.ApiAddress) {
		var ret string
		return ret
	}
	return *o.ApiAddress
}

// GetApiAddressOk returns a tuple with the ApiAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetApiAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ApiAddress) {
		return nil, false
	}
	return o.ApiAddress, true
}

// HasApiAddress returns a boolean if a field has been set.
func (o *ClusterFields) HasApiAddress() bool {
	if o != nil && !IsNil(o.ApiAddress) {
		return true
	}

	return false
}

// SetApiAddress gets a reference to the given string and assigns it to the ApiAddress field.
func (o *ClusterFields) SetApiAddress(v string) {
	o.ApiAddress = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ClusterFields) GetCreatedAt() CustomTime {
	if o == nil || IsNil(o.CreatedAt) {
		var ret CustomTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetCreatedAtOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ClusterFields) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given CustomTime and assigns it to the CreatedAt field.
func (o *ClusterFields) SetCreatedAt(v CustomTime) {
	o.CreatedAt = &v
}

// GetEnvironmentName returns the EnvironmentName field value if set, zero value otherwise.
func (o *ClusterFields) GetEnvironmentName() string {
	if o == nil || IsNil(o.EnvironmentName) {
		var ret string
		return ret
	}
	return *o.EnvironmentName
}

// GetEnvironmentNameOk returns a tuple with the EnvironmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetEnvironmentNameOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentName) {
		return nil, false
	}
	return o.EnvironmentName, true
}

// HasEnvironmentName returns a boolean if a field has been set.
func (o *ClusterFields) HasEnvironmentName() bool {
	if o != nil && !IsNil(o.EnvironmentName) {
		return true
	}

	return false
}

// SetEnvironmentName gets a reference to the given string and assigns it to the EnvironmentName field.
func (o *ClusterFields) SetEnvironmentName(v string) {
	o.EnvironmentName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ClusterFields) SetId(v int32) {
	o.Id = &v
}

// GetKeypairName returns the KeypairName field value if set, zero value otherwise.
func (o *ClusterFields) GetKeypairName() string {
	if o == nil || IsNil(o.KeypairName) {
		var ret string
		return ret
	}
	return *o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetKeypairNameOk() (*string, bool) {
	if o == nil || IsNil(o.KeypairName) {
		return nil, false
	}
	return o.KeypairName, true
}

// HasKeypairName returns a boolean if a field has been set.
func (o *ClusterFields) HasKeypairName() bool {
	if o != nil && !IsNil(o.KeypairName) {
		return true
	}

	return false
}

// SetKeypairName gets a reference to the given string and assigns it to the KeypairName field.
func (o *ClusterFields) SetKeypairName(v string) {
	o.KeypairName = &v
}

// GetKubeConfig returns the KubeConfig field value if set, zero value otherwise.
func (o *ClusterFields) GetKubeConfig() string {
	if o == nil || IsNil(o.KubeConfig) {
		var ret string
		return ret
	}
	return *o.KubeConfig
}

// GetKubeConfigOk returns a tuple with the KubeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetKubeConfigOk() (*string, bool) {
	if o == nil || IsNil(o.KubeConfig) {
		return nil, false
	}
	return o.KubeConfig, true
}

// HasKubeConfig returns a boolean if a field has been set.
func (o *ClusterFields) HasKubeConfig() bool {
	if o != nil && !IsNil(o.KubeConfig) {
		return true
	}

	return false
}

// SetKubeConfig gets a reference to the given string and assigns it to the KubeConfig field.
func (o *ClusterFields) SetKubeConfig(v string) {
	o.KubeConfig = &v
}

// GetKubernetesVersion returns the KubernetesVersion field value if set, zero value otherwise.
func (o *ClusterFields) GetKubernetesVersion() string {
	if o == nil || IsNil(o.KubernetesVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetKubernetesVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesVersion) {
		return nil, false
	}
	return o.KubernetesVersion, true
}

// HasKubernetesVersion returns a boolean if a field has been set.
func (o *ClusterFields) HasKubernetesVersion() bool {
	if o != nil && !IsNil(o.KubernetesVersion) {
		return true
	}

	return false
}

// SetKubernetesVersion gets a reference to the given string and assigns it to the KubernetesVersion field.
func (o *ClusterFields) SetKubernetesVersion(v string) {
	o.KubernetesVersion = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterFields) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterFields) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterFields) SetName(v string) {
	o.Name = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise.
func (o *ClusterFields) GetNodeCount() int32 {
	if o == nil || IsNil(o.NodeCount) {
		var ret int32
		return ret
	}
	return *o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetNodeCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NodeCount) {
		return nil, false
	}
	return o.NodeCount, true
}

// HasNodeCount returns a boolean if a field has been set.
func (o *ClusterFields) HasNodeCount() bool {
	if o != nil && !IsNil(o.NodeCount) {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given int32 and assigns it to the NodeCount field.
func (o *ClusterFields) SetNodeCount(v int32) {
	o.NodeCount = &v
}

// GetNodeFlavor returns the NodeFlavor field value if set, zero value otherwise.
func (o *ClusterFields) GetNodeFlavor() InstanceFlavorFields {
	if o == nil || IsNil(o.NodeFlavor) {
		var ret InstanceFlavorFields
		return ret
	}
	return *o.NodeFlavor
}

// GetNodeFlavorOk returns a tuple with the NodeFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetNodeFlavorOk() (*InstanceFlavorFields, bool) {
	if o == nil || IsNil(o.NodeFlavor) {
		return nil, false
	}
	return o.NodeFlavor, true
}

// HasNodeFlavor returns a boolean if a field has been set.
func (o *ClusterFields) HasNodeFlavor() bool {
	if o != nil && !IsNil(o.NodeFlavor) {
		return true
	}

	return false
}

// SetNodeFlavor gets a reference to the given InstanceFlavorFields and assigns it to the NodeFlavor field.
func (o *ClusterFields) SetNodeFlavor(v InstanceFlavorFields) {
	o.NodeFlavor = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterFields) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterFields) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ClusterFields) SetStatus(v string) {
	o.Status = &v
}

// GetStatusReason returns the StatusReason field value if set, zero value otherwise.
func (o *ClusterFields) GetStatusReason() string {
	if o == nil || IsNil(o.StatusReason) {
		var ret string
		return ret
	}
	return *o.StatusReason
}

// GetStatusReasonOk returns a tuple with the StatusReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterFields) GetStatusReasonOk() (*string, bool) {
	if o == nil || IsNil(o.StatusReason) {
		return nil, false
	}
	return o.StatusReason, true
}

// HasStatusReason returns a boolean if a field has been set.
func (o *ClusterFields) HasStatusReason() bool {
	if o != nil && !IsNil(o.StatusReason) {
		return true
	}

	return false
}

// SetStatusReason gets a reference to the given string and assigns it to the StatusReason field.
func (o *ClusterFields) SetStatusReason(v string) {
	o.StatusReason = &v
}

func (o ClusterFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiAddress) {
		toSerialize["api_address"] = o.ApiAddress
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.EnvironmentName) {
		toSerialize["environment_name"] = o.EnvironmentName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.KeypairName) {
		toSerialize["keypair_name"] = o.KeypairName
	}
	if !IsNil(o.KubeConfig) {
		toSerialize["kube_config"] = o.KubeConfig
	}
	if !IsNil(o.KubernetesVersion) {
		toSerialize["kubernetes_version"] = o.KubernetesVersion
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NodeCount) {
		toSerialize["node_count"] = o.NodeCount
	}
	if !IsNil(o.NodeFlavor) {
		toSerialize["node_flavor"] = o.NodeFlavor
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusReason) {
		toSerialize["status_reason"] = o.StatusReason
	}
	return toSerialize, nil
}

type NullableClusterFields struct {
	value *ClusterFields
	isSet bool
}

func (v NullableClusterFields) Get() *ClusterFields {
	return v.value
}

func (v *NullableClusterFields) Set(val *ClusterFields) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterFields) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterFields(val *ClusterFields) *NullableClusterFields {
	return &NullableClusterFields{value: val, isSet: true}
}

func (v NullableClusterFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
