/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DiscountResourcePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscountResourcePayload{}

// DiscountResourcePayload struct for DiscountResourcePayload
type DiscountResourcePayload struct {
	DiscountAmount  float32 `json:"discount_amount"`
	DiscountPercent float32 `json:"discount_percent"`
	DiscountType    string  `json:"discount_type"`
	ResourceId      int32   `json:"resource_id"`
}

type _DiscountResourcePayload DiscountResourcePayload

// NewDiscountResourcePayload instantiates a new DiscountResourcePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscountResourcePayload(discountAmount float32, discountPercent float32, discountType string, resourceId int32) *DiscountResourcePayload {
	this := DiscountResourcePayload{}
	this.DiscountAmount = discountAmount
	this.DiscountPercent = discountPercent
	this.DiscountType = discountType
	this.ResourceId = resourceId
	return &this
}

// NewDiscountResourcePayloadWithDefaults instantiates a new DiscountResourcePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscountResourcePayloadWithDefaults() *DiscountResourcePayload {
	this := DiscountResourcePayload{}
	return &this
}

// GetDiscountAmount returns the DiscountAmount field value
func (o *DiscountResourcePayload) GetDiscountAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value
// and a boolean to check if the value has been set.
func (o *DiscountResourcePayload) GetDiscountAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountAmount, true
}

// SetDiscountAmount sets field value
func (o *DiscountResourcePayload) SetDiscountAmount(v float32) {
	o.DiscountAmount = v
}

// GetDiscountPercent returns the DiscountPercent field value
func (o *DiscountResourcePayload) GetDiscountPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DiscountPercent
}

// GetDiscountPercentOk returns a tuple with the DiscountPercent field value
// and a boolean to check if the value has been set.
func (o *DiscountResourcePayload) GetDiscountPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountPercent, true
}

// SetDiscountPercent sets field value
func (o *DiscountResourcePayload) SetDiscountPercent(v float32) {
	o.DiscountPercent = v
}

// GetDiscountType returns the DiscountType field value
func (o *DiscountResourcePayload) GetDiscountType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value
// and a boolean to check if the value has been set.
func (o *DiscountResourcePayload) GetDiscountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountType, true
}

// SetDiscountType sets field value
func (o *DiscountResourcePayload) SetDiscountType(v string) {
	o.DiscountType = v
}

// GetResourceId returns the ResourceId field value
func (o *DiscountResourcePayload) GetResourceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *DiscountResourcePayload) GetResourceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *DiscountResourcePayload) SetResourceId(v int32) {
	o.ResourceId = v
}

func (o DiscountResourcePayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscountResourcePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["discount_amount"] = o.DiscountAmount
	toSerialize["discount_percent"] = o.DiscountPercent
	toSerialize["discount_type"] = o.DiscountType
	toSerialize["resource_id"] = o.ResourceId
	return toSerialize, nil
}

func (o *DiscountResourcePayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"discount_amount",
		"discount_percent",
		"discount_type",
		"resource_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDiscountResourcePayload := _DiscountResourcePayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDiscountResourcePayload)

	if err != nil {
		return err
	}

	*o = DiscountResourcePayload(varDiscountResourcePayload)

	return err
}

type NullableDiscountResourcePayload struct {
	value *DiscountResourcePayload
	isSet bool
}

func (v NullableDiscountResourcePayload) Get() *DiscountResourcePayload {
	return v.value
}

func (v *NullableDiscountResourcePayload) Set(val *DiscountResourcePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscountResourcePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscountResourcePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscountResourcePayload(val *DiscountResourcePayload) *NullableDiscountResourcePayload {
	return &NullableDiscountResourcePayload{value: val, isSet: true}
}

func (v NullableDiscountResourcePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscountResourcePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
