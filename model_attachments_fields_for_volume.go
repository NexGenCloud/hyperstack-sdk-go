/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the AttachmentsFieldsForVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentsFieldsForVolume{}

// AttachmentsFieldsForVolume struct for AttachmentsFieldsForVolume
type AttachmentsFieldsForVolume struct {
	Device     *string `json:"device,omitempty"`
	Id         *int32  `json:"id,omitempty"`
	InstanceId *int32  `json:"instance_id,omitempty"`
	Protected  *bool   `json:"protected,omitempty"`
	Status     *string `json:"status,omitempty"`
}

// NewAttachmentsFieldsForVolume instantiates a new AttachmentsFieldsForVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentsFieldsForVolume() *AttachmentsFieldsForVolume {
	this := AttachmentsFieldsForVolume{}
	return &this
}

// NewAttachmentsFieldsForVolumeWithDefaults instantiates a new AttachmentsFieldsForVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentsFieldsForVolumeWithDefaults() *AttachmentsFieldsForVolume {
	this := AttachmentsFieldsForVolume{}
	return &this
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *AttachmentsFieldsForVolume) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentsFieldsForVolume) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *AttachmentsFieldsForVolume) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *AttachmentsFieldsForVolume) SetDevice(v string) {
	o.Device = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AttachmentsFieldsForVolume) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentsFieldsForVolume) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AttachmentsFieldsForVolume) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AttachmentsFieldsForVolume) SetId(v int32) {
	o.Id = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *AttachmentsFieldsForVolume) GetInstanceId() int32 {
	if o == nil || IsNil(o.InstanceId) {
		var ret int32
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentsFieldsForVolume) GetInstanceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *AttachmentsFieldsForVolume) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given int32 and assigns it to the InstanceId field.
func (o *AttachmentsFieldsForVolume) SetInstanceId(v int32) {
	o.InstanceId = &v
}

// GetProtected returns the Protected field value if set, zero value otherwise.
func (o *AttachmentsFieldsForVolume) GetProtected() bool {
	if o == nil || IsNil(o.Protected) {
		var ret bool
		return ret
	}
	return *o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentsFieldsForVolume) GetProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Protected) {
		return nil, false
	}
	return o.Protected, true
}

// HasProtected returns a boolean if a field has been set.
func (o *AttachmentsFieldsForVolume) HasProtected() bool {
	if o != nil && !IsNil(o.Protected) {
		return true
	}

	return false
}

// SetProtected gets a reference to the given bool and assigns it to the Protected field.
func (o *AttachmentsFieldsForVolume) SetProtected(v bool) {
	o.Protected = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AttachmentsFieldsForVolume) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachmentsFieldsForVolume) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AttachmentsFieldsForVolume) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AttachmentsFieldsForVolume) SetStatus(v string) {
	o.Status = &v
}

func (o AttachmentsFieldsForVolume) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentsFieldsForVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instance_id"] = o.InstanceId
	}
	if !IsNil(o.Protected) {
		toSerialize["protected"] = o.Protected
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableAttachmentsFieldsForVolume struct {
	value *AttachmentsFieldsForVolume
	isSet bool
}

func (v NullableAttachmentsFieldsForVolume) Get() *AttachmentsFieldsForVolume {
	return v.value
}

func (v *NullableAttachmentsFieldsForVolume) Set(val *AttachmentsFieldsForVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentsFieldsForVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentsFieldsForVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentsFieldsForVolume(val *AttachmentsFieldsForVolume) *NullableAttachmentsFieldsForVolume {
	return &NullableAttachmentsFieldsForVolume{value: val, isSet: true}
}

func (v NullableAttachmentsFieldsForVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentsFieldsForVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
