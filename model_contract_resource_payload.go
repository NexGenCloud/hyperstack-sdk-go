/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ContractResourcePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractResourcePayload{}

// ContractResourcePayload struct for ContractResourcePayload
type ContractResourcePayload struct {
	DiscountAmount  *float32 `json:"discount_amount,omitempty"`
	DiscountPercent *float32 `json:"discount_percent,omitempty"`
	DiscountType    string   `json:"discount_type"`
	ResourceCount   *int32   `json:"resource_count,omitempty"`
	ResourceId      int32    `json:"resource_id"`
}

type _ContractResourcePayload ContractResourcePayload

// NewContractResourcePayload instantiates a new ContractResourcePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractResourcePayload(discountType string, resourceId int32) *ContractResourcePayload {
	this := ContractResourcePayload{}
	this.DiscountType = discountType
	this.ResourceId = resourceId
	return &this
}

// NewContractResourcePayloadWithDefaults instantiates a new ContractResourcePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractResourcePayloadWithDefaults() *ContractResourcePayload {
	this := ContractResourcePayload{}
	return &this
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *ContractResourcePayload) GetDiscountAmount() float32 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractResourcePayload) GetDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *ContractResourcePayload) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float32 and assigns it to the DiscountAmount field.
func (o *ContractResourcePayload) SetDiscountAmount(v float32) {
	o.DiscountAmount = &v
}

// GetDiscountPercent returns the DiscountPercent field value if set, zero value otherwise.
func (o *ContractResourcePayload) GetDiscountPercent() float32 {
	if o == nil || IsNil(o.DiscountPercent) {
		var ret float32
		return ret
	}
	return *o.DiscountPercent
}

// GetDiscountPercentOk returns a tuple with the DiscountPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractResourcePayload) GetDiscountPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountPercent) {
		return nil, false
	}
	return o.DiscountPercent, true
}

// HasDiscountPercent returns a boolean if a field has been set.
func (o *ContractResourcePayload) HasDiscountPercent() bool {
	if o != nil && !IsNil(o.DiscountPercent) {
		return true
	}

	return false
}

// SetDiscountPercent gets a reference to the given float32 and assigns it to the DiscountPercent field.
func (o *ContractResourcePayload) SetDiscountPercent(v float32) {
	o.DiscountPercent = &v
}

// GetDiscountType returns the DiscountType field value
func (o *ContractResourcePayload) GetDiscountType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value
// and a boolean to check if the value has been set.
func (o *ContractResourcePayload) GetDiscountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountType, true
}

// SetDiscountType sets field value
func (o *ContractResourcePayload) SetDiscountType(v string) {
	o.DiscountType = v
}

// GetResourceCount returns the ResourceCount field value if set, zero value otherwise.
func (o *ContractResourcePayload) GetResourceCount() int32 {
	if o == nil || IsNil(o.ResourceCount) {
		var ret int32
		return ret
	}
	return *o.ResourceCount
}

// GetResourceCountOk returns a tuple with the ResourceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractResourcePayload) GetResourceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ResourceCount) {
		return nil, false
	}
	return o.ResourceCount, true
}

// HasResourceCount returns a boolean if a field has been set.
func (o *ContractResourcePayload) HasResourceCount() bool {
	if o != nil && !IsNil(o.ResourceCount) {
		return true
	}

	return false
}

// SetResourceCount gets a reference to the given int32 and assigns it to the ResourceCount field.
func (o *ContractResourcePayload) SetResourceCount(v int32) {
	o.ResourceCount = &v
}

// GetResourceId returns the ResourceId field value
func (o *ContractResourcePayload) GetResourceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *ContractResourcePayload) GetResourceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *ContractResourcePayload) SetResourceId(v int32) {
	o.ResourceId = v
}

func (o ContractResourcePayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractResourcePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discount_amount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountPercent) {
		toSerialize["discount_percent"] = o.DiscountPercent
	}
	toSerialize["discount_type"] = o.DiscountType
	if !IsNil(o.ResourceCount) {
		toSerialize["resource_count"] = o.ResourceCount
	}
	toSerialize["resource_id"] = o.ResourceId
	return toSerialize, nil
}

func (o *ContractResourcePayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"discount_type",
		"resource_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContractResourcePayload := _ContractResourcePayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContractResourcePayload)

	if err != nil {
		return err
	}

	*o = ContractResourcePayload(varContractResourcePayload)

	return err
}

type NullableContractResourcePayload struct {
	value *ContractResourcePayload
	isSet bool
}

func (v NullableContractResourcePayload) Get() *ContractResourcePayload {
	return v.value
}

func (v *NullableContractResourcePayload) Set(val *ContractResourcePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableContractResourcePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableContractResourcePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractResourcePayload(val *ContractResourcePayload) *NullableContractResourcePayload {
	return &NullableContractResourcePayload{value: val, isSet: true}
}

func (v NullableContractResourcePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractResourcePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
