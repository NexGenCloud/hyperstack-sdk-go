/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the WorkloadBillingHistoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadBillingHistoryResponse{}

// WorkloadBillingHistoryResponse struct for WorkloadBillingHistoryResponse
type WorkloadBillingHistoryResponse struct {
	BillingHistoryFineTuning *BillingHistoryFineTuning `json:"billing_history_fine_tuning,omitempty"`
	//
	Message *string `json:"message,omitempty"`
	//
	Success *bool `json:"success,omitempty"`
}

// NewWorkloadBillingHistoryResponse instantiates a new WorkloadBillingHistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadBillingHistoryResponse() *WorkloadBillingHistoryResponse {
	this := WorkloadBillingHistoryResponse{}
	return &this
}

// NewWorkloadBillingHistoryResponseWithDefaults instantiates a new WorkloadBillingHistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadBillingHistoryResponseWithDefaults() *WorkloadBillingHistoryResponse {
	this := WorkloadBillingHistoryResponse{}
	return &this
}

// GetBillingHistoryFineTuning returns the BillingHistoryFineTuning field value if set, zero value otherwise.
func (o *WorkloadBillingHistoryResponse) GetBillingHistoryFineTuning() BillingHistoryFineTuning {
	if o == nil || IsNil(o.BillingHistoryFineTuning) {
		var ret BillingHistoryFineTuning
		return ret
	}
	return *o.BillingHistoryFineTuning
}

// GetBillingHistoryFineTuningOk returns a tuple with the BillingHistoryFineTuning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadBillingHistoryResponse) GetBillingHistoryFineTuningOk() (*BillingHistoryFineTuning, bool) {
	if o == nil || IsNil(o.BillingHistoryFineTuning) {
		return nil, false
	}
	return o.BillingHistoryFineTuning, true
}

// HasBillingHistoryFineTuning returns a boolean if a field has been set.
func (o *WorkloadBillingHistoryResponse) HasBillingHistoryFineTuning() bool {
	if o != nil && !IsNil(o.BillingHistoryFineTuning) {
		return true
	}

	return false
}

// SetBillingHistoryFineTuning gets a reference to the given BillingHistoryFineTuning and assigns it to the BillingHistoryFineTuning field.
func (o *WorkloadBillingHistoryResponse) SetBillingHistoryFineTuning(v BillingHistoryFineTuning) {
	o.BillingHistoryFineTuning = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *WorkloadBillingHistoryResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadBillingHistoryResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *WorkloadBillingHistoryResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *WorkloadBillingHistoryResponse) SetMessage(v string) {
	o.Message = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *WorkloadBillingHistoryResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadBillingHistoryResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *WorkloadBillingHistoryResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *WorkloadBillingHistoryResponse) SetSuccess(v bool) {
	o.Success = &v
}

func (o WorkloadBillingHistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadBillingHistoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingHistoryFineTuning) {
		toSerialize["billing_history_fine_tuning"] = o.BillingHistoryFineTuning
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableWorkloadBillingHistoryResponse struct {
	value *WorkloadBillingHistoryResponse
	isSet bool
}

func (v NullableWorkloadBillingHistoryResponse) Get() *WorkloadBillingHistoryResponse {
	return v.value
}

func (v *NullableWorkloadBillingHistoryResponse) Set(val *WorkloadBillingHistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadBillingHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadBillingHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadBillingHistoryResponse(val *WorkloadBillingHistoryResponse) *NullableWorkloadBillingHistoryResponse {
	return &NullableWorkloadBillingHistoryResponse{value: val, isSet: true}
}

func (v NullableWorkloadBillingHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadBillingHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
