/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the InsertDiscountPlanFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InsertDiscountPlanFields{}

// InsertDiscountPlanFields struct for InsertDiscountPlanFields
type InsertDiscountPlanFields struct {
	Customers         []CustomerFields         `json:"customers,omitempty"`
	DiscountResources []DiscountResourceFields `json:"discount_resources,omitempty"`
	DiscountStatus    *string                  `json:"discount_status,omitempty"`
	EndDate           *CustomTime              `json:"end_date,omitempty"`
	StartDate         *CustomTime              `json:"start_date,omitempty"`
}

// NewInsertDiscountPlanFields instantiates a new InsertDiscountPlanFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsertDiscountPlanFields() *InsertDiscountPlanFields {
	this := InsertDiscountPlanFields{}
	return &this
}

// NewInsertDiscountPlanFieldsWithDefaults instantiates a new InsertDiscountPlanFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsertDiscountPlanFieldsWithDefaults() *InsertDiscountPlanFields {
	this := InsertDiscountPlanFields{}
	return &this
}

// GetCustomers returns the Customers field value if set, zero value otherwise.
func (o *InsertDiscountPlanFields) GetCustomers() []CustomerFields {
	if o == nil || IsNil(o.Customers) {
		var ret []CustomerFields
		return ret
	}
	return o.Customers
}

// GetCustomersOk returns a tuple with the Customers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertDiscountPlanFields) GetCustomersOk() ([]CustomerFields, bool) {
	if o == nil || IsNil(o.Customers) {
		return nil, false
	}
	return o.Customers, true
}

// HasCustomers returns a boolean if a field has been set.
func (o *InsertDiscountPlanFields) HasCustomers() bool {
	if o != nil && !IsNil(o.Customers) {
		return true
	}

	return false
}

// SetCustomers gets a reference to the given []CustomerFields and assigns it to the Customers field.
func (o *InsertDiscountPlanFields) SetCustomers(v []CustomerFields) {
	o.Customers = v
}

// GetDiscountResources returns the DiscountResources field value if set, zero value otherwise.
func (o *InsertDiscountPlanFields) GetDiscountResources() []DiscountResourceFields {
	if o == nil || IsNil(o.DiscountResources) {
		var ret []DiscountResourceFields
		return ret
	}
	return o.DiscountResources
}

// GetDiscountResourcesOk returns a tuple with the DiscountResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertDiscountPlanFields) GetDiscountResourcesOk() ([]DiscountResourceFields, bool) {
	if o == nil || IsNil(o.DiscountResources) {
		return nil, false
	}
	return o.DiscountResources, true
}

// HasDiscountResources returns a boolean if a field has been set.
func (o *InsertDiscountPlanFields) HasDiscountResources() bool {
	if o != nil && !IsNil(o.DiscountResources) {
		return true
	}

	return false
}

// SetDiscountResources gets a reference to the given []DiscountResourceFields and assigns it to the DiscountResources field.
func (o *InsertDiscountPlanFields) SetDiscountResources(v []DiscountResourceFields) {
	o.DiscountResources = v
}

// GetDiscountStatus returns the DiscountStatus field value if set, zero value otherwise.
func (o *InsertDiscountPlanFields) GetDiscountStatus() string {
	if o == nil || IsNil(o.DiscountStatus) {
		var ret string
		return ret
	}
	return *o.DiscountStatus
}

// GetDiscountStatusOk returns a tuple with the DiscountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertDiscountPlanFields) GetDiscountStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountStatus) {
		return nil, false
	}
	return o.DiscountStatus, true
}

// HasDiscountStatus returns a boolean if a field has been set.
func (o *InsertDiscountPlanFields) HasDiscountStatus() bool {
	if o != nil && !IsNil(o.DiscountStatus) {
		return true
	}

	return false
}

// SetDiscountStatus gets a reference to the given string and assigns it to the DiscountStatus field.
func (o *InsertDiscountPlanFields) SetDiscountStatus(v string) {
	o.DiscountStatus = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *InsertDiscountPlanFields) GetEndDate() CustomTime {
	if o == nil || IsNil(o.EndDate) {
		var ret CustomTime
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertDiscountPlanFields) GetEndDateOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *InsertDiscountPlanFields) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given CustomTime and assigns it to the EndDate field.
func (o *InsertDiscountPlanFields) SetEndDate(v CustomTime) {
	o.EndDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *InsertDiscountPlanFields) GetStartDate() CustomTime {
	if o == nil || IsNil(o.StartDate) {
		var ret CustomTime
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertDiscountPlanFields) GetStartDateOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *InsertDiscountPlanFields) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given CustomTime and assigns it to the StartDate field.
func (o *InsertDiscountPlanFields) SetStartDate(v CustomTime) {
	o.StartDate = &v
}

func (o InsertDiscountPlanFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InsertDiscountPlanFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Customers) {
		toSerialize["customers"] = o.Customers
	}
	if !IsNil(o.DiscountResources) {
		toSerialize["discount_resources"] = o.DiscountResources
	}
	if !IsNil(o.DiscountStatus) {
		toSerialize["discount_status"] = o.DiscountStatus
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	return toSerialize, nil
}

type NullableInsertDiscountPlanFields struct {
	value *InsertDiscountPlanFields
	isSet bool
}

func (v NullableInsertDiscountPlanFields) Get() *InsertDiscountPlanFields {
	return v.value
}

func (v *NullableInsertDiscountPlanFields) Set(val *InsertDiscountPlanFields) {
	v.value = val
	v.isSet = true
}

func (v NullableInsertDiscountPlanFields) IsSet() bool {
	return v.isSet
}

func (v *NullableInsertDiscountPlanFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsertDiscountPlanFields(val *InsertDiscountPlanFields) *NullableInsertDiscountPlanFields {
	return &NullableInsertDiscountPlanFields{value: val, isSet: true}
}

func (v NullableInsertDiscountPlanFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsertDiscountPlanFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
