/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ResourceLevelBillingDetailsMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceLevelBillingDetailsMetrics{}

// ResourceLevelBillingDetailsMetrics struct for ResourceLevelBillingDetailsMetrics
type ResourceLevelBillingDetailsMetrics struct {
	IncurredBill              *float32 `json:"incurred_bill,omitempty"`
	NonDiscountedBill         *float32 `json:"non_discounted_bill,omitempty"`
	NonDiscountedPricePerHour *float32 `json:"non_discounted_price_per_hour,omitempty"`
	PricePerHour              *float32 `json:"price_per_hour,omitempty"`
	UsageTime                 *float32 `json:"usage_time,omitempty"`
	UsageTimeACTIVE           *float32 `json:"usage_time_ACTIVE,omitempty"`
	UsageTimeHIBERNATED       *float32 `json:"usage_time_HIBERNATED,omitempty"`
	UsageTimeSHUTOFF          *float32 `json:"usage_time_SHUTOFF,omitempty"`
}

// NewResourceLevelBillingDetailsMetrics instantiates a new ResourceLevelBillingDetailsMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceLevelBillingDetailsMetrics() *ResourceLevelBillingDetailsMetrics {
	this := ResourceLevelBillingDetailsMetrics{}
	return &this
}

// NewResourceLevelBillingDetailsMetricsWithDefaults instantiates a new ResourceLevelBillingDetailsMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceLevelBillingDetailsMetricsWithDefaults() *ResourceLevelBillingDetailsMetrics {
	this := ResourceLevelBillingDetailsMetrics{}
	return &this
}

// GetIncurredBill returns the IncurredBill field value if set, zero value otherwise.
func (o *ResourceLevelBillingDetailsMetrics) GetIncurredBill() float32 {
	if o == nil || IsNil(o.IncurredBill) {
		var ret float32
		return ret
	}
	return *o.IncurredBill
}

// GetIncurredBillOk returns a tuple with the IncurredBill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelBillingDetailsMetrics) GetIncurredBillOk() (*float32, bool) {
	if o == nil || IsNil(o.IncurredBill) {
		return nil, false
	}
	return o.IncurredBill, true
}

// HasIncurredBill returns a boolean if a field has been set.
func (o *ResourceLevelBillingDetailsMetrics) HasIncurredBill() bool {
	if o != nil && !IsNil(o.IncurredBill) {
		return true
	}

	return false
}

// SetIncurredBill gets a reference to the given float32 and assigns it to the IncurredBill field.
func (o *ResourceLevelBillingDetailsMetrics) SetIncurredBill(v float32) {
	o.IncurredBill = &v
}

// GetNonDiscountedBill returns the NonDiscountedBill field value if set, zero value otherwise.
func (o *ResourceLevelBillingDetailsMetrics) GetNonDiscountedBill() float32 {
	if o == nil || IsNil(o.NonDiscountedBill) {
		var ret float32
		return ret
	}
	return *o.NonDiscountedBill
}

// GetNonDiscountedBillOk returns a tuple with the NonDiscountedBill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelBillingDetailsMetrics) GetNonDiscountedBillOk() (*float32, bool) {
	if o == nil || IsNil(o.NonDiscountedBill) {
		return nil, false
	}
	return o.NonDiscountedBill, true
}

// HasNonDiscountedBill returns a boolean if a field has been set.
func (o *ResourceLevelBillingDetailsMetrics) HasNonDiscountedBill() bool {
	if o != nil && !IsNil(o.NonDiscountedBill) {
		return true
	}

	return false
}

// SetNonDiscountedBill gets a reference to the given float32 and assigns it to the NonDiscountedBill field.
func (o *ResourceLevelBillingDetailsMetrics) SetNonDiscountedBill(v float32) {
	o.NonDiscountedBill = &v
}

// GetNonDiscountedPricePerHour returns the NonDiscountedPricePerHour field value if set, zero value otherwise.
func (o *ResourceLevelBillingDetailsMetrics) GetNonDiscountedPricePerHour() float32 {
	if o == nil || IsNil(o.NonDiscountedPricePerHour) {
		var ret float32
		return ret
	}
	return *o.NonDiscountedPricePerHour
}

// GetNonDiscountedPricePerHourOk returns a tuple with the NonDiscountedPricePerHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelBillingDetailsMetrics) GetNonDiscountedPricePerHourOk() (*float32, bool) {
	if o == nil || IsNil(o.NonDiscountedPricePerHour) {
		return nil, false
	}
	return o.NonDiscountedPricePerHour, true
}

// HasNonDiscountedPricePerHour returns a boolean if a field has been set.
func (o *ResourceLevelBillingDetailsMetrics) HasNonDiscountedPricePerHour() bool {
	if o != nil && !IsNil(o.NonDiscountedPricePerHour) {
		return true
	}

	return false
}

// SetNonDiscountedPricePerHour gets a reference to the given float32 and assigns it to the NonDiscountedPricePerHour field.
func (o *ResourceLevelBillingDetailsMetrics) SetNonDiscountedPricePerHour(v float32) {
	o.NonDiscountedPricePerHour = &v
}

// GetPricePerHour returns the PricePerHour field value if set, zero value otherwise.
func (o *ResourceLevelBillingDetailsMetrics) GetPricePerHour() float32 {
	if o == nil || IsNil(o.PricePerHour) {
		var ret float32
		return ret
	}
	return *o.PricePerHour
}

// GetPricePerHourOk returns a tuple with the PricePerHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelBillingDetailsMetrics) GetPricePerHourOk() (*float32, bool) {
	if o == nil || IsNil(o.PricePerHour) {
		return nil, false
	}
	return o.PricePerHour, true
}

// HasPricePerHour returns a boolean if a field has been set.
func (o *ResourceLevelBillingDetailsMetrics) HasPricePerHour() bool {
	if o != nil && !IsNil(o.PricePerHour) {
		return true
	}

	return false
}

// SetPricePerHour gets a reference to the given float32 and assigns it to the PricePerHour field.
func (o *ResourceLevelBillingDetailsMetrics) SetPricePerHour(v float32) {
	o.PricePerHour = &v
}

// GetUsageTime returns the UsageTime field value if set, zero value otherwise.
func (o *ResourceLevelBillingDetailsMetrics) GetUsageTime() float32 {
	if o == nil || IsNil(o.UsageTime) {
		var ret float32
		return ret
	}
	return *o.UsageTime
}

// GetUsageTimeOk returns a tuple with the UsageTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelBillingDetailsMetrics) GetUsageTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.UsageTime) {
		return nil, false
	}
	return o.UsageTime, true
}

// HasUsageTime returns a boolean if a field has been set.
func (o *ResourceLevelBillingDetailsMetrics) HasUsageTime() bool {
	if o != nil && !IsNil(o.UsageTime) {
		return true
	}

	return false
}

// SetUsageTime gets a reference to the given float32 and assigns it to the UsageTime field.
func (o *ResourceLevelBillingDetailsMetrics) SetUsageTime(v float32) {
	o.UsageTime = &v
}

// GetUsageTimeACTIVE returns the UsageTimeACTIVE field value if set, zero value otherwise.
func (o *ResourceLevelBillingDetailsMetrics) GetUsageTimeACTIVE() float32 {
	if o == nil || IsNil(o.UsageTimeACTIVE) {
		var ret float32
		return ret
	}
	return *o.UsageTimeACTIVE
}

// GetUsageTimeACTIVEOk returns a tuple with the UsageTimeACTIVE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelBillingDetailsMetrics) GetUsageTimeACTIVEOk() (*float32, bool) {
	if o == nil || IsNil(o.UsageTimeACTIVE) {
		return nil, false
	}
	return o.UsageTimeACTIVE, true
}

// HasUsageTimeACTIVE returns a boolean if a field has been set.
func (o *ResourceLevelBillingDetailsMetrics) HasUsageTimeACTIVE() bool {
	if o != nil && !IsNil(o.UsageTimeACTIVE) {
		return true
	}

	return false
}

// SetUsageTimeACTIVE gets a reference to the given float32 and assigns it to the UsageTimeACTIVE field.
func (o *ResourceLevelBillingDetailsMetrics) SetUsageTimeACTIVE(v float32) {
	o.UsageTimeACTIVE = &v
}

// GetUsageTimeHIBERNATED returns the UsageTimeHIBERNATED field value if set, zero value otherwise.
func (o *ResourceLevelBillingDetailsMetrics) GetUsageTimeHIBERNATED() float32 {
	if o == nil || IsNil(o.UsageTimeHIBERNATED) {
		var ret float32
		return ret
	}
	return *o.UsageTimeHIBERNATED
}

// GetUsageTimeHIBERNATEDOk returns a tuple with the UsageTimeHIBERNATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelBillingDetailsMetrics) GetUsageTimeHIBERNATEDOk() (*float32, bool) {
	if o == nil || IsNil(o.UsageTimeHIBERNATED) {
		return nil, false
	}
	return o.UsageTimeHIBERNATED, true
}

// HasUsageTimeHIBERNATED returns a boolean if a field has been set.
func (o *ResourceLevelBillingDetailsMetrics) HasUsageTimeHIBERNATED() bool {
	if o != nil && !IsNil(o.UsageTimeHIBERNATED) {
		return true
	}

	return false
}

// SetUsageTimeHIBERNATED gets a reference to the given float32 and assigns it to the UsageTimeHIBERNATED field.
func (o *ResourceLevelBillingDetailsMetrics) SetUsageTimeHIBERNATED(v float32) {
	o.UsageTimeHIBERNATED = &v
}

// GetUsageTimeSHUTOFF returns the UsageTimeSHUTOFF field value if set, zero value otherwise.
func (o *ResourceLevelBillingDetailsMetrics) GetUsageTimeSHUTOFF() float32 {
	if o == nil || IsNil(o.UsageTimeSHUTOFF) {
		var ret float32
		return ret
	}
	return *o.UsageTimeSHUTOFF
}

// GetUsageTimeSHUTOFFOk returns a tuple with the UsageTimeSHUTOFF field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLevelBillingDetailsMetrics) GetUsageTimeSHUTOFFOk() (*float32, bool) {
	if o == nil || IsNil(o.UsageTimeSHUTOFF) {
		return nil, false
	}
	return o.UsageTimeSHUTOFF, true
}

// HasUsageTimeSHUTOFF returns a boolean if a field has been set.
func (o *ResourceLevelBillingDetailsMetrics) HasUsageTimeSHUTOFF() bool {
	if o != nil && !IsNil(o.UsageTimeSHUTOFF) {
		return true
	}

	return false
}

// SetUsageTimeSHUTOFF gets a reference to the given float32 and assigns it to the UsageTimeSHUTOFF field.
func (o *ResourceLevelBillingDetailsMetrics) SetUsageTimeSHUTOFF(v float32) {
	o.UsageTimeSHUTOFF = &v
}

func (o ResourceLevelBillingDetailsMetrics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceLevelBillingDetailsMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncurredBill) {
		toSerialize["incurred_bill"] = o.IncurredBill
	}
	if !IsNil(o.NonDiscountedBill) {
		toSerialize["non_discounted_bill"] = o.NonDiscountedBill
	}
	if !IsNil(o.NonDiscountedPricePerHour) {
		toSerialize["non_discounted_price_per_hour"] = o.NonDiscountedPricePerHour
	}
	if !IsNil(o.PricePerHour) {
		toSerialize["price_per_hour"] = o.PricePerHour
	}
	if !IsNil(o.UsageTime) {
		toSerialize["usage_time"] = o.UsageTime
	}
	if !IsNil(o.UsageTimeACTIVE) {
		toSerialize["usage_time_ACTIVE"] = o.UsageTimeACTIVE
	}
	if !IsNil(o.UsageTimeHIBERNATED) {
		toSerialize["usage_time_HIBERNATED"] = o.UsageTimeHIBERNATED
	}
	if !IsNil(o.UsageTimeSHUTOFF) {
		toSerialize["usage_time_SHUTOFF"] = o.UsageTimeSHUTOFF
	}
	return toSerialize, nil
}

type NullableResourceLevelBillingDetailsMetrics struct {
	value *ResourceLevelBillingDetailsMetrics
	isSet bool
}

func (v NullableResourceLevelBillingDetailsMetrics) Get() *ResourceLevelBillingDetailsMetrics {
	return v.value
}

func (v *NullableResourceLevelBillingDetailsMetrics) Set(val *ResourceLevelBillingDetailsMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceLevelBillingDetailsMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceLevelBillingDetailsMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceLevelBillingDetailsMetrics(val *ResourceLevelBillingDetailsMetrics) *NullableResourceLevelBillingDetailsMetrics {
	return &NullableResourceLevelBillingDetailsMetrics{value: val, isSet: true}
}

func (v NullableResourceLevelBillingDetailsMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceLevelBillingDetailsMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
