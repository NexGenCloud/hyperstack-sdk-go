/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the InternalInstanceFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternalInstanceFields{}

// InternalInstanceFields struct for InternalInstanceFields
type InternalInstanceFields struct {
	BootSource        *string                                  `json:"boot_source,omitempty"`
	CallbackUrl       *string                                  `json:"callback_url,omitempty"`
	CreatedAt         *CustomTime                              `json:"created_at,omitempty"`
	Environment       *InternalEnvironmentFields               `json:"environment,omitempty"`
	FixedIp           *string                                  `json:"fixed_ip,omitempty"`
	Flavor            *InternalInstanceFlavorFields            `json:"flavor,omitempty"`
	FloatingIp        *string                                  `json:"floating_ip,omitempty"`
	FloatingIpStatus  *string                                  `json:"floating_ip_status,omitempty"`
	Id                *int32                                   `json:"id,omitempty"`
	Image             *InternalInstanceImageFields             `json:"image,omitempty"`
	Keypair           *InternalInstanceKeypairFields           `json:"keypair,omitempty"`
	Name              *string                                  `json:"name,omitempty"`
	OpenstackId       *string                                  `json:"openstack_id,omitempty"`
	PowerState        *string                                  `json:"power_state,omitempty"`
	SecurityRules     []InternalSecurityRulesFieldsForInstance `json:"security_rules,omitempty"`
	Status            *string                                  `json:"status,omitempty"`
	UserData          *string                                  `json:"user_data,omitempty"`
	VmState           *string                                  `json:"vm_state,omitempty"`
	VolumeAttachments []InternalVolumeAttachmentFields         `json:"volume_attachments,omitempty"`
}

// NewInternalInstanceFields instantiates a new InternalInstanceFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalInstanceFields() *InternalInstanceFields {
	this := InternalInstanceFields{}
	return &this
}

// NewInternalInstanceFieldsWithDefaults instantiates a new InternalInstanceFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalInstanceFieldsWithDefaults() *InternalInstanceFields {
	this := InternalInstanceFields{}
	return &this
}

// GetBootSource returns the BootSource field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetBootSource() string {
	if o == nil || IsNil(o.BootSource) {
		var ret string
		return ret
	}
	return *o.BootSource
}

// GetBootSourceOk returns a tuple with the BootSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetBootSourceOk() (*string, bool) {
	if o == nil || IsNil(o.BootSource) {
		return nil, false
	}
	return o.BootSource, true
}

// HasBootSource returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasBootSource() bool {
	if o != nil && !IsNil(o.BootSource) {
		return true
	}

	return false
}

// SetBootSource gets a reference to the given string and assigns it to the BootSource field.
func (o *InternalInstanceFields) SetBootSource(v string) {
	o.BootSource = &v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetCallbackUrl() string {
	if o == nil || IsNil(o.CallbackUrl) {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetCallbackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CallbackUrl) {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasCallbackUrl() bool {
	if o != nil && !IsNil(o.CallbackUrl) {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *InternalInstanceFields) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetCreatedAt() CustomTime {
	if o == nil || IsNil(o.CreatedAt) {
		var ret CustomTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetCreatedAtOk() (*CustomTime, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given CustomTime and assigns it to the CreatedAt field.
func (o *InternalInstanceFields) SetCreatedAt(v CustomTime) {
	o.CreatedAt = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetEnvironment() InternalEnvironmentFields {
	if o == nil || IsNil(o.Environment) {
		var ret InternalEnvironmentFields
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetEnvironmentOk() (*InternalEnvironmentFields, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given InternalEnvironmentFields and assigns it to the Environment field.
func (o *InternalInstanceFields) SetEnvironment(v InternalEnvironmentFields) {
	o.Environment = &v
}

// GetFixedIp returns the FixedIp field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetFixedIp() string {
	if o == nil || IsNil(o.FixedIp) {
		var ret string
		return ret
	}
	return *o.FixedIp
}

// GetFixedIpOk returns a tuple with the FixedIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetFixedIpOk() (*string, bool) {
	if o == nil || IsNil(o.FixedIp) {
		return nil, false
	}
	return o.FixedIp, true
}

// HasFixedIp returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasFixedIp() bool {
	if o != nil && !IsNil(o.FixedIp) {
		return true
	}

	return false
}

// SetFixedIp gets a reference to the given string and assigns it to the FixedIp field.
func (o *InternalInstanceFields) SetFixedIp(v string) {
	o.FixedIp = &v
}

// GetFlavor returns the Flavor field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetFlavor() InternalInstanceFlavorFields {
	if o == nil || IsNil(o.Flavor) {
		var ret InternalInstanceFlavorFields
		return ret
	}
	return *o.Flavor
}

// GetFlavorOk returns a tuple with the Flavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetFlavorOk() (*InternalInstanceFlavorFields, bool) {
	if o == nil || IsNil(o.Flavor) {
		return nil, false
	}
	return o.Flavor, true
}

// HasFlavor returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasFlavor() bool {
	if o != nil && !IsNil(o.Flavor) {
		return true
	}

	return false
}

// SetFlavor gets a reference to the given InternalInstanceFlavorFields and assigns it to the Flavor field.
func (o *InternalInstanceFields) SetFlavor(v InternalInstanceFlavorFields) {
	o.Flavor = &v
}

// GetFloatingIp returns the FloatingIp field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetFloatingIp() string {
	if o == nil || IsNil(o.FloatingIp) {
		var ret string
		return ret
	}
	return *o.FloatingIp
}

// GetFloatingIpOk returns a tuple with the FloatingIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetFloatingIpOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingIp) {
		return nil, false
	}
	return o.FloatingIp, true
}

// HasFloatingIp returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasFloatingIp() bool {
	if o != nil && !IsNil(o.FloatingIp) {
		return true
	}

	return false
}

// SetFloatingIp gets a reference to the given string and assigns it to the FloatingIp field.
func (o *InternalInstanceFields) SetFloatingIp(v string) {
	o.FloatingIp = &v
}

// GetFloatingIpStatus returns the FloatingIpStatus field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetFloatingIpStatus() string {
	if o == nil || IsNil(o.FloatingIpStatus) {
		var ret string
		return ret
	}
	return *o.FloatingIpStatus
}

// GetFloatingIpStatusOk returns a tuple with the FloatingIpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetFloatingIpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingIpStatus) {
		return nil, false
	}
	return o.FloatingIpStatus, true
}

// HasFloatingIpStatus returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasFloatingIpStatus() bool {
	if o != nil && !IsNil(o.FloatingIpStatus) {
		return true
	}

	return false
}

// SetFloatingIpStatus gets a reference to the given string and assigns it to the FloatingIpStatus field.
func (o *InternalInstanceFields) SetFloatingIpStatus(v string) {
	o.FloatingIpStatus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InternalInstanceFields) SetId(v int32) {
	o.Id = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetImage() InternalInstanceImageFields {
	if o == nil || IsNil(o.Image) {
		var ret InternalInstanceImageFields
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetImageOk() (*InternalInstanceImageFields, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given InternalInstanceImageFields and assigns it to the Image field.
func (o *InternalInstanceFields) SetImage(v InternalInstanceImageFields) {
	o.Image = &v
}

// GetKeypair returns the Keypair field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetKeypair() InternalInstanceKeypairFields {
	if o == nil || IsNil(o.Keypair) {
		var ret InternalInstanceKeypairFields
		return ret
	}
	return *o.Keypair
}

// GetKeypairOk returns a tuple with the Keypair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetKeypairOk() (*InternalInstanceKeypairFields, bool) {
	if o == nil || IsNil(o.Keypair) {
		return nil, false
	}
	return o.Keypair, true
}

// HasKeypair returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasKeypair() bool {
	if o != nil && !IsNil(o.Keypair) {
		return true
	}

	return false
}

// SetKeypair gets a reference to the given InternalInstanceKeypairFields and assigns it to the Keypair field.
func (o *InternalInstanceFields) SetKeypair(v InternalInstanceKeypairFields) {
	o.Keypair = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InternalInstanceFields) SetName(v string) {
	o.Name = &v
}

// GetOpenstackId returns the OpenstackId field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetOpenstackId() string {
	if o == nil || IsNil(o.OpenstackId) {
		var ret string
		return ret
	}
	return *o.OpenstackId
}

// GetOpenstackIdOk returns a tuple with the OpenstackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetOpenstackIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenstackId) {
		return nil, false
	}
	return o.OpenstackId, true
}

// HasOpenstackId returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasOpenstackId() bool {
	if o != nil && !IsNil(o.OpenstackId) {
		return true
	}

	return false
}

// SetOpenstackId gets a reference to the given string and assigns it to the OpenstackId field.
func (o *InternalInstanceFields) SetOpenstackId(v string) {
	o.OpenstackId = &v
}

// GetPowerState returns the PowerState field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetPowerState() string {
	if o == nil || IsNil(o.PowerState) {
		var ret string
		return ret
	}
	return *o.PowerState
}

// GetPowerStateOk returns a tuple with the PowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetPowerStateOk() (*string, bool) {
	if o == nil || IsNil(o.PowerState) {
		return nil, false
	}
	return o.PowerState, true
}

// HasPowerState returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasPowerState() bool {
	if o != nil && !IsNil(o.PowerState) {
		return true
	}

	return false
}

// SetPowerState gets a reference to the given string and assigns it to the PowerState field.
func (o *InternalInstanceFields) SetPowerState(v string) {
	o.PowerState = &v
}

// GetSecurityRules returns the SecurityRules field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetSecurityRules() []InternalSecurityRulesFieldsForInstance {
	if o == nil || IsNil(o.SecurityRules) {
		var ret []InternalSecurityRulesFieldsForInstance
		return ret
	}
	return o.SecurityRules
}

// GetSecurityRulesOk returns a tuple with the SecurityRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetSecurityRulesOk() ([]InternalSecurityRulesFieldsForInstance, bool) {
	if o == nil || IsNil(o.SecurityRules) {
		return nil, false
	}
	return o.SecurityRules, true
}

// HasSecurityRules returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasSecurityRules() bool {
	if o != nil && !IsNil(o.SecurityRules) {
		return true
	}

	return false
}

// SetSecurityRules gets a reference to the given []InternalSecurityRulesFieldsForInstance and assigns it to the SecurityRules field.
func (o *InternalInstanceFields) SetSecurityRules(v []InternalSecurityRulesFieldsForInstance) {
	o.SecurityRules = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InternalInstanceFields) SetStatus(v string) {
	o.Status = &v
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetUserData() string {
	if o == nil || IsNil(o.UserData) {
		var ret string
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetUserDataOk() (*string, bool) {
	if o == nil || IsNil(o.UserData) {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasUserData() bool {
	if o != nil && !IsNil(o.UserData) {
		return true
	}

	return false
}

// SetUserData gets a reference to the given string and assigns it to the UserData field.
func (o *InternalInstanceFields) SetUserData(v string) {
	o.UserData = &v
}

// GetVmState returns the VmState field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetVmState() string {
	if o == nil || IsNil(o.VmState) {
		var ret string
		return ret
	}
	return *o.VmState
}

// GetVmStateOk returns a tuple with the VmState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetVmStateOk() (*string, bool) {
	if o == nil || IsNil(o.VmState) {
		return nil, false
	}
	return o.VmState, true
}

// HasVmState returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasVmState() bool {
	if o != nil && !IsNil(o.VmState) {
		return true
	}

	return false
}

// SetVmState gets a reference to the given string and assigns it to the VmState field.
func (o *InternalInstanceFields) SetVmState(v string) {
	o.VmState = &v
}

// GetVolumeAttachments returns the VolumeAttachments field value if set, zero value otherwise.
func (o *InternalInstanceFields) GetVolumeAttachments() []InternalVolumeAttachmentFields {
	if o == nil || IsNil(o.VolumeAttachments) {
		var ret []InternalVolumeAttachmentFields
		return ret
	}
	return o.VolumeAttachments
}

// GetVolumeAttachmentsOk returns a tuple with the VolumeAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalInstanceFields) GetVolumeAttachmentsOk() ([]InternalVolumeAttachmentFields, bool) {
	if o == nil || IsNil(o.VolumeAttachments) {
		return nil, false
	}
	return o.VolumeAttachments, true
}

// HasVolumeAttachments returns a boolean if a field has been set.
func (o *InternalInstanceFields) HasVolumeAttachments() bool {
	if o != nil && !IsNil(o.VolumeAttachments) {
		return true
	}

	return false
}

// SetVolumeAttachments gets a reference to the given []InternalVolumeAttachmentFields and assigns it to the VolumeAttachments field.
func (o *InternalInstanceFields) SetVolumeAttachments(v []InternalVolumeAttachmentFields) {
	o.VolumeAttachments = v
}

func (o InternalInstanceFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalInstanceFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BootSource) {
		toSerialize["boot_source"] = o.BootSource
	}
	if !IsNil(o.CallbackUrl) {
		toSerialize["callback_url"] = o.CallbackUrl
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.FixedIp) {
		toSerialize["fixed_ip"] = o.FixedIp
	}
	if !IsNil(o.Flavor) {
		toSerialize["flavor"] = o.Flavor
	}
	if !IsNil(o.FloatingIp) {
		toSerialize["floating_ip"] = o.FloatingIp
	}
	if !IsNil(o.FloatingIpStatus) {
		toSerialize["floating_ip_status"] = o.FloatingIpStatus
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Keypair) {
		toSerialize["keypair"] = o.Keypair
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OpenstackId) {
		toSerialize["openstack_id"] = o.OpenstackId
	}
	if !IsNil(o.PowerState) {
		toSerialize["power_state"] = o.PowerState
	}
	if !IsNil(o.SecurityRules) {
		toSerialize["security_rules"] = o.SecurityRules
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UserData) {
		toSerialize["user_data"] = o.UserData
	}
	if !IsNil(o.VmState) {
		toSerialize["vm_state"] = o.VmState
	}
	if !IsNil(o.VolumeAttachments) {
		toSerialize["volume_attachments"] = o.VolumeAttachments
	}
	return toSerialize, nil
}

type NullableInternalInstanceFields struct {
	value *InternalInstanceFields
	isSet bool
}

func (v NullableInternalInstanceFields) Get() *InternalInstanceFields {
	return v.value
}

func (v *NullableInternalInstanceFields) Set(val *InternalInstanceFields) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalInstanceFields) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalInstanceFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalInstanceFields(val *InternalInstanceFields) *NullableInternalInstanceFields {
	return &NullableInternalInstanceFields{value: val, isSet: true}
}

func (v NullableInternalInstanceFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalInstanceFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
