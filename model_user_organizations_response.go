/*
Infrahub-API

Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the UserOrganizationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserOrganizationsResponse{}

// UserOrganizationsResponse struct for UserOrganizationsResponse
type UserOrganizationsResponse struct {
	Organizations []OrganizationFields `json:"organizations,omitempty"`
}

// NewUserOrganizationsResponse instantiates a new UserOrganizationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserOrganizationsResponse() *UserOrganizationsResponse {
	this := UserOrganizationsResponse{}
	return &this
}

// NewUserOrganizationsResponseWithDefaults instantiates a new UserOrganizationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserOrganizationsResponseWithDefaults() *UserOrganizationsResponse {
	this := UserOrganizationsResponse{}
	return &this
}

// GetOrganizations returns the Organizations field value if set, zero value otherwise.
func (o *UserOrganizationsResponse) GetOrganizations() []OrganizationFields {
	if o == nil || IsNil(o.Organizations) {
		var ret []OrganizationFields
		return ret
	}
	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserOrganizationsResponse) GetOrganizationsOk() ([]OrganizationFields, bool) {
	if o == nil || IsNil(o.Organizations) {
		return nil, false
	}
	return o.Organizations, true
}

// HasOrganizations returns a boolean if a field has been set.
func (o *UserOrganizationsResponse) HasOrganizations() bool {
	if o != nil && !IsNil(o.Organizations) {
		return true
	}

	return false
}

// SetOrganizations gets a reference to the given []OrganizationFields and assigns it to the Organizations field.
func (o *UserOrganizationsResponse) SetOrganizations(v []OrganizationFields) {
	o.Organizations = v
}

func (o UserOrganizationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserOrganizationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organizations) {
		toSerialize["organizations"] = o.Organizations
	}
	return toSerialize, nil
}

type NullableUserOrganizationsResponse struct {
	value *UserOrganizationsResponse
	isSet bool
}

func (v NullableUserOrganizationsResponse) Get() *UserOrganizationsResponse {
	return v.value
}

func (v *NullableUserOrganizationsResponse) Set(val *UserOrganizationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserOrganizationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserOrganizationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserOrganizationsResponse(val *UserOrganizationsResponse) *NullableUserOrganizationsResponse {
	return &NullableUserOrganizationsResponse{value: val, isSet: true}
}

func (v NullableUserOrganizationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserOrganizationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
